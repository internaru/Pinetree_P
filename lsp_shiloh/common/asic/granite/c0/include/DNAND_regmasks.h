 /*
 **************************************************************************************
 *
 * Copyright (c) 2010 Marvell International, Ltd.
 *
 **************************************************************************************
 *
 * Marvell Commercial License Option
 *
 * If you received this File from Marvell as part of a proprietary software release,
 * the File is considered Marvell Proprietary and Confidential Information, and is
 * licensed to you under the terms of the applicable Commercial License.
 *
 **************************************************************************************
 *
 * Marvell GPL License Option
 *
 * If you received this File from Marvell as part of a Linux distribution, this File
 * is licensed to you in accordance with the terms and conditions of the General Public
 * License Version 2, June 1991 (the "GPL License").  You can redistribute it and/or
 * modify it under the terms of the GPL License; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GPL License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this
 * program.  If not, see http://www.gnu.org/licenses/.
 *
 **************************************************************************************
 *
 * \file DNAND_regmasks.h
 * Generated using RegBuild 1.6.1
 *
 *************************************************************************
 */

#ifndef _DNAND_REGMASKS_H_
#define _DNAND_REGMASKS_H_

#include <stdint.h>

//====================================================================
//
//Register File: Direct NAND Registers (DNAND)
/** \brief This register set includes the registers from NAND Core and Direct NAND Config*/
//
//====================================================================

//====================================================================
//
//Register File: NAND Core Registers (NAND)
/** \brief This file defines the registers for the CHG NAND flash controller*/
//
//====================================================================

//====================================================================
//Register: NAND Control Register (NDCR)
//====================================================================

#define  NAND_NDCR_SPARE_EN_MASK 0x80000000
#define  NAND_NDCR_SPARE_EN_SHIFT 31
#define  NAND_NDCR_SPARE_EN_MASK_SHIFT(reg) (((reg) & NAND_NDCR_SPARE_EN_MASK) >> NAND_NDCR_SPARE_EN_SHIFT)
#define  NAND_NDCR_SPARE_EN_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_SPARE_EN_MASK) | (((uint32_t)val) << NAND_NDCR_SPARE_EN_SHIFT))

#define  NAND_NDCR_ECC_EN_MASK 0x40000000
#define  NAND_NDCR_ECC_EN_SHIFT 30
#define  NAND_NDCR_ECC_EN_MASK_SHIFT(reg) (((reg) & NAND_NDCR_ECC_EN_MASK) >> NAND_NDCR_ECC_EN_SHIFT)
#define  NAND_NDCR_ECC_EN_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_ECC_EN_MASK) | (((uint32_t)val) << NAND_NDCR_ECC_EN_SHIFT))

#define  NAND_NDCR_DMA_EN_MASK 0x20000000
#define  NAND_NDCR_DMA_EN_SHIFT 29
#define  NAND_NDCR_DMA_EN_MASK_SHIFT(reg) (((reg) & NAND_NDCR_DMA_EN_MASK) >> NAND_NDCR_DMA_EN_SHIFT)
#define  NAND_NDCR_DMA_EN_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_DMA_EN_MASK) | (((uint32_t)val) << NAND_NDCR_DMA_EN_SHIFT))

#define  NAND_NDCR_ND_RUN_MASK 0x10000000
#define  NAND_NDCR_ND_RUN_SHIFT 28
#define  NAND_NDCR_ND_RUN_MASK_SHIFT(reg) (((reg) & NAND_NDCR_ND_RUN_MASK) >> NAND_NDCR_ND_RUN_SHIFT)
#define  NAND_NDCR_ND_RUN_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_ND_RUN_MASK) | (((uint32_t)val) << NAND_NDCR_ND_RUN_SHIFT))

#define  NAND_NDCR_DWIDTH_C_MASK 0x8000000
#define  NAND_NDCR_DWIDTH_C_SHIFT 27
#define  NAND_NDCR_DWIDTH_C_MASK_SHIFT(reg) (((reg) & NAND_NDCR_DWIDTH_C_MASK) >> NAND_NDCR_DWIDTH_C_SHIFT)
#define  NAND_NDCR_DWIDTH_C_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_DWIDTH_C_MASK) | (((uint32_t)val) << NAND_NDCR_DWIDTH_C_SHIFT))

#define  NAND_NDCR_DWIDTH_M_MASK 0x4000000
#define  NAND_NDCR_DWIDTH_M_SHIFT 26
#define  NAND_NDCR_DWIDTH_M_MASK_SHIFT(reg) (((reg) & NAND_NDCR_DWIDTH_M_MASK) >> NAND_NDCR_DWIDTH_M_SHIFT)
#define  NAND_NDCR_DWIDTH_M_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_DWIDTH_M_MASK) | (((uint32_t)val) << NAND_NDCR_DWIDTH_M_SHIFT))

#define  NAND_NDCR_PAGE_SZ_MASK 0x3000000
#define  NAND_NDCR_PAGE_SZ_SHIFT 24
#define  NAND_NDCR_PAGE_SZ_MASK_SHIFT(reg) (((reg) & NAND_NDCR_PAGE_SZ_MASK) >> NAND_NDCR_PAGE_SZ_SHIFT)
#define  NAND_NDCR_PAGE_SZ_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_PAGE_SZ_MASK) | (((uint32_t)val) << NAND_NDCR_PAGE_SZ_SHIFT))

#define  NAND_NDCR_SEQ_DIS_MASK 0x800000
#define  NAND_NDCR_SEQ_DIS_SHIFT 23
#define  NAND_NDCR_SEQ_DIS_MASK_SHIFT(reg) (((reg) & NAND_NDCR_SEQ_DIS_MASK) >> NAND_NDCR_SEQ_DIS_SHIFT)
#define  NAND_NDCR_SEQ_DIS_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_SEQ_DIS_MASK) | (((uint32_t)val) << NAND_NDCR_SEQ_DIS_SHIFT))

#define  NAND_NDCR_ND_STOP_MASK 0x400000
#define  NAND_NDCR_ND_STOP_SHIFT 22
#define  NAND_NDCR_ND_STOP_MASK_SHIFT(reg) (((reg) & NAND_NDCR_ND_STOP_MASK) >> NAND_NDCR_ND_STOP_SHIFT)
#define  NAND_NDCR_ND_STOP_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_ND_STOP_MASK) | (((uint32_t)val) << NAND_NDCR_ND_STOP_SHIFT))

#define  NAND_NDCR_FORCE_CSX_MASK 0x200000
#define  NAND_NDCR_FORCE_CSX_SHIFT 21
#define  NAND_NDCR_FORCE_CSX_MASK_SHIFT(reg) (((reg) & NAND_NDCR_FORCE_CSX_MASK) >> NAND_NDCR_FORCE_CSX_SHIFT)
#define  NAND_NDCR_FORCE_CSX_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_FORCE_CSX_MASK) | (((uint32_t)val) << NAND_NDCR_FORCE_CSX_SHIFT))

#define  NAND_NDCR_CLR_PG_CNT_MASK 0x100000
#define  NAND_NDCR_CLR_PG_CNT_SHIFT 20
#define  NAND_NDCR_CLR_PG_CNT_MASK_SHIFT(reg) (((reg) & NAND_NDCR_CLR_PG_CNT_MASK) >> NAND_NDCR_CLR_PG_CNT_SHIFT)
#define  NAND_NDCR_CLR_PG_CNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_CLR_PG_CNT_MASK) | (((uint32_t)val) << NAND_NDCR_CLR_PG_CNT_SHIFT))

#define  NAND_NDCR_STOP_ON_UNCOR_MASK 0x80000
#define  NAND_NDCR_STOP_ON_UNCOR_SHIFT 19
#define  NAND_NDCR_STOP_ON_UNCOR_MASK_SHIFT(reg) (((reg) & NAND_NDCR_STOP_ON_UNCOR_MASK) >> NAND_NDCR_STOP_ON_UNCOR_SHIFT)
#define  NAND_NDCR_STOP_ON_UNCOR_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_STOP_ON_UNCOR_MASK) | (((uint32_t)val) << NAND_NDCR_STOP_ON_UNCOR_SHIFT))

#define  NAND_NDCR_RD_ID_CNT_MASK 0x70000
#define  NAND_NDCR_RD_ID_CNT_SHIFT 16
#define  NAND_NDCR_RD_ID_CNT_MASK_SHIFT(reg) (((reg) & NAND_NDCR_RD_ID_CNT_MASK) >> NAND_NDCR_RD_ID_CNT_SHIFT)
#define  NAND_NDCR_RD_ID_CNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_RD_ID_CNT_MASK) | (((uint32_t)val) << NAND_NDCR_RD_ID_CNT_SHIFT))

#define  NAND_NDCR_RA_START_MASK 0x8000
#define  NAND_NDCR_RA_START_SHIFT 15
#define  NAND_NDCR_RA_START_MASK_SHIFT(reg) (((reg) & NAND_NDCR_RA_START_MASK) >> NAND_NDCR_RA_START_SHIFT)
#define  NAND_NDCR_RA_START_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_RA_START_MASK) | (((uint32_t)val) << NAND_NDCR_RA_START_SHIFT))

#define  NAND_NDCR_PG_PER_BLK_MASK 0x6000
#define  NAND_NDCR_PG_PER_BLK_SHIFT 13
#define  NAND_NDCR_PG_PER_BLK_MASK_SHIFT(reg) (((reg) & NAND_NDCR_PG_PER_BLK_MASK) >> NAND_NDCR_PG_PER_BLK_SHIFT)
#define  NAND_NDCR_PG_PER_BLK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_PG_PER_BLK_MASK) | (((uint32_t)val) << NAND_NDCR_PG_PER_BLK_SHIFT))

#define  NAND_NDCR_ND_ARB_EN_MASK 0x1000
#define  NAND_NDCR_ND_ARB_EN_SHIFT 12
#define  NAND_NDCR_ND_ARB_EN_MASK_SHIFT(reg) (((reg) & NAND_NDCR_ND_ARB_EN_MASK) >> NAND_NDCR_ND_ARB_EN_SHIFT)
#define  NAND_NDCR_ND_ARB_EN_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_ND_ARB_EN_MASK) | (((uint32_t)val) << NAND_NDCR_ND_ARB_EN_SHIFT))

#define  NAND_NDCR_RDYM_MASK 0x800
#define  NAND_NDCR_RDYM_SHIFT 11
#define  NAND_NDCR_RDYM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_RDYM_MASK) >> NAND_NDCR_RDYM_SHIFT)
#define  NAND_NDCR_RDYM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_RDYM_MASK) | (((uint32_t)val) << NAND_NDCR_RDYM_SHIFT))

#define  NAND_NDCR_CS0_PAGEDM_MASK 0x400
#define  NAND_NDCR_CS0_PAGEDM_SHIFT 10
#define  NAND_NDCR_CS0_PAGEDM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_CS0_PAGEDM_MASK) >> NAND_NDCR_CS0_PAGEDM_SHIFT)
#define  NAND_NDCR_CS0_PAGEDM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_CS0_PAGEDM_MASK) | (((uint32_t)val) << NAND_NDCR_CS0_PAGEDM_SHIFT))

#define  NAND_NDCR_CS1_PAGEDM_MASK 0x200
#define  NAND_NDCR_CS1_PAGEDM_SHIFT 9
#define  NAND_NDCR_CS1_PAGEDM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_CS1_PAGEDM_MASK) >> NAND_NDCR_CS1_PAGEDM_SHIFT)
#define  NAND_NDCR_CS1_PAGEDM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_CS1_PAGEDM_MASK) | (((uint32_t)val) << NAND_NDCR_CS1_PAGEDM_SHIFT))

#define  NAND_NDCR_CS0_CMDDM_MASK 0x100
#define  NAND_NDCR_CS0_CMDDM_SHIFT 8
#define  NAND_NDCR_CS0_CMDDM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_CS0_CMDDM_MASK) >> NAND_NDCR_CS0_CMDDM_SHIFT)
#define  NAND_NDCR_CS0_CMDDM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_CS0_CMDDM_MASK) | (((uint32_t)val) << NAND_NDCR_CS0_CMDDM_SHIFT))

#define  NAND_NDCR_CS1_CMDDM_MASK 0x80
#define  NAND_NDCR_CS1_CMDDM_SHIFT 7
#define  NAND_NDCR_CS1_CMDDM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_CS1_CMDDM_MASK) >> NAND_NDCR_CS1_CMDDM_SHIFT)
#define  NAND_NDCR_CS1_CMDDM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_CS1_CMDDM_MASK) | (((uint32_t)val) << NAND_NDCR_CS1_CMDDM_SHIFT))

#define  NAND_NDCR_CS0_BBDM_MASK 0x40
#define  NAND_NDCR_CS0_BBDM_SHIFT 6
#define  NAND_NDCR_CS0_BBDM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_CS0_BBDM_MASK) >> NAND_NDCR_CS0_BBDM_SHIFT)
#define  NAND_NDCR_CS0_BBDM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_CS0_BBDM_MASK) | (((uint32_t)val) << NAND_NDCR_CS0_BBDM_SHIFT))

#define  NAND_NDCR_CS1_BBDM_MASK 0x20
#define  NAND_NDCR_CS1_BBDM_SHIFT 5
#define  NAND_NDCR_CS1_BBDM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_CS1_BBDM_MASK) >> NAND_NDCR_CS1_BBDM_SHIFT)
#define  NAND_NDCR_CS1_BBDM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_CS1_BBDM_MASK) | (((uint32_t)val) << NAND_NDCR_CS1_BBDM_SHIFT))

#define  NAND_NDCR_UNCERRM_MASK 0x10
#define  NAND_NDCR_UNCERRM_SHIFT 4
#define  NAND_NDCR_UNCERRM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_UNCERRM_MASK) >> NAND_NDCR_UNCERRM_SHIFT)
#define  NAND_NDCR_UNCERRM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_UNCERRM_MASK) | (((uint32_t)val) << NAND_NDCR_UNCERRM_SHIFT))

#define  NAND_NDCR_CORERRM_MASK 0x8
#define  NAND_NDCR_CORERRM_SHIFT 3
#define  NAND_NDCR_CORERRM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_CORERRM_MASK) >> NAND_NDCR_CORERRM_SHIFT)
#define  NAND_NDCR_CORERRM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_CORERRM_MASK) | (((uint32_t)val) << NAND_NDCR_CORERRM_SHIFT))

#define  NAND_NDCR_WRDREQM_MASK 0x4
#define  NAND_NDCR_WRDREQM_SHIFT 2
#define  NAND_NDCR_WRDREQM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_WRDREQM_MASK) >> NAND_NDCR_WRDREQM_SHIFT)
#define  NAND_NDCR_WRDREQM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_WRDREQM_MASK) | (((uint32_t)val) << NAND_NDCR_WRDREQM_SHIFT))

#define  NAND_NDCR_RDDREQM_MASK 0x2
#define  NAND_NDCR_RDDREQM_SHIFT 1
#define  NAND_NDCR_RDDREQM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_RDDREQM_MASK) >> NAND_NDCR_RDDREQM_SHIFT)
#define  NAND_NDCR_RDDREQM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_RDDREQM_MASK) | (((uint32_t)val) << NAND_NDCR_RDDREQM_SHIFT))

#define  NAND_NDCR_WRCMDREQM_MASK 0x1
#define  NAND_NDCR_WRCMDREQM_SHIFT 0
#define  NAND_NDCR_WRCMDREQM_MASK_SHIFT(reg) (((reg) & NAND_NDCR_WRCMDREQM_MASK) >> NAND_NDCR_WRCMDREQM_SHIFT)
#define  NAND_NDCR_WRCMDREQM_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCR_WRCMDREQM_MASK) | (((uint32_t)val) << NAND_NDCR_WRCMDREQM_SHIFT))

//====================================================================
//Register: NAND Timing Register 0 (NDTR0CS0)
//====================================================================

#define  NAND_NDTR0CS0_TADL_MASK 0xf8000000
#define  NAND_NDTR0CS0_TADL_SHIFT 27
#define  NAND_NDTR0CS0_TADL_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_TADL_MASK) >> NAND_NDTR0CS0_TADL_SHIFT)
#define  NAND_NDTR0CS0_TADL_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_TADL_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_TADL_SHIFT))

#define  NAND_NDTR0CS0_SEL_CNTR_MASK 0x4000000
#define  NAND_NDTR0CS0_SEL_CNTR_SHIFT 26
#define  NAND_NDTR0CS0_SEL_CNTR_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_SEL_CNTR_MASK) >> NAND_NDTR0CS0_SEL_CNTR_SHIFT)
#define  NAND_NDTR0CS0_SEL_CNTR_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_SEL_CNTR_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_SEL_CNTR_SHIFT))

#define  NAND_NDTR0CS0_RD_CNT_DEL_MASK 0x3c00000
#define  NAND_NDTR0CS0_RD_CNT_DEL_SHIFT 22
#define  NAND_NDTR0CS0_RD_CNT_DEL_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_RD_CNT_DEL_MASK) >> NAND_NDTR0CS0_RD_CNT_DEL_SHIFT)
#define  NAND_NDTR0CS0_RD_CNT_DEL_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_RD_CNT_DEL_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_RD_CNT_DEL_SHIFT))

#define  NAND_NDTR0CS0_TCH_MASK 0x380000
#define  NAND_NDTR0CS0_TCH_SHIFT 19
#define  NAND_NDTR0CS0_TCH_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_TCH_MASK) >> NAND_NDTR0CS0_TCH_SHIFT)
#define  NAND_NDTR0CS0_TCH_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_TCH_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_TCH_SHIFT))

#define  NAND_NDTR0CS0_TCS_MASK 0x70000
#define  NAND_NDTR0CS0_TCS_SHIFT 16
#define  NAND_NDTR0CS0_TCS_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_TCS_MASK) >> NAND_NDTR0CS0_TCS_SHIFT)
#define  NAND_NDTR0CS0_TCS_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_TCS_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_TCS_SHIFT))

#define  NAND_NDTR0CS0_RESERVED1_MASK 0xc000
#define  NAND_NDTR0CS0_RESERVED1_SHIFT 14
#define  NAND_NDTR0CS0_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_RESERVED1_MASK) >> NAND_NDTR0CS0_RESERVED1_SHIFT)
#define  NAND_NDTR0CS0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_RESERVED1_SHIFT))

#define  NAND_NDTR0CS0_TWH_MASK 0x3800
#define  NAND_NDTR0CS0_TWH_SHIFT 11
#define  NAND_NDTR0CS0_TWH_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_TWH_MASK) >> NAND_NDTR0CS0_TWH_SHIFT)
#define  NAND_NDTR0CS0_TWH_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_TWH_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_TWH_SHIFT))

#define  NAND_NDTR0CS0_TWP_MASK 0x700
#define  NAND_NDTR0CS0_TWP_SHIFT 8
#define  NAND_NDTR0CS0_TWP_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_TWP_MASK) >> NAND_NDTR0CS0_TWP_SHIFT)
#define  NAND_NDTR0CS0_TWP_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_TWP_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_TWP_SHIFT))

#define  NAND_NDTR0CS0_RESERVED2_MASK 0x80
#define  NAND_NDTR0CS0_RESERVED2_SHIFT 7
#define  NAND_NDTR0CS0_RESERVED2_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_RESERVED2_MASK) >> NAND_NDTR0CS0_RESERVED2_SHIFT)
#define  NAND_NDTR0CS0_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_RESERVED2_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_RESERVED2_SHIFT))

#define  NAND_NDTR0CS0_ETRP_MASK 0x40
#define  NAND_NDTR0CS0_ETRP_SHIFT 6
#define  NAND_NDTR0CS0_ETRP_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_ETRP_MASK) >> NAND_NDTR0CS0_ETRP_SHIFT)
#define  NAND_NDTR0CS0_ETRP_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_ETRP_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_ETRP_SHIFT))

#define  NAND_NDTR0CS0_TRH_MASK 0x38
#define  NAND_NDTR0CS0_TRH_SHIFT 3
#define  NAND_NDTR0CS0_TRH_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_TRH_MASK) >> NAND_NDTR0CS0_TRH_SHIFT)
#define  NAND_NDTR0CS0_TRH_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_TRH_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_TRH_SHIFT))

#define  NAND_NDTR0CS0_TRP_MASK 0x7
#define  NAND_NDTR0CS0_TRP_SHIFT 0
#define  NAND_NDTR0CS0_TRP_MASK_SHIFT(reg) (((reg) & NAND_NDTR0CS0_TRP_MASK) >> NAND_NDTR0CS0_TRP_SHIFT)
#define  NAND_NDTR0CS0_TRP_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR0CS0_TRP_MASK) | (((uint32_t)val) << NAND_NDTR0CS0_TRP_SHIFT))

//====================================================================
//Register: NAND Timing Register 1 (NDTR1CS0)
//====================================================================

#define  NAND_NDTR1CS0_TR_MASK 0xffff0000
#define  NAND_NDTR1CS0_TR_SHIFT 16
#define  NAND_NDTR1CS0_TR_MASK_SHIFT(reg) (((reg) & NAND_NDTR1CS0_TR_MASK) >> NAND_NDTR1CS0_TR_SHIFT)
#define  NAND_NDTR1CS0_TR_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR1CS0_TR_MASK) | (((uint32_t)val) << NAND_NDTR1CS0_TR_SHIFT))

#define  NAND_NDTR1CS0_WAIT_MODE_MASK 0x8000
#define  NAND_NDTR1CS0_WAIT_MODE_SHIFT 15
#define  NAND_NDTR1CS0_WAIT_MODE_MASK_SHIFT(reg) (((reg) & NAND_NDTR1CS0_WAIT_MODE_MASK) >> NAND_NDTR1CS0_WAIT_MODE_SHIFT)
#define  NAND_NDTR1CS0_WAIT_MODE_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR1CS0_WAIT_MODE_MASK) | (((uint32_t)val) << NAND_NDTR1CS0_WAIT_MODE_SHIFT))

#define  NAND_NDTR1CS0_PRESCALE_MASK 0x4000
#define  NAND_NDTR1CS0_PRESCALE_SHIFT 14
#define  NAND_NDTR1CS0_PRESCALE_MASK_SHIFT(reg) (((reg) & NAND_NDTR1CS0_PRESCALE_MASK) >> NAND_NDTR1CS0_PRESCALE_SHIFT)
#define  NAND_NDTR1CS0_PRESCALE_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR1CS0_PRESCALE_MASK) | (((uint32_t)val) << NAND_NDTR1CS0_PRESCALE_SHIFT))

#define  NAND_NDTR1CS0_RESERVED1_MASK 0x3f00
#define  NAND_NDTR1CS0_RESERVED1_SHIFT 8
#define  NAND_NDTR1CS0_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDTR1CS0_RESERVED1_MASK) >> NAND_NDTR1CS0_RESERVED1_SHIFT)
#define  NAND_NDTR1CS0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR1CS0_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDTR1CS0_RESERVED1_SHIFT))

#define  NAND_NDTR1CS0_TWHR_MASK 0xf0
#define  NAND_NDTR1CS0_TWHR_SHIFT 4
#define  NAND_NDTR1CS0_TWHR_MASK_SHIFT(reg) (((reg) & NAND_NDTR1CS0_TWHR_MASK) >> NAND_NDTR1CS0_TWHR_SHIFT)
#define  NAND_NDTR1CS0_TWHR_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR1CS0_TWHR_MASK) | (((uint32_t)val) << NAND_NDTR1CS0_TWHR_SHIFT))

#define  NAND_NDTR1CS0_TAR_MASK 0xf
#define  NAND_NDTR1CS0_TAR_SHIFT 0
#define  NAND_NDTR1CS0_TAR_MASK_SHIFT(reg) (((reg) & NAND_NDTR1CS0_TAR_MASK) >> NAND_NDTR1CS0_TAR_SHIFT)
#define  NAND_NDTR1CS0_TAR_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDTR1CS0_TAR_MASK) | (((uint32_t)val) << NAND_NDTR1CS0_TAR_SHIFT))

//====================================================================
//Register: NAND Status Register (NDSR)
//====================================================================

#define  NAND_NDSR_RESERVED1_MASK 0xffe00000
#define  NAND_NDSR_RESERVED1_SHIFT 21
#define  NAND_NDSR_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDSR_RESERVED1_MASK) >> NAND_NDSR_RESERVED1_SHIFT)
#define  NAND_NDSR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDSR_RESERVED1_SHIFT))

#define  NAND_NDSR_ERR_CNT_MASK 0x1f0000
#define  NAND_NDSR_ERR_CNT_SHIFT 16
#define  NAND_NDSR_ERR_CNT_MASK_SHIFT(reg) (((reg) & NAND_NDSR_ERR_CNT_MASK) >> NAND_NDSR_ERR_CNT_SHIFT)
#define  NAND_NDSR_ERR_CNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_ERR_CNT_MASK) | (((uint32_t)val) << NAND_NDSR_ERR_CNT_SHIFT))

#define  NAND_NDSR_TRUSTVIO_MASK 0x8000
#define  NAND_NDSR_TRUSTVIO_SHIFT 15
#define  NAND_NDSR_TRUSTVIO_MASK_SHIFT(reg) (((reg) & NAND_NDSR_TRUSTVIO_MASK) >> NAND_NDSR_TRUSTVIO_SHIFT)
#define  NAND_NDSR_TRUSTVIO_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_TRUSTVIO_MASK) | (((uint32_t)val) << NAND_NDSR_TRUSTVIO_SHIFT))

#define  NAND_NDSR_RESERVED2_MASK 0x6000
#define  NAND_NDSR_RESERVED2_SHIFT 13
#define  NAND_NDSR_RESERVED2_MASK_SHIFT(reg) (((reg) & NAND_NDSR_RESERVED2_MASK) >> NAND_NDSR_RESERVED2_SHIFT)
#define  NAND_NDSR_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_RESERVED2_MASK) | (((uint32_t)val) << NAND_NDSR_RESERVED2_SHIFT))

#define  NAND_NDSR_RDY1_MASK 0x1000
#define  NAND_NDSR_RDY1_SHIFT 12
#define  NAND_NDSR_RDY1_MASK_SHIFT(reg) (((reg) & NAND_NDSR_RDY1_MASK) >> NAND_NDSR_RDY1_SHIFT)
#define  NAND_NDSR_RDY1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_RDY1_MASK) | (((uint32_t)val) << NAND_NDSR_RDY1_SHIFT))

#define  NAND_NDSR_RDY0_MASK 0x800
#define  NAND_NDSR_RDY0_SHIFT 11
#define  NAND_NDSR_RDY0_MASK_SHIFT(reg) (((reg) & NAND_NDSR_RDY0_MASK) >> NAND_NDSR_RDY0_SHIFT)
#define  NAND_NDSR_RDY0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_RDY0_MASK) | (((uint32_t)val) << NAND_NDSR_RDY0_SHIFT))

#define  NAND_NDSR_CS0_PAGED_MASK 0x400
#define  NAND_NDSR_CS0_PAGED_SHIFT 10
#define  NAND_NDSR_CS0_PAGED_MASK_SHIFT(reg) (((reg) & NAND_NDSR_CS0_PAGED_MASK) >> NAND_NDSR_CS0_PAGED_SHIFT)
#define  NAND_NDSR_CS0_PAGED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_CS0_PAGED_MASK) | (((uint32_t)val) << NAND_NDSR_CS0_PAGED_SHIFT))

#define  NAND_NDSR_CS1_PAGED_MASK 0x200
#define  NAND_NDSR_CS1_PAGED_SHIFT 9
#define  NAND_NDSR_CS1_PAGED_MASK_SHIFT(reg) (((reg) & NAND_NDSR_CS1_PAGED_MASK) >> NAND_NDSR_CS1_PAGED_SHIFT)
#define  NAND_NDSR_CS1_PAGED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_CS1_PAGED_MASK) | (((uint32_t)val) << NAND_NDSR_CS1_PAGED_SHIFT))

#define  NAND_NDSR_CS0_CMDD_MASK 0x100
#define  NAND_NDSR_CS0_CMDD_SHIFT 8
#define  NAND_NDSR_CS0_CMDD_MASK_SHIFT(reg) (((reg) & NAND_NDSR_CS0_CMDD_MASK) >> NAND_NDSR_CS0_CMDD_SHIFT)
#define  NAND_NDSR_CS0_CMDD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_CS0_CMDD_MASK) | (((uint32_t)val) << NAND_NDSR_CS0_CMDD_SHIFT))

#define  NAND_NDSR_CS1_CMDD_MASK 0x80
#define  NAND_NDSR_CS1_CMDD_SHIFT 7
#define  NAND_NDSR_CS1_CMDD_MASK_SHIFT(reg) (((reg) & NAND_NDSR_CS1_CMDD_MASK) >> NAND_NDSR_CS1_CMDD_SHIFT)
#define  NAND_NDSR_CS1_CMDD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_CS1_CMDD_MASK) | (((uint32_t)val) << NAND_NDSR_CS1_CMDD_SHIFT))

#define  NAND_NDSR_CS0_BBD_MASK 0x40
#define  NAND_NDSR_CS0_BBD_SHIFT 6
#define  NAND_NDSR_CS0_BBD_MASK_SHIFT(reg) (((reg) & NAND_NDSR_CS0_BBD_MASK) >> NAND_NDSR_CS0_BBD_SHIFT)
#define  NAND_NDSR_CS0_BBD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_CS0_BBD_MASK) | (((uint32_t)val) << NAND_NDSR_CS0_BBD_SHIFT))

#define  NAND_NDSR_CS1_BBD_MASK 0x20
#define  NAND_NDSR_CS1_BBD_SHIFT 5
#define  NAND_NDSR_CS1_BBD_MASK_SHIFT(reg) (((reg) & NAND_NDSR_CS1_BBD_MASK) >> NAND_NDSR_CS1_BBD_SHIFT)
#define  NAND_NDSR_CS1_BBD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_CS1_BBD_MASK) | (((uint32_t)val) << NAND_NDSR_CS1_BBD_SHIFT))

#define  NAND_NDSR_UNCERR_MASK 0x10
#define  NAND_NDSR_UNCERR_SHIFT 4
#define  NAND_NDSR_UNCERR_MASK_SHIFT(reg) (((reg) & NAND_NDSR_UNCERR_MASK) >> NAND_NDSR_UNCERR_SHIFT)
#define  NAND_NDSR_UNCERR_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_UNCERR_MASK) | (((uint32_t)val) << NAND_NDSR_UNCERR_SHIFT))

#define  NAND_NDSR_CORERR_MASK 0x8
#define  NAND_NDSR_CORERR_SHIFT 3
#define  NAND_NDSR_CORERR_MASK_SHIFT(reg) (((reg) & NAND_NDSR_CORERR_MASK) >> NAND_NDSR_CORERR_SHIFT)
#define  NAND_NDSR_CORERR_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_CORERR_MASK) | (((uint32_t)val) << NAND_NDSR_CORERR_SHIFT))

#define  NAND_NDSR_WRDREQ_MASK 0x4
#define  NAND_NDSR_WRDREQ_SHIFT 2
#define  NAND_NDSR_WRDREQ_MASK_SHIFT(reg) (((reg) & NAND_NDSR_WRDREQ_MASK) >> NAND_NDSR_WRDREQ_SHIFT)
#define  NAND_NDSR_WRDREQ_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_WRDREQ_MASK) | (((uint32_t)val) << NAND_NDSR_WRDREQ_SHIFT))

#define  NAND_NDSR_RDDREQ_MASK 0x2
#define  NAND_NDSR_RDDREQ_SHIFT 1
#define  NAND_NDSR_RDDREQ_MASK_SHIFT(reg) (((reg) & NAND_NDSR_RDDREQ_MASK) >> NAND_NDSR_RDDREQ_SHIFT)
#define  NAND_NDSR_RDDREQ_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_RDDREQ_MASK) | (((uint32_t)val) << NAND_NDSR_RDDREQ_SHIFT))

#define  NAND_NDSR_WRCMDREQ_MASK 0x1
#define  NAND_NDSR_WRCMDREQ_SHIFT 0
#define  NAND_NDSR_WRCMDREQ_MASK_SHIFT(reg) (((reg) & NAND_NDSR_WRCMDREQ_MASK) >> NAND_NDSR_WRCMDREQ_SHIFT)
#define  NAND_NDSR_WRCMDREQ_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDSR_WRCMDREQ_MASK) | (((uint32_t)val) << NAND_NDSR_WRCMDREQ_SHIFT))

//====================================================================
//Register: NAND Page Count Register (NDPCR)
//====================================================================

#define  NAND_NDPCR_RESERVED1_MASK 0xff000000
#define  NAND_NDPCR_RESERVED1_SHIFT 24
#define  NAND_NDPCR_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPCR_RESERVED1_MASK) >> NAND_NDPCR_RESERVED1_SHIFT)
#define  NAND_NDPCR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPCR_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPCR_RESERVED1_SHIFT))

#define  NAND_NDPCR_PG_CNT_1_MASK 0xff0000
#define  NAND_NDPCR_PG_CNT_1_SHIFT 16
#define  NAND_NDPCR_PG_CNT_1_MASK_SHIFT(reg) (((reg) & NAND_NDPCR_PG_CNT_1_MASK) >> NAND_NDPCR_PG_CNT_1_SHIFT)
#define  NAND_NDPCR_PG_CNT_1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPCR_PG_CNT_1_MASK) | (((uint32_t)val) << NAND_NDPCR_PG_CNT_1_SHIFT))

#define  NAND_NDPCR_RESERVED2_MASK 0xff00
#define  NAND_NDPCR_RESERVED2_SHIFT 8
#define  NAND_NDPCR_RESERVED2_MASK_SHIFT(reg) (((reg) & NAND_NDPCR_RESERVED2_MASK) >> NAND_NDPCR_RESERVED2_SHIFT)
#define  NAND_NDPCR_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPCR_RESERVED2_MASK) | (((uint32_t)val) << NAND_NDPCR_RESERVED2_SHIFT))

#define  NAND_NDPCR_PG_CNT_0_MASK 0xff
#define  NAND_NDPCR_PG_CNT_0_SHIFT 0
#define  NAND_NDPCR_PG_CNT_0_MASK_SHIFT(reg) (((reg) & NAND_NDPCR_PG_CNT_0_MASK) >> NAND_NDPCR_PG_CNT_0_SHIFT)
#define  NAND_NDPCR_PG_CNT_0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPCR_PG_CNT_0_MASK) | (((uint32_t)val) << NAND_NDPCR_PG_CNT_0_SHIFT))

//====================================================================
//Register: NAND Bad Block Register 0 (NDBBR0)
//====================================================================

#define  NAND_NDBBR0_BBI_MASK 0xffffffff
#define  NAND_NDBBR0_BBI_SHIFT 0
#define  NAND_NDBBR0_BBI_MASK_SHIFT(reg) (((reg) & NAND_NDBBR0_BBI_MASK) >> NAND_NDBBR0_BBI_SHIFT)
#define  NAND_NDBBR0_BBI_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDBBR0_BBI_MASK) | (((uint32_t)val) << NAND_NDBBR0_BBI_SHIFT))

//====================================================================
//Register: NAND Bad Block Register 1 (NDBBR1)
//====================================================================

#define  NAND_NDBBR1_BBI_MASK 0xffffffff
#define  NAND_NDBBR1_BBI_SHIFT 0
#define  NAND_NDBBR1_BBI_MASK_SHIFT(reg) (((reg) & NAND_NDBBR1_BBI_MASK) >> NAND_NDBBR1_BBI_SHIFT)
#define  NAND_NDBBR1_BBI_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDBBR1_BBI_MASK) | (((uint32_t)val) << NAND_NDBBR1_BBI_SHIFT))

//====================================================================
//Register: NAND Read Enable Return Delay Register (NDREDEL)
//====================================================================

#define  NAND_NDREDEL_RESERVED1_MASK 0xf0000000
#define  NAND_NDREDEL_RESERVED1_SHIFT 28
#define  NAND_NDREDEL_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_RESERVED1_MASK) >> NAND_NDREDEL_RESERVED1_SHIFT)
#define  NAND_NDREDEL_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDREDEL_RESERVED1_SHIFT))

#define  NAND_NDREDEL_ND_RE_EN_MASK 0x8000000
#define  NAND_NDREDEL_ND_RE_EN_SHIFT 27
#define  NAND_NDREDEL_ND_RE_EN_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_EN_MASK) >> NAND_NDREDEL_ND_RE_EN_SHIFT)
#define  NAND_NDREDEL_ND_RE_EN_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_EN_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_EN_SHIFT))

#define  NAND_NDREDEL_ND_RE_SEL_MASK 0x7000000
#define  NAND_NDREDEL_ND_RE_SEL_SHIFT 24
#define  NAND_NDREDEL_ND_RE_SEL_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_SEL_MASK) >> NAND_NDREDEL_ND_RE_SEL_SHIFT)
#define  NAND_NDREDEL_ND_RE_SEL_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_SEL_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_SEL_SHIFT))

#define  NAND_NDREDEL_ND_RE_DEL_7_MASK 0xe00000
#define  NAND_NDREDEL_ND_RE_DEL_7_SHIFT 21
#define  NAND_NDREDEL_ND_RE_DEL_7_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_DEL_7_MASK) >> NAND_NDREDEL_ND_RE_DEL_7_SHIFT)
#define  NAND_NDREDEL_ND_RE_DEL_7_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_DEL_7_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_DEL_7_SHIFT))

#define  NAND_NDREDEL_ND_RE_DEL_6_MASK 0x1c0000
#define  NAND_NDREDEL_ND_RE_DEL_6_SHIFT 18
#define  NAND_NDREDEL_ND_RE_DEL_6_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_DEL_6_MASK) >> NAND_NDREDEL_ND_RE_DEL_6_SHIFT)
#define  NAND_NDREDEL_ND_RE_DEL_6_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_DEL_6_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_DEL_6_SHIFT))

#define  NAND_NDREDEL_ND_RE_DEL_5_MASK 0x38000
#define  NAND_NDREDEL_ND_RE_DEL_5_SHIFT 15
#define  NAND_NDREDEL_ND_RE_DEL_5_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_DEL_5_MASK) >> NAND_NDREDEL_ND_RE_DEL_5_SHIFT)
#define  NAND_NDREDEL_ND_RE_DEL_5_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_DEL_5_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_DEL_5_SHIFT))

#define  NAND_NDREDEL_ND_RE_DEL_4_MASK 0x7000
#define  NAND_NDREDEL_ND_RE_DEL_4_SHIFT 12
#define  NAND_NDREDEL_ND_RE_DEL_4_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_DEL_4_MASK) >> NAND_NDREDEL_ND_RE_DEL_4_SHIFT)
#define  NAND_NDREDEL_ND_RE_DEL_4_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_DEL_4_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_DEL_4_SHIFT))

#define  NAND_NDREDEL_ND_RE_DEL_3_MASK 0xe00
#define  NAND_NDREDEL_ND_RE_DEL_3_SHIFT 9
#define  NAND_NDREDEL_ND_RE_DEL_3_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_DEL_3_MASK) >> NAND_NDREDEL_ND_RE_DEL_3_SHIFT)
#define  NAND_NDREDEL_ND_RE_DEL_3_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_DEL_3_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_DEL_3_SHIFT))

#define  NAND_NDREDEL_ND_RE_DEL_2_MASK 0x1c0
#define  NAND_NDREDEL_ND_RE_DEL_2_SHIFT 6
#define  NAND_NDREDEL_ND_RE_DEL_2_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_DEL_2_MASK) >> NAND_NDREDEL_ND_RE_DEL_2_SHIFT)
#define  NAND_NDREDEL_ND_RE_DEL_2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_DEL_2_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_DEL_2_SHIFT))

#define  NAND_NDREDEL_ND_RE_DEL_1_MASK 0x38
#define  NAND_NDREDEL_ND_RE_DEL_1_SHIFT 3
#define  NAND_NDREDEL_ND_RE_DEL_1_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_DEL_1_MASK) >> NAND_NDREDEL_ND_RE_DEL_1_SHIFT)
#define  NAND_NDREDEL_ND_RE_DEL_1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_DEL_1_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_DEL_1_SHIFT))

#define  NAND_NDREDEL_ND_RE_DEL_0_MASK 0x7
#define  NAND_NDREDEL_ND_RE_DEL_0_SHIFT 0
#define  NAND_NDREDEL_ND_RE_DEL_0_MASK_SHIFT(reg) (((reg) & NAND_NDREDEL_ND_RE_DEL_0_MASK) >> NAND_NDREDEL_ND_RE_DEL_0_SHIFT)
#define  NAND_NDREDEL_ND_RE_DEL_0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDREDEL_ND_RE_DEL_0_MASK) | (((uint32_t)val) << NAND_NDREDEL_ND_RE_DEL_0_SHIFT))

//====================================================================
//Register: NAND ECC Control Register (NDECCCTRL)
//====================================================================

#define  NAND_NDECCCTRL_RESERVED1_MASK 0xffff8000
#define  NAND_NDECCCTRL_RESERVED1_SHIFT 15
#define  NAND_NDECCCTRL_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDECCCTRL_RESERVED1_MASK) >> NAND_NDECCCTRL_RESERVED1_SHIFT)
#define  NAND_NDECCCTRL_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDECCCTRL_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDECCCTRL_RESERVED1_SHIFT))

#define  NAND_NDECCCTRL_ECC_SPARE_MASK 0x7f80
#define  NAND_NDECCCTRL_ECC_SPARE_SHIFT 7
#define  NAND_NDECCCTRL_ECC_SPARE_MASK_SHIFT(reg) (((reg) & NAND_NDECCCTRL_ECC_SPARE_MASK) >> NAND_NDECCCTRL_ECC_SPARE_SHIFT)
#define  NAND_NDECCCTRL_ECC_SPARE_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDECCCTRL_ECC_SPARE_MASK) | (((uint32_t)val) << NAND_NDECCCTRL_ECC_SPARE_SHIFT))

#define  NAND_NDECCCTRL_ECC_THRESH_MASK 0x7e
#define  NAND_NDECCCTRL_ECC_THRESH_SHIFT 1
#define  NAND_NDECCCTRL_ECC_THRESH_MASK_SHIFT(reg) (((reg) & NAND_NDECCCTRL_ECC_THRESH_MASK) >> NAND_NDECCCTRL_ECC_THRESH_SHIFT)
#define  NAND_NDECCCTRL_ECC_THRESH_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDECCCTRL_ECC_THRESH_MASK) | (((uint32_t)val) << NAND_NDECCCTRL_ECC_THRESH_SHIFT))

#define  NAND_NDECCCTRL_BCH_EN_MASK 0x1
#define  NAND_NDECCCTRL_BCH_EN_SHIFT 0
#define  NAND_NDECCCTRL_BCH_EN_MASK_SHIFT(reg) (((reg) & NAND_NDECCCTRL_BCH_EN_MASK) >> NAND_NDECCCTRL_BCH_EN_SHIFT)
#define  NAND_NDECCCTRL_BCH_EN_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDECCCTRL_BCH_EN_MASK) | (((uint32_t)val) << NAND_NDECCCTRL_BCH_EN_SHIFT))

//====================================================================
//Register: NAND Busy Length Count Register (NDBZCNT)
//====================================================================

#define  NAND_NDBZCNT_ND_RNBCNT1_MASK 0xffff0000
#define  NAND_NDBZCNT_ND_RNBCNT1_SHIFT 16
#define  NAND_NDBZCNT_ND_RNBCNT1_MASK_SHIFT(reg) (((reg) & NAND_NDBZCNT_ND_RNBCNT1_MASK) >> NAND_NDBZCNT_ND_RNBCNT1_SHIFT)
#define  NAND_NDBZCNT_ND_RNBCNT1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDBZCNT_ND_RNBCNT1_MASK) | (((uint32_t)val) << NAND_NDBZCNT_ND_RNBCNT1_SHIFT))

#define  NAND_NDBZCNT_ND_RNBCNT0_MASK 0xffff
#define  NAND_NDBZCNT_ND_RNBCNT0_SHIFT 0
#define  NAND_NDBZCNT_ND_RNBCNT0_MASK_SHIFT(reg) (((reg) & NAND_NDBZCNT_ND_RNBCNT0_MASK) >> NAND_NDBZCNT_ND_RNBCNT0_SHIFT)
#define  NAND_NDBZCNT_ND_RNBCNT0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDBZCNT_ND_RNBCNT0_MASK) | (((uint32_t)val) << NAND_NDBZCNT_ND_RNBCNT0_SHIFT))

//====================================================================
//Register: NAND Mutex Lock Register (NDMUTEX)
//====================================================================

#define  NAND_NDMUTEX_RESERVED1_MASK 0xfffffffe
#define  NAND_NDMUTEX_RESERVED1_SHIFT 1
#define  NAND_NDMUTEX_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDMUTEX_RESERVED1_MASK) >> NAND_NDMUTEX_RESERVED1_SHIFT)
#define  NAND_NDMUTEX_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDMUTEX_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDMUTEX_RESERVED1_SHIFT))

#define  NAND_NDMUTEX_MUTEX_MASK 0x1
#define  NAND_NDMUTEX_MUTEX_SHIFT 0
#define  NAND_NDMUTEX_MUTEX_MASK_SHIFT(reg) (((reg) & NAND_NDMUTEX_MUTEX_MASK) >> NAND_NDMUTEX_MUTEX_SHIFT)
#define  NAND_NDMUTEX_MUTEX_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDMUTEX_MUTEX_MASK) | (((uint32_t)val) << NAND_NDMUTEX_MUTEX_SHIFT))

//====================================================================
//Register: NAND Partition Command Match 1 (NDCMDMAT1)
//====================================================================

#define  NAND_NDCMDMAT1_VALIDCNT_MASK 0xc0000000
#define  NAND_NDCMDMAT1_VALIDCNT_SHIFT 30
#define  NAND_NDCMDMAT1_VALIDCNT_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_VALIDCNT_MASK) >> NAND_NDCMDMAT1_VALIDCNT_SHIFT)
#define  NAND_NDCMDMAT1_VALIDCNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_VALIDCNT_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_VALIDCNT_SHIFT))

#define  NAND_NDCMDMAT1_NAKEDDIS2_MASK 0x20000000
#define  NAND_NDCMDMAT1_NAKEDDIS2_SHIFT 29
#define  NAND_NDCMDMAT1_NAKEDDIS2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_NAKEDDIS2_MASK) >> NAND_NDCMDMAT1_NAKEDDIS2_SHIFT)
#define  NAND_NDCMDMAT1_NAKEDDIS2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_NAKEDDIS2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_NAKEDDIS2_SHIFT))

#define  NAND_NDCMDMAT1_ROWADD2_MASK 0x10000000
#define  NAND_NDCMDMAT1_ROWADD2_SHIFT 28
#define  NAND_NDCMDMAT1_ROWADD2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_ROWADD2_MASK) >> NAND_NDCMDMAT1_ROWADD2_SHIFT)
#define  NAND_NDCMDMAT1_ROWADD2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_ROWADD2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_ROWADD2_SHIFT))

#define  NAND_NDCMDMAT1_CMD2_MASK 0xff00000
#define  NAND_NDCMDMAT1_CMD2_SHIFT 20
#define  NAND_NDCMDMAT1_CMD2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_CMD2_MASK) >> NAND_NDCMDMAT1_CMD2_SHIFT)
#define  NAND_NDCMDMAT1_CMD2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_CMD2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_CMD2_SHIFT))

#define  NAND_NDCMDMAT1_NAKEDDIS1_MASK 0x80000
#define  NAND_NDCMDMAT1_NAKEDDIS1_SHIFT 19
#define  NAND_NDCMDMAT1_NAKEDDIS1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_NAKEDDIS1_MASK) >> NAND_NDCMDMAT1_NAKEDDIS1_SHIFT)
#define  NAND_NDCMDMAT1_NAKEDDIS1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_NAKEDDIS1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_NAKEDDIS1_SHIFT))

#define  NAND_NDCMDMAT1_ROWADD1_MASK 0x40000
#define  NAND_NDCMDMAT1_ROWADD1_SHIFT 18
#define  NAND_NDCMDMAT1_ROWADD1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_ROWADD1_MASK) >> NAND_NDCMDMAT1_ROWADD1_SHIFT)
#define  NAND_NDCMDMAT1_ROWADD1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_ROWADD1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_ROWADD1_SHIFT))

#define  NAND_NDCMDMAT1_CMD1_MASK 0x3fc00
#define  NAND_NDCMDMAT1_CMD1_SHIFT 10
#define  NAND_NDCMDMAT1_CMD1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_CMD1_MASK) >> NAND_NDCMDMAT1_CMD1_SHIFT)
#define  NAND_NDCMDMAT1_CMD1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_CMD1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_CMD1_SHIFT))

#define  NAND_NDCMDMAT1_NAKEDDIS0_MASK 0x200
#define  NAND_NDCMDMAT1_NAKEDDIS0_SHIFT 9
#define  NAND_NDCMDMAT1_NAKEDDIS0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_NAKEDDIS0_MASK) >> NAND_NDCMDMAT1_NAKEDDIS0_SHIFT)
#define  NAND_NDCMDMAT1_NAKEDDIS0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_NAKEDDIS0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_NAKEDDIS0_SHIFT))

#define  NAND_NDCMDMAT1_ROWADD0_MASK 0x100
#define  NAND_NDCMDMAT1_ROWADD0_SHIFT 8
#define  NAND_NDCMDMAT1_ROWADD0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_ROWADD0_MASK) >> NAND_NDCMDMAT1_ROWADD0_SHIFT)
#define  NAND_NDCMDMAT1_ROWADD0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_ROWADD0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_ROWADD0_SHIFT))

#define  NAND_NDCMDMAT1_CMD0_MASK 0xff
#define  NAND_NDCMDMAT1_CMD0_SHIFT 0
#define  NAND_NDCMDMAT1_CMD0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT1_CMD0_MASK) >> NAND_NDCMDMAT1_CMD0_SHIFT)
#define  NAND_NDCMDMAT1_CMD0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT1_CMD0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT1_CMD0_SHIFT))

//====================================================================
//Register: NAND Partition Command Match 2 (NDCMDMAT2)
//====================================================================

#define  NAND_NDCMDMAT2_VALIDCNT_MASK 0xc0000000
#define  NAND_NDCMDMAT2_VALIDCNT_SHIFT 30
#define  NAND_NDCMDMAT2_VALIDCNT_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_VALIDCNT_MASK) >> NAND_NDCMDMAT2_VALIDCNT_SHIFT)
#define  NAND_NDCMDMAT2_VALIDCNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_VALIDCNT_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_VALIDCNT_SHIFT))

#define  NAND_NDCMDMAT2_NAKEDDIS2_MASK 0x20000000
#define  NAND_NDCMDMAT2_NAKEDDIS2_SHIFT 29
#define  NAND_NDCMDMAT2_NAKEDDIS2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_NAKEDDIS2_MASK) >> NAND_NDCMDMAT2_NAKEDDIS2_SHIFT)
#define  NAND_NDCMDMAT2_NAKEDDIS2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_NAKEDDIS2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_NAKEDDIS2_SHIFT))

#define  NAND_NDCMDMAT2_ROWADD2_MASK 0x10000000
#define  NAND_NDCMDMAT2_ROWADD2_SHIFT 28
#define  NAND_NDCMDMAT2_ROWADD2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_ROWADD2_MASK) >> NAND_NDCMDMAT2_ROWADD2_SHIFT)
#define  NAND_NDCMDMAT2_ROWADD2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_ROWADD2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_ROWADD2_SHIFT))

#define  NAND_NDCMDMAT2_CMD2_MASK 0xff00000
#define  NAND_NDCMDMAT2_CMD2_SHIFT 20
#define  NAND_NDCMDMAT2_CMD2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_CMD2_MASK) >> NAND_NDCMDMAT2_CMD2_SHIFT)
#define  NAND_NDCMDMAT2_CMD2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_CMD2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_CMD2_SHIFT))

#define  NAND_NDCMDMAT2_NAKEDDIS1_MASK 0x80000
#define  NAND_NDCMDMAT2_NAKEDDIS1_SHIFT 19
#define  NAND_NDCMDMAT2_NAKEDDIS1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_NAKEDDIS1_MASK) >> NAND_NDCMDMAT2_NAKEDDIS1_SHIFT)
#define  NAND_NDCMDMAT2_NAKEDDIS1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_NAKEDDIS1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_NAKEDDIS1_SHIFT))

#define  NAND_NDCMDMAT2_ROWADD1_MASK 0x40000
#define  NAND_NDCMDMAT2_ROWADD1_SHIFT 18
#define  NAND_NDCMDMAT2_ROWADD1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_ROWADD1_MASK) >> NAND_NDCMDMAT2_ROWADD1_SHIFT)
#define  NAND_NDCMDMAT2_ROWADD1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_ROWADD1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_ROWADD1_SHIFT))

#define  NAND_NDCMDMAT2_CMD1_MASK 0x3fc00
#define  NAND_NDCMDMAT2_CMD1_SHIFT 10
#define  NAND_NDCMDMAT2_CMD1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_CMD1_MASK) >> NAND_NDCMDMAT2_CMD1_SHIFT)
#define  NAND_NDCMDMAT2_CMD1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_CMD1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_CMD1_SHIFT))

#define  NAND_NDCMDMAT2_NAKEDDIS0_MASK 0x200
#define  NAND_NDCMDMAT2_NAKEDDIS0_SHIFT 9
#define  NAND_NDCMDMAT2_NAKEDDIS0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_NAKEDDIS0_MASK) >> NAND_NDCMDMAT2_NAKEDDIS0_SHIFT)
#define  NAND_NDCMDMAT2_NAKEDDIS0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_NAKEDDIS0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_NAKEDDIS0_SHIFT))

#define  NAND_NDCMDMAT2_ROWADD0_MASK 0x100
#define  NAND_NDCMDMAT2_ROWADD0_SHIFT 8
#define  NAND_NDCMDMAT2_ROWADD0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_ROWADD0_MASK) >> NAND_NDCMDMAT2_ROWADD0_SHIFT)
#define  NAND_NDCMDMAT2_ROWADD0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_ROWADD0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_ROWADD0_SHIFT))

#define  NAND_NDCMDMAT2_CMD0_MASK 0xff
#define  NAND_NDCMDMAT2_CMD0_SHIFT 0
#define  NAND_NDCMDMAT2_CMD0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT2_CMD0_MASK) >> NAND_NDCMDMAT2_CMD0_SHIFT)
#define  NAND_NDCMDMAT2_CMD0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT2_CMD0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT2_CMD0_SHIFT))

//====================================================================
//Register: NAND Partition Command Match 3 (NDCMDMAT3)
//====================================================================

#define  NAND_NDCMDMAT3_VALIDCNT_MASK 0xc0000000
#define  NAND_NDCMDMAT3_VALIDCNT_SHIFT 30
#define  NAND_NDCMDMAT3_VALIDCNT_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_VALIDCNT_MASK) >> NAND_NDCMDMAT3_VALIDCNT_SHIFT)
#define  NAND_NDCMDMAT3_VALIDCNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_VALIDCNT_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_VALIDCNT_SHIFT))

#define  NAND_NDCMDMAT3_NAKEDDIS2_MASK 0x20000000
#define  NAND_NDCMDMAT3_NAKEDDIS2_SHIFT 29
#define  NAND_NDCMDMAT3_NAKEDDIS2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_NAKEDDIS2_MASK) >> NAND_NDCMDMAT3_NAKEDDIS2_SHIFT)
#define  NAND_NDCMDMAT3_NAKEDDIS2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_NAKEDDIS2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_NAKEDDIS2_SHIFT))

#define  NAND_NDCMDMAT3_ROWADD2_MASK 0x10000000
#define  NAND_NDCMDMAT3_ROWADD2_SHIFT 28
#define  NAND_NDCMDMAT3_ROWADD2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_ROWADD2_MASK) >> NAND_NDCMDMAT3_ROWADD2_SHIFT)
#define  NAND_NDCMDMAT3_ROWADD2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_ROWADD2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_ROWADD2_SHIFT))

#define  NAND_NDCMDMAT3_CMD2_MASK 0xff00000
#define  NAND_NDCMDMAT3_CMD2_SHIFT 20
#define  NAND_NDCMDMAT3_CMD2_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_CMD2_MASK) >> NAND_NDCMDMAT3_CMD2_SHIFT)
#define  NAND_NDCMDMAT3_CMD2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_CMD2_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_CMD2_SHIFT))

#define  NAND_NDCMDMAT3_NAKEDDIS1_MASK 0x80000
#define  NAND_NDCMDMAT3_NAKEDDIS1_SHIFT 19
#define  NAND_NDCMDMAT3_NAKEDDIS1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_NAKEDDIS1_MASK) >> NAND_NDCMDMAT3_NAKEDDIS1_SHIFT)
#define  NAND_NDCMDMAT3_NAKEDDIS1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_NAKEDDIS1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_NAKEDDIS1_SHIFT))

#define  NAND_NDCMDMAT3_ROWADD1_MASK 0x40000
#define  NAND_NDCMDMAT3_ROWADD1_SHIFT 18
#define  NAND_NDCMDMAT3_ROWADD1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_ROWADD1_MASK) >> NAND_NDCMDMAT3_ROWADD1_SHIFT)
#define  NAND_NDCMDMAT3_ROWADD1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_ROWADD1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_ROWADD1_SHIFT))

#define  NAND_NDCMDMAT3_CMD1_MASK 0x3fc00
#define  NAND_NDCMDMAT3_CMD1_SHIFT 10
#define  NAND_NDCMDMAT3_CMD1_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_CMD1_MASK) >> NAND_NDCMDMAT3_CMD1_SHIFT)
#define  NAND_NDCMDMAT3_CMD1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_CMD1_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_CMD1_SHIFT))

#define  NAND_NDCMDMAT3_NAKEDDIS0_MASK 0x200
#define  NAND_NDCMDMAT3_NAKEDDIS0_SHIFT 9
#define  NAND_NDCMDMAT3_NAKEDDIS0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_NAKEDDIS0_MASK) >> NAND_NDCMDMAT3_NAKEDDIS0_SHIFT)
#define  NAND_NDCMDMAT3_NAKEDDIS0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_NAKEDDIS0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_NAKEDDIS0_SHIFT))

#define  NAND_NDCMDMAT3_ROWADD0_MASK 0x100
#define  NAND_NDCMDMAT3_ROWADD0_SHIFT 8
#define  NAND_NDCMDMAT3_ROWADD0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_ROWADD0_MASK) >> NAND_NDCMDMAT3_ROWADD0_SHIFT)
#define  NAND_NDCMDMAT3_ROWADD0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_ROWADD0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_ROWADD0_SHIFT))

#define  NAND_NDCMDMAT3_CMD0_MASK 0xff
#define  NAND_NDCMDMAT3_CMD0_SHIFT 0
#define  NAND_NDCMDMAT3_CMD0_MASK_SHIFT(reg) (((reg) & NAND_NDCMDMAT3_CMD0_MASK) >> NAND_NDCMDMAT3_CMD0_SHIFT)
#define  NAND_NDCMDMAT3_CMD0_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCMDMAT3_CMD0_MASK) | (((uint32_t)val) << NAND_NDCMDMAT3_CMD0_SHIFT))

//====================================================================
//Register: NAND Data Buffer (NDDB)
//====================================================================

#define  NAND_NDDB_FLASH_DATA_MASK 0xffffffff
#define  NAND_NDDB_FLASH_DATA_SHIFT 0
#define  NAND_NDDB_FLASH_DATA_MASK_SHIFT(reg) (((reg) & NAND_NDDB_FLASH_DATA_MASK) >> NAND_NDDB_FLASH_DATA_SHIFT)
#define  NAND_NDDB_FLASH_DATA_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDDB_FLASH_DATA_MASK) | (((uint32_t)val) << NAND_NDDB_FLASH_DATA_SHIFT))

//====================================================================
//Register: NAND Command Buffer 0 (NDCB0)
//====================================================================

#define  NAND_NDCB0_CMD_XTYPE_MASK 0xe0000000
#define  NAND_NDCB0_CMD_XTYPE_SHIFT 29
#define  NAND_NDCB0_CMD_XTYPE_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_CMD_XTYPE_MASK) >> NAND_NDCB0_CMD_XTYPE_SHIFT)
#define  NAND_NDCB0_CMD_XTYPE_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_CMD_XTYPE_MASK) | (((uint32_t)val) << NAND_NDCB0_CMD_XTYPE_SHIFT))

#define  NAND_NDCB0_LEN_OVRD_MASK 0x10000000
#define  NAND_NDCB0_LEN_OVRD_SHIFT 28
#define  NAND_NDCB0_LEN_OVRD_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_LEN_OVRD_MASK) >> NAND_NDCB0_LEN_OVRD_SHIFT)
#define  NAND_NDCB0_LEN_OVRD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_LEN_OVRD_MASK) | (((uint32_t)val) << NAND_NDCB0_LEN_OVRD_SHIFT))

#define  NAND_NDCB0_RDY_BYP_MASK 0x8000000
#define  NAND_NDCB0_RDY_BYP_SHIFT 27
#define  NAND_NDCB0_RDY_BYP_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_RDY_BYP_MASK) >> NAND_NDCB0_RDY_BYP_SHIFT)
#define  NAND_NDCB0_RDY_BYP_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_RDY_BYP_MASK) | (((uint32_t)val) << NAND_NDCB0_RDY_BYP_SHIFT))

#define  NAND_NDCB0_ST_ROW_EN_MASK 0x4000000
#define  NAND_NDCB0_ST_ROW_EN_SHIFT 26
#define  NAND_NDCB0_ST_ROW_EN_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_ST_ROW_EN_MASK) >> NAND_NDCB0_ST_ROW_EN_SHIFT)
#define  NAND_NDCB0_ST_ROW_EN_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_ST_ROW_EN_MASK) | (((uint32_t)val) << NAND_NDCB0_ST_ROW_EN_SHIFT))

#define  NAND_NDCB0_AUTO_RS_MASK 0x2000000
#define  NAND_NDCB0_AUTO_RS_SHIFT 25
#define  NAND_NDCB0_AUTO_RS_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_AUTO_RS_MASK) >> NAND_NDCB0_AUTO_RS_SHIFT)
#define  NAND_NDCB0_AUTO_RS_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_AUTO_RS_MASK) | (((uint32_t)val) << NAND_NDCB0_AUTO_RS_SHIFT))

#define  NAND_NDCB0_CSEL_MASK 0x1000000
#define  NAND_NDCB0_CSEL_SHIFT 24
#define  NAND_NDCB0_CSEL_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_CSEL_MASK) >> NAND_NDCB0_CSEL_SHIFT)
#define  NAND_NDCB0_CSEL_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_CSEL_MASK) | (((uint32_t)val) << NAND_NDCB0_CSEL_SHIFT))

#define  NAND_NDCB0_CMD_TYPE_MASK 0xe00000
#define  NAND_NDCB0_CMD_TYPE_SHIFT 21
#define  NAND_NDCB0_CMD_TYPE_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_CMD_TYPE_MASK) >> NAND_NDCB0_CMD_TYPE_SHIFT)
#define  NAND_NDCB0_CMD_TYPE_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_CMD_TYPE_MASK) | (((uint32_t)val) << NAND_NDCB0_CMD_TYPE_SHIFT))

#define  NAND_NDCB0_NC_MASK 0x100000
#define  NAND_NDCB0_NC_SHIFT 20
#define  NAND_NDCB0_NC_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_NC_MASK) >> NAND_NDCB0_NC_SHIFT)
#define  NAND_NDCB0_NC_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_NC_MASK) | (((uint32_t)val) << NAND_NDCB0_NC_SHIFT))

#define  NAND_NDCB0_DBC_MASK 0x80000
#define  NAND_NDCB0_DBC_SHIFT 19
#define  NAND_NDCB0_DBC_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_DBC_MASK) >> NAND_NDCB0_DBC_SHIFT)
#define  NAND_NDCB0_DBC_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_DBC_MASK) | (((uint32_t)val) << NAND_NDCB0_DBC_SHIFT))

#define  NAND_NDCB0_ADDR_CYC_MASK 0x70000
#define  NAND_NDCB0_ADDR_CYC_SHIFT 16
#define  NAND_NDCB0_ADDR_CYC_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_ADDR_CYC_MASK) >> NAND_NDCB0_ADDR_CYC_SHIFT)
#define  NAND_NDCB0_ADDR_CYC_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_ADDR_CYC_MASK) | (((uint32_t)val) << NAND_NDCB0_ADDR_CYC_SHIFT))

#define  NAND_NDCB0_CMD2_MASK 0xff00
#define  NAND_NDCB0_CMD2_SHIFT 8
#define  NAND_NDCB0_CMD2_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_CMD2_MASK) >> NAND_NDCB0_CMD2_SHIFT)
#define  NAND_NDCB0_CMD2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_CMD2_MASK) | (((uint32_t)val) << NAND_NDCB0_CMD2_SHIFT))

#define  NAND_NDCB0_CMD1_MASK 0xff
#define  NAND_NDCB0_CMD1_SHIFT 0
#define  NAND_NDCB0_CMD1_MASK_SHIFT(reg) (((reg) & NAND_NDCB0_CMD1_MASK) >> NAND_NDCB0_CMD1_SHIFT)
#define  NAND_NDCB0_CMD1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB0_CMD1_MASK) | (((uint32_t)val) << NAND_NDCB0_CMD1_SHIFT))

//====================================================================
//Register: NAND Command Buffer 1 (NDCB1)
//====================================================================

#define  NAND_NDCB1_ADDR4_MASK 0xff000000
#define  NAND_NDCB1_ADDR4_SHIFT 24
#define  NAND_NDCB1_ADDR4_MASK_SHIFT(reg) (((reg) & NAND_NDCB1_ADDR4_MASK) >> NAND_NDCB1_ADDR4_SHIFT)
#define  NAND_NDCB1_ADDR4_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB1_ADDR4_MASK) | (((uint32_t)val) << NAND_NDCB1_ADDR4_SHIFT))

#define  NAND_NDCB1_ADDR3_MASK 0xff0000
#define  NAND_NDCB1_ADDR3_SHIFT 16
#define  NAND_NDCB1_ADDR3_MASK_SHIFT(reg) (((reg) & NAND_NDCB1_ADDR3_MASK) >> NAND_NDCB1_ADDR3_SHIFT)
#define  NAND_NDCB1_ADDR3_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB1_ADDR3_MASK) | (((uint32_t)val) << NAND_NDCB1_ADDR3_SHIFT))

#define  NAND_NDCB1_ADDR2_MASK 0xff00
#define  NAND_NDCB1_ADDR2_SHIFT 8
#define  NAND_NDCB1_ADDR2_MASK_SHIFT(reg) (((reg) & NAND_NDCB1_ADDR2_MASK) >> NAND_NDCB1_ADDR2_SHIFT)
#define  NAND_NDCB1_ADDR2_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB1_ADDR2_MASK) | (((uint32_t)val) << NAND_NDCB1_ADDR2_SHIFT))

#define  NAND_NDCB1_ADDR1_MASK 0xff
#define  NAND_NDCB1_ADDR1_SHIFT 0
#define  NAND_NDCB1_ADDR1_MASK_SHIFT(reg) (((reg) & NAND_NDCB1_ADDR1_MASK) >> NAND_NDCB1_ADDR1_SHIFT)
#define  NAND_NDCB1_ADDR1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB1_ADDR1_MASK) | (((uint32_t)val) << NAND_NDCB1_ADDR1_SHIFT))

//====================================================================
//Register: NAND Command Buffer 2 (NDCB2)
//====================================================================

#define  NAND_NDCB2_ST_MASK_MASK 0xff000000
#define  NAND_NDCB2_ST_MASK_SHIFT 24
#define  NAND_NDCB2_ST_MASK_MASK_SHIFT(reg) (((reg) & NAND_NDCB2_ST_MASK_MASK) >> NAND_NDCB2_ST_MASK_SHIFT)
#define  NAND_NDCB2_ST_MASK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB2_ST_MASK_MASK) | (((uint32_t)val) << NAND_NDCB2_ST_MASK_SHIFT))

#define  NAND_NDCB2_ST_CMD_MASK 0xff0000
#define  NAND_NDCB2_ST_CMD_SHIFT 16
#define  NAND_NDCB2_ST_CMD_MASK_SHIFT(reg) (((reg) & NAND_NDCB2_ST_CMD_MASK) >> NAND_NDCB2_ST_CMD_SHIFT)
#define  NAND_NDCB2_ST_CMD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB2_ST_CMD_MASK) | (((uint32_t)val) << NAND_NDCB2_ST_CMD_SHIFT))

#define  NAND_NDCB2_PAGE_COUNT_MASK 0xff00
#define  NAND_NDCB2_PAGE_COUNT_SHIFT 8
#define  NAND_NDCB2_PAGE_COUNT_MASK_SHIFT(reg) (((reg) & NAND_NDCB2_PAGE_COUNT_MASK) >> NAND_NDCB2_PAGE_COUNT_SHIFT)
#define  NAND_NDCB2_PAGE_COUNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB2_PAGE_COUNT_MASK) | (((uint32_t)val) << NAND_NDCB2_PAGE_COUNT_SHIFT))

#define  NAND_NDCB2_ADDR5_MASK 0xff
#define  NAND_NDCB2_ADDR5_SHIFT 0
#define  NAND_NDCB2_ADDR5_MASK_SHIFT(reg) (((reg) & NAND_NDCB2_ADDR5_MASK) >> NAND_NDCB2_ADDR5_SHIFT)
#define  NAND_NDCB2_ADDR5_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB2_ADDR5_MASK) | (((uint32_t)val) << NAND_NDCB2_ADDR5_SHIFT))

//====================================================================
//Register: NAND Command Buffer 3 (NDCB3)
//====================================================================

#define  NAND_NDCB3_ADDR7_MASK 0xff000000
#define  NAND_NDCB3_ADDR7_SHIFT 24
#define  NAND_NDCB3_ADDR7_MASK_SHIFT(reg) (((reg) & NAND_NDCB3_ADDR7_MASK) >> NAND_NDCB3_ADDR7_SHIFT)
#define  NAND_NDCB3_ADDR7_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB3_ADDR7_MASK) | (((uint32_t)val) << NAND_NDCB3_ADDR7_SHIFT))

#define  NAND_NDCB3_ADDR6_MASK 0xff0000
#define  NAND_NDCB3_ADDR6_SHIFT 16
#define  NAND_NDCB3_ADDR6_MASK_SHIFT(reg) (((reg) & NAND_NDCB3_ADDR6_MASK) >> NAND_NDCB3_ADDR6_SHIFT)
#define  NAND_NDCB3_ADDR6_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB3_ADDR6_MASK) | (((uint32_t)val) << NAND_NDCB3_ADDR6_SHIFT))

#define  NAND_NDCB3_NDLENCNT_MASK 0xffff
#define  NAND_NDCB3_NDLENCNT_SHIFT 0
#define  NAND_NDCB3_NDLENCNT_MASK_SHIFT(reg) (((reg) & NAND_NDCB3_NDLENCNT_MASK) >> NAND_NDCB3_NDLENCNT_SHIFT)
#define  NAND_NDCB3_NDLENCNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDCB3_NDLENCNT_MASK) | (((uint32_t)val) << NAND_NDCB3_NDLENCNT_SHIFT))

//====================================================================
//Register: NAND Arbitration Control (NDARBCR)
//====================================================================

#define  NAND_NDARBCR_RESERVED1_MASK 0xffff0000
#define  NAND_NDARBCR_RESERVED1_SHIFT 16
#define  NAND_NDARBCR_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDARBCR_RESERVED1_MASK) >> NAND_NDARBCR_RESERVED1_SHIFT)
#define  NAND_NDARBCR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDARBCR_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDARBCR_RESERVED1_SHIFT))

#define  NAND_NDARBCR_ARB_CNT_MASK 0xffff
#define  NAND_NDARBCR_ARB_CNT_SHIFT 0
#define  NAND_NDARBCR_ARB_CNT_MASK_SHIFT(reg) (((reg) & NAND_NDARBCR_ARB_CNT_MASK) >> NAND_NDARBCR_ARB_CNT_SHIFT)
#define  NAND_NDARBCR_ARB_CNT_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDARBCR_ARB_CNT_MASK) | (((uint32_t)val) << NAND_NDARBCR_ARB_CNT_SHIFT))

//====================================================================
//Register: NAND Partition Table 1 CS0 (NDPT0CS0)
//====================================================================

#define  NAND_NDPT0CS0_VALID_MASK 0x80000000
#define  NAND_NDPT0CS0_VALID_SHIFT 31
#define  NAND_NDPT0CS0_VALID_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS0_VALID_MASK) >> NAND_NDPT0CS0_VALID_SHIFT)
#define  NAND_NDPT0CS0_VALID_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS0_VALID_MASK) | (((uint32_t)val) << NAND_NDPT0CS0_VALID_SHIFT))

#define  NAND_NDPT0CS0_LOCK_MASK 0x40000000
#define  NAND_NDPT0CS0_LOCK_SHIFT 30
#define  NAND_NDPT0CS0_LOCK_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS0_LOCK_MASK) >> NAND_NDPT0CS0_LOCK_SHIFT)
#define  NAND_NDPT0CS0_LOCK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS0_LOCK_MASK) | (((uint32_t)val) << NAND_NDPT0CS0_LOCK_SHIFT))

#define  NAND_NDPT0CS0_TRUSTED_MASK 0x20000000
#define  NAND_NDPT0CS0_TRUSTED_SHIFT 29
#define  NAND_NDPT0CS0_TRUSTED_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS0_TRUSTED_MASK) >> NAND_NDPT0CS0_TRUSTED_SHIFT)
#define  NAND_NDPT0CS0_TRUSTED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS0_TRUSTED_MASK) | (((uint32_t)val) << NAND_NDPT0CS0_TRUSTED_SHIFT))

#define  NAND_NDPT0CS0_RESERVED1_MASK 0x1f000000
#define  NAND_NDPT0CS0_RESERVED1_SHIFT 24
#define  NAND_NDPT0CS0_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS0_RESERVED1_MASK) >> NAND_NDPT0CS0_RESERVED1_SHIFT)
#define  NAND_NDPT0CS0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS0_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPT0CS0_RESERVED1_SHIFT))

#define  NAND_NDPT0CS0_BLOCKADD_MASK 0xffffff
#define  NAND_NDPT0CS0_BLOCKADD_SHIFT 0
#define  NAND_NDPT0CS0_BLOCKADD_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS0_BLOCKADD_MASK) >> NAND_NDPT0CS0_BLOCKADD_SHIFT)
#define  NAND_NDPT0CS0_BLOCKADD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS0_BLOCKADD_MASK) | (((uint32_t)val) << NAND_NDPT0CS0_BLOCKADD_SHIFT))

//====================================================================
//Register: NAND Partition Table 2 CS0 (NDPT1CS0)
//====================================================================

#define  NAND_NDPT1CS0_VALID_MASK 0x80000000
#define  NAND_NDPT1CS0_VALID_SHIFT 31
#define  NAND_NDPT1CS0_VALID_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS0_VALID_MASK) >> NAND_NDPT1CS0_VALID_SHIFT)
#define  NAND_NDPT1CS0_VALID_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS0_VALID_MASK) | (((uint32_t)val) << NAND_NDPT1CS0_VALID_SHIFT))

#define  NAND_NDPT1CS0_LOCK_MASK 0x40000000
#define  NAND_NDPT1CS0_LOCK_SHIFT 30
#define  NAND_NDPT1CS0_LOCK_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS0_LOCK_MASK) >> NAND_NDPT1CS0_LOCK_SHIFT)
#define  NAND_NDPT1CS0_LOCK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS0_LOCK_MASK) | (((uint32_t)val) << NAND_NDPT1CS0_LOCK_SHIFT))

#define  NAND_NDPT1CS0_TRUSTED_MASK 0x20000000
#define  NAND_NDPT1CS0_TRUSTED_SHIFT 29
#define  NAND_NDPT1CS0_TRUSTED_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS0_TRUSTED_MASK) >> NAND_NDPT1CS0_TRUSTED_SHIFT)
#define  NAND_NDPT1CS0_TRUSTED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS0_TRUSTED_MASK) | (((uint32_t)val) << NAND_NDPT1CS0_TRUSTED_SHIFT))

#define  NAND_NDPT1CS0_RESERVED1_MASK 0x1f000000
#define  NAND_NDPT1CS0_RESERVED1_SHIFT 24
#define  NAND_NDPT1CS0_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS0_RESERVED1_MASK) >> NAND_NDPT1CS0_RESERVED1_SHIFT)
#define  NAND_NDPT1CS0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS0_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPT1CS0_RESERVED1_SHIFT))

#define  NAND_NDPT1CS0_BLOCKADD_MASK 0xffffff
#define  NAND_NDPT1CS0_BLOCKADD_SHIFT 0
#define  NAND_NDPT1CS0_BLOCKADD_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS0_BLOCKADD_MASK) >> NAND_NDPT1CS0_BLOCKADD_SHIFT)
#define  NAND_NDPT1CS0_BLOCKADD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS0_BLOCKADD_MASK) | (((uint32_t)val) << NAND_NDPT1CS0_BLOCKADD_SHIFT))

//====================================================================
//Register: NAND Partition Table 3 CS0 (NDPT2CS0)
//====================================================================

#define  NAND_NDPT2CS0_VALID_MASK 0x80000000
#define  NAND_NDPT2CS0_VALID_SHIFT 31
#define  NAND_NDPT2CS0_VALID_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS0_VALID_MASK) >> NAND_NDPT2CS0_VALID_SHIFT)
#define  NAND_NDPT2CS0_VALID_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS0_VALID_MASK) | (((uint32_t)val) << NAND_NDPT2CS0_VALID_SHIFT))

#define  NAND_NDPT2CS0_LOCK_MASK 0x40000000
#define  NAND_NDPT2CS0_LOCK_SHIFT 30
#define  NAND_NDPT2CS0_LOCK_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS0_LOCK_MASK) >> NAND_NDPT2CS0_LOCK_SHIFT)
#define  NAND_NDPT2CS0_LOCK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS0_LOCK_MASK) | (((uint32_t)val) << NAND_NDPT2CS0_LOCK_SHIFT))

#define  NAND_NDPT2CS0_TRUSTED_MASK 0x20000000
#define  NAND_NDPT2CS0_TRUSTED_SHIFT 29
#define  NAND_NDPT2CS0_TRUSTED_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS0_TRUSTED_MASK) >> NAND_NDPT2CS0_TRUSTED_SHIFT)
#define  NAND_NDPT2CS0_TRUSTED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS0_TRUSTED_MASK) | (((uint32_t)val) << NAND_NDPT2CS0_TRUSTED_SHIFT))

#define  NAND_NDPT2CS0_RESERVED1_MASK 0x1f000000
#define  NAND_NDPT2CS0_RESERVED1_SHIFT 24
#define  NAND_NDPT2CS0_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS0_RESERVED1_MASK) >> NAND_NDPT2CS0_RESERVED1_SHIFT)
#define  NAND_NDPT2CS0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS0_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPT2CS0_RESERVED1_SHIFT))

#define  NAND_NDPT2CS0_BLOCKADD_MASK 0xffffff
#define  NAND_NDPT2CS0_BLOCKADD_SHIFT 0
#define  NAND_NDPT2CS0_BLOCKADD_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS0_BLOCKADD_MASK) >> NAND_NDPT2CS0_BLOCKADD_SHIFT)
#define  NAND_NDPT2CS0_BLOCKADD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS0_BLOCKADD_MASK) | (((uint32_t)val) << NAND_NDPT2CS0_BLOCKADD_SHIFT))

//====================================================================
//Register: NAND Partition Table 4 CS0 (NDPT3CS0)
//====================================================================

#define  NAND_NDPT3CS0_VALID_MASK 0x80000000
#define  NAND_NDPT3CS0_VALID_SHIFT 31
#define  NAND_NDPT3CS0_VALID_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS0_VALID_MASK) >> NAND_NDPT3CS0_VALID_SHIFT)
#define  NAND_NDPT3CS0_VALID_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS0_VALID_MASK) | (((uint32_t)val) << NAND_NDPT3CS0_VALID_SHIFT))

#define  NAND_NDPT3CS0_LOCK_MASK 0x40000000
#define  NAND_NDPT3CS0_LOCK_SHIFT 30
#define  NAND_NDPT3CS0_LOCK_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS0_LOCK_MASK) >> NAND_NDPT3CS0_LOCK_SHIFT)
#define  NAND_NDPT3CS0_LOCK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS0_LOCK_MASK) | (((uint32_t)val) << NAND_NDPT3CS0_LOCK_SHIFT))

#define  NAND_NDPT3CS0_TRUSTED_MASK 0x20000000
#define  NAND_NDPT3CS0_TRUSTED_SHIFT 29
#define  NAND_NDPT3CS0_TRUSTED_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS0_TRUSTED_MASK) >> NAND_NDPT3CS0_TRUSTED_SHIFT)
#define  NAND_NDPT3CS0_TRUSTED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS0_TRUSTED_MASK) | (((uint32_t)val) << NAND_NDPT3CS0_TRUSTED_SHIFT))

#define  NAND_NDPT3CS0_RESERVED1_MASK 0x1f000000
#define  NAND_NDPT3CS0_RESERVED1_SHIFT 24
#define  NAND_NDPT3CS0_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS0_RESERVED1_MASK) >> NAND_NDPT3CS0_RESERVED1_SHIFT)
#define  NAND_NDPT3CS0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS0_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPT3CS0_RESERVED1_SHIFT))

#define  NAND_NDPT3CS0_BLOCKADD_MASK 0xffffff
#define  NAND_NDPT3CS0_BLOCKADD_SHIFT 0
#define  NAND_NDPT3CS0_BLOCKADD_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS0_BLOCKADD_MASK) >> NAND_NDPT3CS0_BLOCKADD_SHIFT)
#define  NAND_NDPT3CS0_BLOCKADD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS0_BLOCKADD_MASK) | (((uint32_t)val) << NAND_NDPT3CS0_BLOCKADD_SHIFT))

//====================================================================
//Register: NAND Partition Table 1 CS1 (NDPT0CS1)
//====================================================================

#define  NAND_NDPT0CS1_VALID_MASK 0x80000000
#define  NAND_NDPT0CS1_VALID_SHIFT 31
#define  NAND_NDPT0CS1_VALID_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS1_VALID_MASK) >> NAND_NDPT0CS1_VALID_SHIFT)
#define  NAND_NDPT0CS1_VALID_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS1_VALID_MASK) | (((uint32_t)val) << NAND_NDPT0CS1_VALID_SHIFT))

#define  NAND_NDPT0CS1_LOCK_MASK 0x40000000
#define  NAND_NDPT0CS1_LOCK_SHIFT 30
#define  NAND_NDPT0CS1_LOCK_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS1_LOCK_MASK) >> NAND_NDPT0CS1_LOCK_SHIFT)
#define  NAND_NDPT0CS1_LOCK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS1_LOCK_MASK) | (((uint32_t)val) << NAND_NDPT0CS1_LOCK_SHIFT))

#define  NAND_NDPT0CS1_TRUSTED_MASK 0x20000000
#define  NAND_NDPT0CS1_TRUSTED_SHIFT 29
#define  NAND_NDPT0CS1_TRUSTED_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS1_TRUSTED_MASK) >> NAND_NDPT0CS1_TRUSTED_SHIFT)
#define  NAND_NDPT0CS1_TRUSTED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS1_TRUSTED_MASK) | (((uint32_t)val) << NAND_NDPT0CS1_TRUSTED_SHIFT))

#define  NAND_NDPT0CS1_RESERVED1_MASK 0x1f000000
#define  NAND_NDPT0CS1_RESERVED1_SHIFT 24
#define  NAND_NDPT0CS1_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS1_RESERVED1_MASK) >> NAND_NDPT0CS1_RESERVED1_SHIFT)
#define  NAND_NDPT0CS1_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS1_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPT0CS1_RESERVED1_SHIFT))

#define  NAND_NDPT0CS1_BLOCKADD_MASK 0xffffff
#define  NAND_NDPT0CS1_BLOCKADD_SHIFT 0
#define  NAND_NDPT0CS1_BLOCKADD_MASK_SHIFT(reg) (((reg) & NAND_NDPT0CS1_BLOCKADD_MASK) >> NAND_NDPT0CS1_BLOCKADD_SHIFT)
#define  NAND_NDPT0CS1_BLOCKADD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT0CS1_BLOCKADD_MASK) | (((uint32_t)val) << NAND_NDPT0CS1_BLOCKADD_SHIFT))

//====================================================================
//Register: NAND Partition Table 2 CS1 (NDPT1CS1)
//====================================================================

#define  NAND_NDPT1CS1_VALID_MASK 0x80000000
#define  NAND_NDPT1CS1_VALID_SHIFT 31
#define  NAND_NDPT1CS1_VALID_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS1_VALID_MASK) >> NAND_NDPT1CS1_VALID_SHIFT)
#define  NAND_NDPT1CS1_VALID_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS1_VALID_MASK) | (((uint32_t)val) << NAND_NDPT1CS1_VALID_SHIFT))

#define  NAND_NDPT1CS1_LOCK_MASK 0x40000000
#define  NAND_NDPT1CS1_LOCK_SHIFT 30
#define  NAND_NDPT1CS1_LOCK_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS1_LOCK_MASK) >> NAND_NDPT1CS1_LOCK_SHIFT)
#define  NAND_NDPT1CS1_LOCK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS1_LOCK_MASK) | (((uint32_t)val) << NAND_NDPT1CS1_LOCK_SHIFT))

#define  NAND_NDPT1CS1_TRUSTED_MASK 0x20000000
#define  NAND_NDPT1CS1_TRUSTED_SHIFT 29
#define  NAND_NDPT1CS1_TRUSTED_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS1_TRUSTED_MASK) >> NAND_NDPT1CS1_TRUSTED_SHIFT)
#define  NAND_NDPT1CS1_TRUSTED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS1_TRUSTED_MASK) | (((uint32_t)val) << NAND_NDPT1CS1_TRUSTED_SHIFT))

#define  NAND_NDPT1CS1_RESERVED1_MASK 0x1f000000
#define  NAND_NDPT1CS1_RESERVED1_SHIFT 24
#define  NAND_NDPT1CS1_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS1_RESERVED1_MASK) >> NAND_NDPT1CS1_RESERVED1_SHIFT)
#define  NAND_NDPT1CS1_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS1_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPT1CS1_RESERVED1_SHIFT))

#define  NAND_NDPT1CS1_BLOCKADD_MASK 0xffffff
#define  NAND_NDPT1CS1_BLOCKADD_SHIFT 0
#define  NAND_NDPT1CS1_BLOCKADD_MASK_SHIFT(reg) (((reg) & NAND_NDPT1CS1_BLOCKADD_MASK) >> NAND_NDPT1CS1_BLOCKADD_SHIFT)
#define  NAND_NDPT1CS1_BLOCKADD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT1CS1_BLOCKADD_MASK) | (((uint32_t)val) << NAND_NDPT1CS1_BLOCKADD_SHIFT))

//====================================================================
//Register: NAND Partition Table 3 CS1 (NDPT2CS1)
//====================================================================

#define  NAND_NDPT2CS1_VALID_MASK 0x80000000
#define  NAND_NDPT2CS1_VALID_SHIFT 31
#define  NAND_NDPT2CS1_VALID_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS1_VALID_MASK) >> NAND_NDPT2CS1_VALID_SHIFT)
#define  NAND_NDPT2CS1_VALID_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS1_VALID_MASK) | (((uint32_t)val) << NAND_NDPT2CS1_VALID_SHIFT))

#define  NAND_NDPT2CS1_LOCK_MASK 0x40000000
#define  NAND_NDPT2CS1_LOCK_SHIFT 30
#define  NAND_NDPT2CS1_LOCK_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS1_LOCK_MASK) >> NAND_NDPT2CS1_LOCK_SHIFT)
#define  NAND_NDPT2CS1_LOCK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS1_LOCK_MASK) | (((uint32_t)val) << NAND_NDPT2CS1_LOCK_SHIFT))

#define  NAND_NDPT2CS1_TRUSTED_MASK 0x20000000
#define  NAND_NDPT2CS1_TRUSTED_SHIFT 29
#define  NAND_NDPT2CS1_TRUSTED_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS1_TRUSTED_MASK) >> NAND_NDPT2CS1_TRUSTED_SHIFT)
#define  NAND_NDPT2CS1_TRUSTED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS1_TRUSTED_MASK) | (((uint32_t)val) << NAND_NDPT2CS1_TRUSTED_SHIFT))

#define  NAND_NDPT2CS1_RESERVED1_MASK 0x1f000000
#define  NAND_NDPT2CS1_RESERVED1_SHIFT 24
#define  NAND_NDPT2CS1_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS1_RESERVED1_MASK) >> NAND_NDPT2CS1_RESERVED1_SHIFT)
#define  NAND_NDPT2CS1_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS1_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPT2CS1_RESERVED1_SHIFT))

#define  NAND_NDPT2CS1_BLOCKADD_MASK 0xffffff
#define  NAND_NDPT2CS1_BLOCKADD_SHIFT 0
#define  NAND_NDPT2CS1_BLOCKADD_MASK_SHIFT(reg) (((reg) & NAND_NDPT2CS1_BLOCKADD_MASK) >> NAND_NDPT2CS1_BLOCKADD_SHIFT)
#define  NAND_NDPT2CS1_BLOCKADD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT2CS1_BLOCKADD_MASK) | (((uint32_t)val) << NAND_NDPT2CS1_BLOCKADD_SHIFT))

//====================================================================
//Register: NAND Partition Table 4 CS1 (NDPT3CS1)
//====================================================================

#define  NAND_NDPT3CS1_VALID_MASK 0x80000000
#define  NAND_NDPT3CS1_VALID_SHIFT 31
#define  NAND_NDPT3CS1_VALID_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS1_VALID_MASK) >> NAND_NDPT3CS1_VALID_SHIFT)
#define  NAND_NDPT3CS1_VALID_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS1_VALID_MASK) | (((uint32_t)val) << NAND_NDPT3CS1_VALID_SHIFT))

#define  NAND_NDPT3CS1_LOCK_MASK 0x40000000
#define  NAND_NDPT3CS1_LOCK_SHIFT 30
#define  NAND_NDPT3CS1_LOCK_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS1_LOCK_MASK) >> NAND_NDPT3CS1_LOCK_SHIFT)
#define  NAND_NDPT3CS1_LOCK_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS1_LOCK_MASK) | (((uint32_t)val) << NAND_NDPT3CS1_LOCK_SHIFT))

#define  NAND_NDPT3CS1_TRUSTED_MASK 0x20000000
#define  NAND_NDPT3CS1_TRUSTED_SHIFT 29
#define  NAND_NDPT3CS1_TRUSTED_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS1_TRUSTED_MASK) >> NAND_NDPT3CS1_TRUSTED_SHIFT)
#define  NAND_NDPT3CS1_TRUSTED_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS1_TRUSTED_MASK) | (((uint32_t)val) << NAND_NDPT3CS1_TRUSTED_SHIFT))

#define  NAND_NDPT3CS1_RESERVED1_MASK 0x1f000000
#define  NAND_NDPT3CS1_RESERVED1_SHIFT 24
#define  NAND_NDPT3CS1_RESERVED1_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS1_RESERVED1_MASK) >> NAND_NDPT3CS1_RESERVED1_SHIFT)
#define  NAND_NDPT3CS1_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS1_RESERVED1_MASK) | (((uint32_t)val) << NAND_NDPT3CS1_RESERVED1_SHIFT))

#define  NAND_NDPT3CS1_BLOCKADD_MASK 0xffffff
#define  NAND_NDPT3CS1_BLOCKADD_SHIFT 0
#define  NAND_NDPT3CS1_BLOCKADD_MASK_SHIFT(reg) (((reg) & NAND_NDPT3CS1_BLOCKADD_MASK) >> NAND_NDPT3CS1_BLOCKADD_SHIFT)
#define  NAND_NDPT3CS1_BLOCKADD_REPLACE_VAL(reg,val) (((reg) & ~NAND_NDPT3CS1_BLOCKADD_MASK) | (((uint32_t)val) << NAND_NDPT3CS1_BLOCKADD_SHIFT))

//====================================================================
//
//Register File: Direct NAND Configuration Registers (CONF)
/** \brief This file defines the registers for the Wrapper for the CHG NAND flash controller*/
//
//====================================================================

//====================================================================
//Register: NAND Control Register (NDCRP)
//====================================================================

#define  CONF_NDCRP_SPARE_EN_MASK 0x80000000
#define  CONF_NDCRP_SPARE_EN_SHIFT 31
#define  CONF_NDCRP_SPARE_EN_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_SPARE_EN_MASK) >> CONF_NDCRP_SPARE_EN_SHIFT)
#define  CONF_NDCRP_SPARE_EN_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_SPARE_EN_MASK) | (((uint32_t)val) << CONF_NDCRP_SPARE_EN_SHIFT))

#define  CONF_NDCRP_ECC_EN_MASK 0x40000000
#define  CONF_NDCRP_ECC_EN_SHIFT 30
#define  CONF_NDCRP_ECC_EN_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_ECC_EN_MASK) >> CONF_NDCRP_ECC_EN_SHIFT)
#define  CONF_NDCRP_ECC_EN_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_ECC_EN_MASK) | (((uint32_t)val) << CONF_NDCRP_ECC_EN_SHIFT))

#define  CONF_NDCRP_DMA_EN_MASK 0x20000000
#define  CONF_NDCRP_DMA_EN_SHIFT 29
#define  CONF_NDCRP_DMA_EN_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_DMA_EN_MASK) >> CONF_NDCRP_DMA_EN_SHIFT)
#define  CONF_NDCRP_DMA_EN_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_DMA_EN_MASK) | (((uint32_t)val) << CONF_NDCRP_DMA_EN_SHIFT))

#define  CONF_NDCRP_ND_RUN_MASK 0x10000000
#define  CONF_NDCRP_ND_RUN_SHIFT 28
#define  CONF_NDCRP_ND_RUN_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_ND_RUN_MASK) >> CONF_NDCRP_ND_RUN_SHIFT)
#define  CONF_NDCRP_ND_RUN_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_ND_RUN_MASK) | (((uint32_t)val) << CONF_NDCRP_ND_RUN_SHIFT))

#define  CONF_NDCRP_DWIDTH_C_MASK 0x8000000
#define  CONF_NDCRP_DWIDTH_C_SHIFT 27
#define  CONF_NDCRP_DWIDTH_C_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_DWIDTH_C_MASK) >> CONF_NDCRP_DWIDTH_C_SHIFT)
#define  CONF_NDCRP_DWIDTH_C_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_DWIDTH_C_MASK) | (((uint32_t)val) << CONF_NDCRP_DWIDTH_C_SHIFT))

#define  CONF_NDCRP_DWIDTH_M_MASK 0x4000000
#define  CONF_NDCRP_DWIDTH_M_SHIFT 26
#define  CONF_NDCRP_DWIDTH_M_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_DWIDTH_M_MASK) >> CONF_NDCRP_DWIDTH_M_SHIFT)
#define  CONF_NDCRP_DWIDTH_M_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_DWIDTH_M_MASK) | (((uint32_t)val) << CONF_NDCRP_DWIDTH_M_SHIFT))

#define  CONF_NDCRP_PAGE_SZ_MASK 0x3000000
#define  CONF_NDCRP_PAGE_SZ_SHIFT 24
#define  CONF_NDCRP_PAGE_SZ_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_PAGE_SZ_MASK) >> CONF_NDCRP_PAGE_SZ_SHIFT)
#define  CONF_NDCRP_PAGE_SZ_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_PAGE_SZ_MASK) | (((uint32_t)val) << CONF_NDCRP_PAGE_SZ_SHIFT))

#define  CONF_NDCRP_SEQ_DIS_MASK 0x800000
#define  CONF_NDCRP_SEQ_DIS_SHIFT 23
#define  CONF_NDCRP_SEQ_DIS_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_SEQ_DIS_MASK) >> CONF_NDCRP_SEQ_DIS_SHIFT)
#define  CONF_NDCRP_SEQ_DIS_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_SEQ_DIS_MASK) | (((uint32_t)val) << CONF_NDCRP_SEQ_DIS_SHIFT))

#define  CONF_NDCRP_ND_STOP_MASK 0x400000
#define  CONF_NDCRP_ND_STOP_SHIFT 22
#define  CONF_NDCRP_ND_STOP_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_ND_STOP_MASK) >> CONF_NDCRP_ND_STOP_SHIFT)
#define  CONF_NDCRP_ND_STOP_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_ND_STOP_MASK) | (((uint32_t)val) << CONF_NDCRP_ND_STOP_SHIFT))

#define  CONF_NDCRP_FORCE_CSX_MASK 0x200000
#define  CONF_NDCRP_FORCE_CSX_SHIFT 21
#define  CONF_NDCRP_FORCE_CSX_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_FORCE_CSX_MASK) >> CONF_NDCRP_FORCE_CSX_SHIFT)
#define  CONF_NDCRP_FORCE_CSX_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_FORCE_CSX_MASK) | (((uint32_t)val) << CONF_NDCRP_FORCE_CSX_SHIFT))

#define  CONF_NDCRP_CLR_PG_CNT_MASK 0x100000
#define  CONF_NDCRP_CLR_PG_CNT_SHIFT 20
#define  CONF_NDCRP_CLR_PG_CNT_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_CLR_PG_CNT_MASK) >> CONF_NDCRP_CLR_PG_CNT_SHIFT)
#define  CONF_NDCRP_CLR_PG_CNT_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_CLR_PG_CNT_MASK) | (((uint32_t)val) << CONF_NDCRP_CLR_PG_CNT_SHIFT))

#define  CONF_NDCRP_STOP_ON_UNCOR_MASK 0x80000
#define  CONF_NDCRP_STOP_ON_UNCOR_SHIFT 19
#define  CONF_NDCRP_STOP_ON_UNCOR_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_STOP_ON_UNCOR_MASK) >> CONF_NDCRP_STOP_ON_UNCOR_SHIFT)
#define  CONF_NDCRP_STOP_ON_UNCOR_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_STOP_ON_UNCOR_MASK) | (((uint32_t)val) << CONF_NDCRP_STOP_ON_UNCOR_SHIFT))

#define  CONF_NDCRP_RD_ID_CNT_MASK 0x70000
#define  CONF_NDCRP_RD_ID_CNT_SHIFT 16
#define  CONF_NDCRP_RD_ID_CNT_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_RD_ID_CNT_MASK) >> CONF_NDCRP_RD_ID_CNT_SHIFT)
#define  CONF_NDCRP_RD_ID_CNT_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_RD_ID_CNT_MASK) | (((uint32_t)val) << CONF_NDCRP_RD_ID_CNT_SHIFT))

#define  CONF_NDCRP_RA_START_MASK 0x8000
#define  CONF_NDCRP_RA_START_SHIFT 15
#define  CONF_NDCRP_RA_START_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_RA_START_MASK) >> CONF_NDCRP_RA_START_SHIFT)
#define  CONF_NDCRP_RA_START_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_RA_START_MASK) | (((uint32_t)val) << CONF_NDCRP_RA_START_SHIFT))

#define  CONF_NDCRP_PG_PER_BLK_MASK 0x6000
#define  CONF_NDCRP_PG_PER_BLK_SHIFT 13
#define  CONF_NDCRP_PG_PER_BLK_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_PG_PER_BLK_MASK) >> CONF_NDCRP_PG_PER_BLK_SHIFT)
#define  CONF_NDCRP_PG_PER_BLK_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_PG_PER_BLK_MASK) | (((uint32_t)val) << CONF_NDCRP_PG_PER_BLK_SHIFT))

#define  CONF_NDCRP_ND_ARB_EN_MASK 0x1000
#define  CONF_NDCRP_ND_ARB_EN_SHIFT 12
#define  CONF_NDCRP_ND_ARB_EN_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_ND_ARB_EN_MASK) >> CONF_NDCRP_ND_ARB_EN_SHIFT)
#define  CONF_NDCRP_ND_ARB_EN_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_ND_ARB_EN_MASK) | (((uint32_t)val) << CONF_NDCRP_ND_ARB_EN_SHIFT))

#define  CONF_NDCRP_RDYM_MASK 0x800
#define  CONF_NDCRP_RDYM_SHIFT 11
#define  CONF_NDCRP_RDYM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_RDYM_MASK) >> CONF_NDCRP_RDYM_SHIFT)
#define  CONF_NDCRP_RDYM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_RDYM_MASK) | (((uint32_t)val) << CONF_NDCRP_RDYM_SHIFT))

#define  CONF_NDCRP_CS0_PAGEDM_MASK 0x400
#define  CONF_NDCRP_CS0_PAGEDM_SHIFT 10
#define  CONF_NDCRP_CS0_PAGEDM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_CS0_PAGEDM_MASK) >> CONF_NDCRP_CS0_PAGEDM_SHIFT)
#define  CONF_NDCRP_CS0_PAGEDM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_CS0_PAGEDM_MASK) | (((uint32_t)val) << CONF_NDCRP_CS0_PAGEDM_SHIFT))

#define  CONF_NDCRP_CS1_PAGEDM_MASK 0x200
#define  CONF_NDCRP_CS1_PAGEDM_SHIFT 9
#define  CONF_NDCRP_CS1_PAGEDM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_CS1_PAGEDM_MASK) >> CONF_NDCRP_CS1_PAGEDM_SHIFT)
#define  CONF_NDCRP_CS1_PAGEDM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_CS1_PAGEDM_MASK) | (((uint32_t)val) << CONF_NDCRP_CS1_PAGEDM_SHIFT))

#define  CONF_NDCRP_CS0_CMDDM_MASK 0x100
#define  CONF_NDCRP_CS0_CMDDM_SHIFT 8
#define  CONF_NDCRP_CS0_CMDDM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_CS0_CMDDM_MASK) >> CONF_NDCRP_CS0_CMDDM_SHIFT)
#define  CONF_NDCRP_CS0_CMDDM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_CS0_CMDDM_MASK) | (((uint32_t)val) << CONF_NDCRP_CS0_CMDDM_SHIFT))

#define  CONF_NDCRP_CS1_CMDDM_MASK 0x80
#define  CONF_NDCRP_CS1_CMDDM_SHIFT 7
#define  CONF_NDCRP_CS1_CMDDM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_CS1_CMDDM_MASK) >> CONF_NDCRP_CS1_CMDDM_SHIFT)
#define  CONF_NDCRP_CS1_CMDDM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_CS1_CMDDM_MASK) | (((uint32_t)val) << CONF_NDCRP_CS1_CMDDM_SHIFT))

#define  CONF_NDCRP_CS0_BBDM_MASK 0x40
#define  CONF_NDCRP_CS0_BBDM_SHIFT 6
#define  CONF_NDCRP_CS0_BBDM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_CS0_BBDM_MASK) >> CONF_NDCRP_CS0_BBDM_SHIFT)
#define  CONF_NDCRP_CS0_BBDM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_CS0_BBDM_MASK) | (((uint32_t)val) << CONF_NDCRP_CS0_BBDM_SHIFT))

#define  CONF_NDCRP_CS1_BBDM_MASK 0x20
#define  CONF_NDCRP_CS1_BBDM_SHIFT 5
#define  CONF_NDCRP_CS1_BBDM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_CS1_BBDM_MASK) >> CONF_NDCRP_CS1_BBDM_SHIFT)
#define  CONF_NDCRP_CS1_BBDM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_CS1_BBDM_MASK) | (((uint32_t)val) << CONF_NDCRP_CS1_BBDM_SHIFT))

#define  CONF_NDCRP_UNCERRM_MASK 0x10
#define  CONF_NDCRP_UNCERRM_SHIFT 4
#define  CONF_NDCRP_UNCERRM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_UNCERRM_MASK) >> CONF_NDCRP_UNCERRM_SHIFT)
#define  CONF_NDCRP_UNCERRM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_UNCERRM_MASK) | (((uint32_t)val) << CONF_NDCRP_UNCERRM_SHIFT))

#define  CONF_NDCRP_CORERRM_MASK 0x8
#define  CONF_NDCRP_CORERRM_SHIFT 3
#define  CONF_NDCRP_CORERRM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_CORERRM_MASK) >> CONF_NDCRP_CORERRM_SHIFT)
#define  CONF_NDCRP_CORERRM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_CORERRM_MASK) | (((uint32_t)val) << CONF_NDCRP_CORERRM_SHIFT))

#define  CONF_NDCRP_WRDREQM_MASK 0x4
#define  CONF_NDCRP_WRDREQM_SHIFT 2
#define  CONF_NDCRP_WRDREQM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_WRDREQM_MASK) >> CONF_NDCRP_WRDREQM_SHIFT)
#define  CONF_NDCRP_WRDREQM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_WRDREQM_MASK) | (((uint32_t)val) << CONF_NDCRP_WRDREQM_SHIFT))

#define  CONF_NDCRP_RDDREQM_MASK 0x2
#define  CONF_NDCRP_RDDREQM_SHIFT 1
#define  CONF_NDCRP_RDDREQM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_RDDREQM_MASK) >> CONF_NDCRP_RDDREQM_SHIFT)
#define  CONF_NDCRP_RDDREQM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_RDDREQM_MASK) | (((uint32_t)val) << CONF_NDCRP_RDDREQM_SHIFT))

#define  CONF_NDCRP_WRCMDREQM_MASK 0x1
#define  CONF_NDCRP_WRCMDREQM_SHIFT 0
#define  CONF_NDCRP_WRCMDREQM_MASK_SHIFT(reg) (((reg) & CONF_NDCRP_WRCMDREQM_MASK) >> CONF_NDCRP_WRCMDREQM_SHIFT)
#define  CONF_NDCRP_WRCMDREQM_REPLACE_VAL(reg,val) (((reg) & ~CONF_NDCRP_WRCMDREQM_MASK) | (((uint32_t)val) << CONF_NDCRP_WRCMDREQM_SHIFT))

//====================================================================
//Register: NAND_PLUS Config Register (CFG)
//====================================================================

#define  CONF_CFG_RESERVED1_MASK 0xe0000000
#define  CONF_CFG_RESERVED1_SHIFT 29
#define  CONF_CFG_RESERVED1_MASK_SHIFT(reg) (((reg) & CONF_CFG_RESERVED1_MASK) >> CONF_CFG_RESERVED1_SHIFT)
#define  CONF_CFG_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RESERVED1_MASK) | (((uint32_t)val) << CONF_CFG_RESERVED1_SHIFT))

#define  CONF_CFG_BCH_EN_MASK 0x10000000
#define  CONF_CFG_BCH_EN_SHIFT 28
#define  CONF_CFG_BCH_EN_MASK_SHIFT(reg) (((reg) & CONF_CFG_BCH_EN_MASK) >> CONF_CFG_BCH_EN_SHIFT)
#define  CONF_CFG_BCH_EN_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_BCH_EN_MASK) | (((uint32_t)val) << CONF_CFG_BCH_EN_SHIFT))

#define  CONF_CFG_RESERVED2_MASK 0x8000000
#define  CONF_CFG_RESERVED2_SHIFT 27
#define  CONF_CFG_RESERVED2_MASK_SHIFT(reg) (((reg) & CONF_CFG_RESERVED2_MASK) >> CONF_CFG_RESERVED2_SHIFT)
#define  CONF_CFG_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RESERVED2_MASK) | (((uint32_t)val) << CONF_CFG_RESERVED2_SHIFT))

#define  CONF_CFG_RDFAVORCNT_MASK 0x7000000
#define  CONF_CFG_RDFAVORCNT_SHIFT 24
#define  CONF_CFG_RDFAVORCNT_MASK_SHIFT(reg) (((reg) & CONF_CFG_RDFAVORCNT_MASK) >> CONF_CFG_RDFAVORCNT_SHIFT)
#define  CONF_CFG_RDFAVORCNT_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RDFAVORCNT_MASK) | (((uint32_t)val) << CONF_CFG_RDFAVORCNT_SHIFT))

#define  CONF_CFG_RESERVED3_MASK 0xe00000
#define  CONF_CFG_RESERVED3_SHIFT 21
#define  CONF_CFG_RESERVED3_MASK_SHIFT(reg) (((reg) & CONF_CFG_RESERVED3_MASK) >> CONF_CFG_RESERVED3_SHIFT)
#define  CONF_CFG_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RESERVED3_MASK) | (((uint32_t)val) << CONF_CFG_RESERVED3_SHIFT))

#define  CONF_CFG_RDENABLE_MASK 0x100000
#define  CONF_CFG_RDENABLE_SHIFT 20
#define  CONF_CFG_RDENABLE_MASK_SHIFT(reg) (((reg) & CONF_CFG_RDENABLE_MASK) >> CONF_CFG_RDENABLE_SHIFT)
#define  CONF_CFG_RDENABLE_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RDENABLE_MASK) | (((uint32_t)val) << CONF_CFG_RDENABLE_SHIFT))

#define  CONF_CFG_RESERVED4_MASK 0xe0000
#define  CONF_CFG_RESERVED4_SHIFT 17
#define  CONF_CFG_RESERVED4_MASK_SHIFT(reg) (((reg) & CONF_CFG_RESERVED4_MASK) >> CONF_CFG_RESERVED4_SHIFT)
#define  CONF_CFG_RESERVED4_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RESERVED4_MASK) | (((uint32_t)val) << CONF_CFG_RESERVED4_SHIFT))

#define  CONF_CFG_WRENABLE_MASK 0x10000
#define  CONF_CFG_WRENABLE_SHIFT 16
#define  CONF_CFG_WRENABLE_MASK_SHIFT(reg) (((reg) & CONF_CFG_WRENABLE_MASK) >> CONF_CFG_WRENABLE_SHIFT)
#define  CONF_CFG_WRENABLE_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_WRENABLE_MASK) | (((uint32_t)val) << CONF_CFG_WRENABLE_SHIFT))

#define  CONF_CFG_RESERVED5_MASK 0xe000
#define  CONF_CFG_RESERVED5_SHIFT 13
#define  CONF_CFG_RESERVED5_MASK_SHIFT(reg) (((reg) & CONF_CFG_RESERVED5_MASK) >> CONF_CFG_RESERVED5_SHIFT)
#define  CONF_CFG_RESERVED5_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RESERVED5_MASK) | (((uint32_t)val) << CONF_CFG_RESERVED5_SHIFT))

#define  CONF_CFG_CPU2CORE_MASK 0x1000
#define  CONF_CFG_CPU2CORE_SHIFT 12
#define  CONF_CFG_CPU2CORE_MASK_SHIFT(reg) (((reg) & CONF_CFG_CPU2CORE_MASK) >> CONF_CFG_CPU2CORE_SHIFT)
#define  CONF_CFG_CPU2CORE_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_CPU2CORE_MASK) | (((uint32_t)val) << CONF_CFG_CPU2CORE_SHIFT))

#define  CONF_CFG_RESERVED6_MASK 0xe00
#define  CONF_CFG_RESERVED6_SHIFT 9
#define  CONF_CFG_RESERVED6_MASK_SHIFT(reg) (((reg) & CONF_CFG_RESERVED6_MASK) >> CONF_CFG_RESERVED6_SHIFT)
#define  CONF_CFG_RESERVED6_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RESERVED6_MASK) | (((uint32_t)val) << CONF_CFG_RESERVED6_SHIFT))

#define  CONF_CFG_EB4W_MASK 0x100
#define  CONF_CFG_EB4W_SHIFT 8
#define  CONF_CFG_EB4W_MASK_SHIFT(reg) (((reg) & CONF_CFG_EB4W_MASK) >> CONF_CFG_EB4W_SHIFT)
#define  CONF_CFG_EB4W_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_EB4W_MASK) | (((uint32_t)val) << CONF_CFG_EB4W_SHIFT))

#define  CONF_CFG_RESERVED7_MASK 0xe0
#define  CONF_CFG_RESERVED7_SHIFT 5
#define  CONF_CFG_RESERVED7_MASK_SHIFT(reg) (((reg) & CONF_CFG_RESERVED7_MASK) >> CONF_CFG_RESERVED7_SHIFT)
#define  CONF_CFG_RESERVED7_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RESERVED7_MASK) | (((uint32_t)val) << CONF_CFG_RESERVED7_SHIFT))

#define  CONF_CFG_CSEL_MASK 0x10
#define  CONF_CFG_CSEL_SHIFT 4
#define  CONF_CFG_CSEL_MASK_SHIFT(reg) (((reg) & CONF_CFG_CSEL_MASK) >> CONF_CFG_CSEL_SHIFT)
#define  CONF_CFG_CSEL_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_CSEL_MASK) | (((uint32_t)val) << CONF_CFG_CSEL_SHIFT))

#define  CONF_CFG_RESERVED8_MASK 0xe
#define  CONF_CFG_RESERVED8_SHIFT 1
#define  CONF_CFG_RESERVED8_MASK_SHIFT(reg) (((reg) & CONF_CFG_RESERVED8_MASK) >> CONF_CFG_RESERVED8_SHIFT)
#define  CONF_CFG_RESERVED8_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_RESERVED8_MASK) | (((uint32_t)val) << CONF_CFG_RESERVED8_SHIFT))

#define  CONF_CFG_LB_MASK 0x1
#define  CONF_CFG_LB_SHIFT 0
#define  CONF_CFG_LB_MASK_SHIFT(reg) (((reg) & CONF_CFG_LB_MASK) >> CONF_CFG_LB_SHIFT)
#define  CONF_CFG_LB_REPLACE_VAL(reg,val) (((reg) & ~CONF_CFG_LB_MASK) | (((uint32_t)val) << CONF_CFG_LB_SHIFT))

//====================================================================
//Register: NAND_PLUS Write Config Register (WCFG)
//====================================================================

#define  CONF_WCFG_RESERVED1_MASK 0xffe00000
#define  CONF_WCFG_RESERVED1_SHIFT 21
#define  CONF_WCFG_RESERVED1_MASK_SHIFT(reg) (((reg) & CONF_WCFG_RESERVED1_MASK) >> CONF_WCFG_RESERVED1_SHIFT)
#define  CONF_WCFG_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~CONF_WCFG_RESERVED1_MASK) | (((uint32_t)val) << CONF_WCFG_RESERVED1_SHIFT))

#define  CONF_WCFG_WDBC_MASK 0x100000
#define  CONF_WCFG_WDBC_SHIFT 20
#define  CONF_WCFG_WDBC_MASK_SHIFT(reg) (((reg) & CONF_WCFG_WDBC_MASK) >> CONF_WCFG_WDBC_SHIFT)
#define  CONF_WCFG_WDBC_REPLACE_VAL(reg,val) (((reg) & ~CONF_WCFG_WDBC_MASK) | (((uint32_t)val) << CONF_WCFG_WDBC_SHIFT))

#define  CONF_WCFG_RESERVED2_MASK 0x80000
#define  CONF_WCFG_RESERVED2_SHIFT 19
#define  CONF_WCFG_RESERVED2_MASK_SHIFT(reg) (((reg) & CONF_WCFG_RESERVED2_MASK) >> CONF_WCFG_RESERVED2_SHIFT)
#define  CONF_WCFG_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~CONF_WCFG_RESERVED2_MASK) | (((uint32_t)val) << CONF_WCFG_RESERVED2_SHIFT))

#define  CONF_WCFG_WADDRCYC_MASK 0x70000
#define  CONF_WCFG_WADDRCYC_SHIFT 16
#define  CONF_WCFG_WADDRCYC_MASK_SHIFT(reg) (((reg) & CONF_WCFG_WADDRCYC_MASK) >> CONF_WCFG_WADDRCYC_SHIFT)
#define  CONF_WCFG_WADDRCYC_REPLACE_VAL(reg,val) (((reg) & ~CONF_WCFG_WADDRCYC_MASK) | (((uint32_t)val) << CONF_WCFG_WADDRCYC_SHIFT))

#define  CONF_WCFG_WCMD1_MASK 0xff00
#define  CONF_WCFG_WCMD1_SHIFT 8
#define  CONF_WCFG_WCMD1_MASK_SHIFT(reg) (((reg) & CONF_WCFG_WCMD1_MASK) >> CONF_WCFG_WCMD1_SHIFT)
#define  CONF_WCFG_WCMD1_REPLACE_VAL(reg,val) (((reg) & ~CONF_WCFG_WCMD1_MASK) | (((uint32_t)val) << CONF_WCFG_WCMD1_SHIFT))

#define  CONF_WCFG_WCMD0_MASK 0xff
#define  CONF_WCFG_WCMD0_SHIFT 0
#define  CONF_WCFG_WCMD0_MASK_SHIFT(reg) (((reg) & CONF_WCFG_WCMD0_MASK) >> CONF_WCFG_WCMD0_SHIFT)
#define  CONF_WCFG_WCMD0_REPLACE_VAL(reg,val) (((reg) & ~CONF_WCFG_WCMD0_MASK) | (((uint32_t)val) << CONF_WCFG_WCMD0_SHIFT))

//====================================================================
//Register: NAND_PLUS Read Config Register (RCFG)
//====================================================================

#define  CONF_RCFG_RESERVED1_MASK 0xffe00000
#define  CONF_RCFG_RESERVED1_SHIFT 21
#define  CONF_RCFG_RESERVED1_MASK_SHIFT(reg) (((reg) & CONF_RCFG_RESERVED1_MASK) >> CONF_RCFG_RESERVED1_SHIFT)
#define  CONF_RCFG_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~CONF_RCFG_RESERVED1_MASK) | (((uint32_t)val) << CONF_RCFG_RESERVED1_SHIFT))

#define  CONF_RCFG_RDBC_MASK 0x100000
#define  CONF_RCFG_RDBC_SHIFT 20
#define  CONF_RCFG_RDBC_MASK_SHIFT(reg) (((reg) & CONF_RCFG_RDBC_MASK) >> CONF_RCFG_RDBC_SHIFT)
#define  CONF_RCFG_RDBC_REPLACE_VAL(reg,val) (((reg) & ~CONF_RCFG_RDBC_MASK) | (((uint32_t)val) << CONF_RCFG_RDBC_SHIFT))

#define  CONF_RCFG_RESERVED2_MASK 0x80000
#define  CONF_RCFG_RESERVED2_SHIFT 19
#define  CONF_RCFG_RESERVED2_MASK_SHIFT(reg) (((reg) & CONF_RCFG_RESERVED2_MASK) >> CONF_RCFG_RESERVED2_SHIFT)
#define  CONF_RCFG_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~CONF_RCFG_RESERVED2_MASK) | (((uint32_t)val) << CONF_RCFG_RESERVED2_SHIFT))

#define  CONF_RCFG_RADDRCYC_MASK 0x70000
#define  CONF_RCFG_RADDRCYC_SHIFT 16
#define  CONF_RCFG_RADDRCYC_MASK_SHIFT(reg) (((reg) & CONF_RCFG_RADDRCYC_MASK) >> CONF_RCFG_RADDRCYC_SHIFT)
#define  CONF_RCFG_RADDRCYC_REPLACE_VAL(reg,val) (((reg) & ~CONF_RCFG_RADDRCYC_MASK) | (((uint32_t)val) << CONF_RCFG_RADDRCYC_SHIFT))

#define  CONF_RCFG_RCMD1_MASK 0xff00
#define  CONF_RCFG_RCMD1_SHIFT 8
#define  CONF_RCFG_RCMD1_MASK_SHIFT(reg) (((reg) & CONF_RCFG_RCMD1_MASK) >> CONF_RCFG_RCMD1_SHIFT)
#define  CONF_RCFG_RCMD1_REPLACE_VAL(reg,val) (((reg) & ~CONF_RCFG_RCMD1_MASK) | (((uint32_t)val) << CONF_RCFG_RCMD1_SHIFT))

#define  CONF_RCFG_RCMD0_MASK 0xff
#define  CONF_RCFG_RCMD0_SHIFT 0
#define  CONF_RCFG_RCMD0_MASK_SHIFT(reg) (((reg) & CONF_RCFG_RCMD0_MASK) >> CONF_RCFG_RCMD0_SHIFT)
#define  CONF_RCFG_RCMD0_REPLACE_VAL(reg,val) (((reg) & ~CONF_RCFG_RCMD0_MASK) | (((uint32_t)val) << CONF_RCFG_RCMD0_SHIFT))

//====================================================================
//Register: NAND_PLUS Erase Config Register (ECFG)
//====================================================================

#define  CONF_ECFG_STCMD_MASK 0xff000000
#define  CONF_ECFG_STCMD_SHIFT 24
#define  CONF_ECFG_STCMD_MASK_SHIFT(reg) (((reg) & CONF_ECFG_STCMD_MASK) >> CONF_ECFG_STCMD_SHIFT)
#define  CONF_ECFG_STCMD_REPLACE_VAL(reg,val) (((reg) & ~CONF_ECFG_STCMD_MASK) | (((uint32_t)val) << CONF_ECFG_STCMD_SHIFT))

#define  CONF_ECFG_RESERVED1_MASK 0xe00000
#define  CONF_ECFG_RESERVED1_SHIFT 21
#define  CONF_ECFG_RESERVED1_MASK_SHIFT(reg) (((reg) & CONF_ECFG_RESERVED1_MASK) >> CONF_ECFG_RESERVED1_SHIFT)
#define  CONF_ECFG_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~CONF_ECFG_RESERVED1_MASK) | (((uint32_t)val) << CONF_ECFG_RESERVED1_SHIFT))

#define  CONF_ECFG_EDBC_MASK 0x100000
#define  CONF_ECFG_EDBC_SHIFT 20
#define  CONF_ECFG_EDBC_MASK_SHIFT(reg) (((reg) & CONF_ECFG_EDBC_MASK) >> CONF_ECFG_EDBC_SHIFT)
#define  CONF_ECFG_EDBC_REPLACE_VAL(reg,val) (((reg) & ~CONF_ECFG_EDBC_MASK) | (((uint32_t)val) << CONF_ECFG_EDBC_SHIFT))

#define  CONF_ECFG_EESERVED_MASK 0x80000
#define  CONF_ECFG_EESERVED_SHIFT 19
#define  CONF_ECFG_EESERVED_MASK_SHIFT(reg) (((reg) & CONF_ECFG_EESERVED_MASK) >> CONF_ECFG_EESERVED_SHIFT)
#define  CONF_ECFG_EESERVED_REPLACE_VAL(reg,val) (((reg) & ~CONF_ECFG_EESERVED_MASK) | (((uint32_t)val) << CONF_ECFG_EESERVED_SHIFT))

#define  CONF_ECFG_EADDRCYC_MASK 0x70000
#define  CONF_ECFG_EADDRCYC_SHIFT 16
#define  CONF_ECFG_EADDRCYC_MASK_SHIFT(reg) (((reg) & CONF_ECFG_EADDRCYC_MASK) >> CONF_ECFG_EADDRCYC_SHIFT)
#define  CONF_ECFG_EADDRCYC_REPLACE_VAL(reg,val) (((reg) & ~CONF_ECFG_EADDRCYC_MASK) | (((uint32_t)val) << CONF_ECFG_EADDRCYC_SHIFT))

#define  CONF_ECFG_ECMD1_MASK 0xff00
#define  CONF_ECFG_ECMD1_SHIFT 8
#define  CONF_ECFG_ECMD1_MASK_SHIFT(reg) (((reg) & CONF_ECFG_ECMD1_MASK) >> CONF_ECFG_ECMD1_SHIFT)
#define  CONF_ECFG_ECMD1_REPLACE_VAL(reg,val) (((reg) & ~CONF_ECFG_ECMD1_MASK) | (((uint32_t)val) << CONF_ECFG_ECMD1_SHIFT))

#define  CONF_ECFG_ECMD0_MASK 0xff
#define  CONF_ECFG_ECMD0_SHIFT 0
#define  CONF_ECFG_ECMD0_MASK_SHIFT(reg) (((reg) & CONF_ECFG_ECMD0_MASK) >> CONF_ECFG_ECMD0_SHIFT)
#define  CONF_ECFG_ECMD0_REPLACE_VAL(reg,val) (((reg) & ~CONF_ECFG_ECMD0_MASK) | (((uint32_t)val) << CONF_ECFG_ECMD0_SHIFT))

//====================================================================
//Register: NAND_PLUS Status Register (STATUS)
//====================================================================

#define  CONF_STATUS_RESERVED1_MASK 0xffffff80
#define  CONF_STATUS_RESERVED1_SHIFT 7
#define  CONF_STATUS_RESERVED1_MASK_SHIFT(reg) (((reg) & CONF_STATUS_RESERVED1_MASK) >> CONF_STATUS_RESERVED1_SHIFT)
#define  CONF_STATUS_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~CONF_STATUS_RESERVED1_MASK) | (((uint32_t)val) << CONF_STATUS_RESERVED1_SHIFT))

#define  CONF_STATUS_RD_DLERR_MASK 0x40
#define  CONF_STATUS_RD_DLERR_SHIFT 6
#define  CONF_STATUS_RD_DLERR_MASK_SHIFT(reg) (((reg) & CONF_STATUS_RD_DLERR_MASK) >> CONF_STATUS_RD_DLERR_SHIFT)
#define  CONF_STATUS_RD_DLERR_REPLACE_VAL(reg,val) (((reg) & ~CONF_STATUS_RD_DLERR_MASK) | (((uint32_t)val) << CONF_STATUS_RD_DLERR_SHIFT))

#define  CONF_STATUS_RD_ECCERR_MASK 0x20
#define  CONF_STATUS_RD_ECCERR_SHIFT 5
#define  CONF_STATUS_RD_ECCERR_MASK_SHIFT(reg) (((reg) & CONF_STATUS_RD_ECCERR_MASK) >> CONF_STATUS_RD_ECCERR_SHIFT)
#define  CONF_STATUS_RD_ECCERR_REPLACE_VAL(reg,val) (((reg) & ~CONF_STATUS_RD_ECCERR_MASK) | (((uint32_t)val) << CONF_STATUS_RD_ECCERR_SHIFT))

#define  CONF_STATUS_RD_IDLE_MASK 0x10
#define  CONF_STATUS_RD_IDLE_SHIFT 4
#define  CONF_STATUS_RD_IDLE_MASK_SHIFT(reg) (((reg) & CONF_STATUS_RD_IDLE_MASK) >> CONF_STATUS_RD_IDLE_SHIFT)
#define  CONF_STATUS_RD_IDLE_REPLACE_VAL(reg,val) (((reg) & ~CONF_STATUS_RD_IDLE_MASK) | (((uint32_t)val) << CONF_STATUS_RD_IDLE_SHIFT))

#define  CONF_STATUS_ER_ERR_MASK 0x8
#define  CONF_STATUS_ER_ERR_SHIFT 3
#define  CONF_STATUS_ER_ERR_MASK_SHIFT(reg) (((reg) & CONF_STATUS_ER_ERR_MASK) >> CONF_STATUS_ER_ERR_SHIFT)
#define  CONF_STATUS_ER_ERR_REPLACE_VAL(reg,val) (((reg) & ~CONF_STATUS_ER_ERR_MASK) | (((uint32_t)val) << CONF_STATUS_ER_ERR_SHIFT))

#define  CONF_STATUS_WR_DLERR_MASK 0x4
#define  CONF_STATUS_WR_DLERR_SHIFT 2
#define  CONF_STATUS_WR_DLERR_MASK_SHIFT(reg) (((reg) & CONF_STATUS_WR_DLERR_MASK) >> CONF_STATUS_WR_DLERR_SHIFT)
#define  CONF_STATUS_WR_DLERR_REPLACE_VAL(reg,val) (((reg) & ~CONF_STATUS_WR_DLERR_MASK) | (((uint32_t)val) << CONF_STATUS_WR_DLERR_SHIFT))

#define  CONF_STATUS_WR_ERR_MASK 0x2
#define  CONF_STATUS_WR_ERR_SHIFT 1
#define  CONF_STATUS_WR_ERR_MASK_SHIFT(reg) (((reg) & CONF_STATUS_WR_ERR_MASK) >> CONF_STATUS_WR_ERR_SHIFT)
#define  CONF_STATUS_WR_ERR_REPLACE_VAL(reg,val) (((reg) & ~CONF_STATUS_WR_ERR_MASK) | (((uint32_t)val) << CONF_STATUS_WR_ERR_SHIFT))

#define  CONF_STATUS_WR_IDLE_MASK 0x1
#define  CONF_STATUS_WR_IDLE_SHIFT 0
#define  CONF_STATUS_WR_IDLE_MASK_SHIFT(reg) (((reg) & CONF_STATUS_WR_IDLE_MASK) >> CONF_STATUS_WR_IDLE_SHIFT)
#define  CONF_STATUS_WR_IDLE_REPLACE_VAL(reg,val) (((reg) & ~CONF_STATUS_WR_IDLE_MASK) | (((uint32_t)val) << CONF_STATUS_WR_IDLE_SHIFT))

//====================================================================
//Register: NAND_PLUS Error Clear Register (ERR)
//====================================================================

#define  CONF_ERR_RESERVED1_MASK 0xffffffe0
#define  CONF_ERR_RESERVED1_SHIFT 5
#define  CONF_ERR_RESERVED1_MASK_SHIFT(reg) (((reg) & CONF_ERR_RESERVED1_MASK) >> CONF_ERR_RESERVED1_SHIFT)
#define  CONF_ERR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~CONF_ERR_RESERVED1_MASK) | (((uint32_t)val) << CONF_ERR_RESERVED1_SHIFT))

#define  CONF_ERR_CLR_RRAM_MASK 0x10
#define  CONF_ERR_CLR_RRAM_SHIFT 4
#define  CONF_ERR_CLR_RRAM_MASK_SHIFT(reg) (((reg) & CONF_ERR_CLR_RRAM_MASK) >> CONF_ERR_CLR_RRAM_SHIFT)
#define  CONF_ERR_CLR_RRAM_REPLACE_VAL(reg,val) (((reg) & ~CONF_ERR_CLR_RRAM_MASK) | (((uint32_t)val) << CONF_ERR_CLR_RRAM_SHIFT))

#define  CONF_ERR_CLR_WRAM_MASK 0x8
#define  CONF_ERR_CLR_WRAM_SHIFT 3
#define  CONF_ERR_CLR_WRAM_MASK_SHIFT(reg) (((reg) & CONF_ERR_CLR_WRAM_MASK) >> CONF_ERR_CLR_WRAM_SHIFT)
#define  CONF_ERR_CLR_WRAM_REPLACE_VAL(reg,val) (((reg) & ~CONF_ERR_CLR_WRAM_MASK) | (((uint32_t)val) << CONF_ERR_CLR_WRAM_SHIFT))

#define  CONF_ERR_CLR_ERASE_MASK 0x4
#define  CONF_ERR_CLR_ERASE_SHIFT 2
#define  CONF_ERR_CLR_ERASE_MASK_SHIFT(reg) (((reg) & CONF_ERR_CLR_ERASE_MASK) >> CONF_ERR_CLR_ERASE_SHIFT)
#define  CONF_ERR_CLR_ERASE_REPLACE_VAL(reg,val) (((reg) & ~CONF_ERR_CLR_ERASE_MASK) | (((uint32_t)val) << CONF_ERR_CLR_ERASE_SHIFT))

#define  CONF_ERR_CLR_READ_MASK 0x2
#define  CONF_ERR_CLR_READ_SHIFT 1
#define  CONF_ERR_CLR_READ_MASK_SHIFT(reg) (((reg) & CONF_ERR_CLR_READ_MASK) >> CONF_ERR_CLR_READ_SHIFT)
#define  CONF_ERR_CLR_READ_REPLACE_VAL(reg,val) (((reg) & ~CONF_ERR_CLR_READ_MASK) | (((uint32_t)val) << CONF_ERR_CLR_READ_SHIFT))

#define  CONF_ERR_CLR_WRITE_MASK 0x1
#define  CONF_ERR_CLR_WRITE_SHIFT 0
#define  CONF_ERR_CLR_WRITE_MASK_SHIFT(reg) (((reg) & CONF_ERR_CLR_WRITE_MASK) >> CONF_ERR_CLR_WRITE_SHIFT)
#define  CONF_ERR_CLR_WRITE_REPLACE_VAL(reg,val) (((reg) & ~CONF_ERR_CLR_WRITE_MASK) | (((uint32_t)val) << CONF_ERR_CLR_WRITE_SHIFT))

#endif // DNAND
