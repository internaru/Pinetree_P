 /*
 **************************************************************************************
 *
 * Copyright (c) 2010 Marvell International, Ltd.
 *
 **************************************************************************************
 *
 * Marvell Commercial License Option
 *
 * If you received this File from Marvell as part of a proprietary software release,
 * the File is considered Marvell Proprietary and Confidential Information, and is
 * licensed to you under the terms of the applicable Commercial License.
 *
 **************************************************************************************
 *
 * Marvell GPL License Option
 *
 * If you received this File from Marvell as part of a Linux distribution, this File
 * is licensed to you in accordance with the terms and conditions of the General Public
 * License Version 2, June 1991 (the "GPL License").  You can redistribute it and/or
 * modify it under the terms of the GPL License; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GPL License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this
 * program.  If not, see http://www.gnu.org/licenses/.
 *
 **************************************************************************************
 *
 * \file PRNUDSNU_CORR_regmasks.h
 * Generated using RegBuild 1.6.1
 *
 *************************************************************************
 */

#ifndef _PRNUDSNU_CORR_REGMASKS_H_
#define _PRNUDSNU_CORR_REGMASKS_H_

#include <stdint.h>

//====================================================================
//
//Register File: PRNUDSNU Correction (PRNUDSNU_CORR)
/** \brief Register Descriptions for the PRNUDSNU Correction block*/
//
//====================================================================

//====================================================================
//Register: Left and Right Starting Gain Configuration Register (RLSCR)
/** \brief The value of Left Max Gain (or Right Min Gain) varies from 0 to 1.875.*/
//====================================================================

#define  PRNUDSNU_CORR_RLSCR_RESERVED1_MASK 0xff000000
#define  PRNUDSNU_CORR_RLSCR_RESERVED1_SHIFT 24
#define  PRNUDSNU_CORR_RLSCR_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_RESERVED1_MASK) >> PRNUDSNU_CORR_RLSCR_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC2_MASK 0x800000
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC2_SHIFT 23
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_LEFTGAININTC2_MASK) >> PRNUDSNU_CORR_RLSCR_LEFTGAININTC2_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_LEFTGAININTC2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_LEFTGAININTC2_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC2_MASK 0x700000
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC2_SHIFT 20
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_LEFTGAINDECC2_MASK) >> PRNUDSNU_CORR_RLSCR_LEFTGAINDECC2_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_LEFTGAINDECC2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_LEFTGAINDECC2_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC2_MASK 0x80000
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC2_SHIFT 19
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_RIGHTGAININTC2_MASK) >> PRNUDSNU_CORR_RLSCR_RIGHTGAININTC2_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_RIGHTGAININTC2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_RIGHTGAININTC2_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC2_MASK 0x70000
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC2_SHIFT 16
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC2_MASK) >> PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC2_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC2_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC1_MASK 0x8000
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC1_SHIFT 15
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_LEFTGAININTC1_MASK) >> PRNUDSNU_CORR_RLSCR_LEFTGAININTC1_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_LEFTGAININTC1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_LEFTGAININTC1_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC1_MASK 0x7000
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC1_SHIFT 12
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_LEFTGAINDECC1_MASK) >> PRNUDSNU_CORR_RLSCR_LEFTGAINDECC1_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_LEFTGAINDECC1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_LEFTGAINDECC1_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC1_MASK 0x800
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC1_SHIFT 11
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_RIGHTGAININTC1_MASK) >> PRNUDSNU_CORR_RLSCR_RIGHTGAININTC1_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_RIGHTGAININTC1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_RIGHTGAININTC1_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC1_MASK 0x700
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC1_SHIFT 8
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC1_MASK) >> PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC1_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC1_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC0_MASK 0x80
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC0_SHIFT 7
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC0_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_LEFTGAININTC0_MASK) >> PRNUDSNU_CORR_RLSCR_LEFTGAININTC0_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_LEFTGAININTC0_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_LEFTGAININTC0_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_LEFTGAININTC0_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC0_MASK 0x70
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC0_SHIFT 4
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC0_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_LEFTGAINDECC0_MASK) >> PRNUDSNU_CORR_RLSCR_LEFTGAINDECC0_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_LEFTGAINDECC0_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_LEFTGAINDECC0_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_LEFTGAINDECC0_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC0_MASK 0x8
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC0_SHIFT 3
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC0_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_RIGHTGAININTC0_MASK) >> PRNUDSNU_CORR_RLSCR_RIGHTGAININTC0_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAININTC0_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_RIGHTGAININTC0_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_RIGHTGAININTC0_SHIFT))

#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC0_MASK 0x7
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC0_SHIFT 0
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC0_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC0_MASK) >> PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC0_SHIFT)
#define  PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC0_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC0_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RLSCR_RIGHTGAINDECC0_SHIFT))

//====================================================================
//Register: Left Slope Value Configuration Register (LSVCR)
/** \brief The left slope value is varies from 0 to (2^8 - 1)/2^14 or 0 to 1/64 or 0 to 0.015625.*/
//====================================================================

#define  PRNUDSNU_CORR_LSVCR_RESERVED1_MASK 0xff000000
#define  PRNUDSNU_CORR_LSVCR_RESERVED1_SHIFT 24
#define  PRNUDSNU_CORR_LSVCR_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LSVCR_RESERVED1_MASK) >> PRNUDSNU_CORR_LSVCR_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_LSVCR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LSVCR_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LSVCR_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC2_MASK 0xff0000
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC2_SHIFT 16
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LSVCR_LEFTSLOPEC2_MASK) >> PRNUDSNU_CORR_LSVCR_LEFTSLOPEC2_SHIFT)
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LSVCR_LEFTSLOPEC2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LSVCR_LEFTSLOPEC2_SHIFT))

#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC1_MASK 0xff00
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC1_SHIFT 8
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LSVCR_LEFTSLOPEC1_MASK) >> PRNUDSNU_CORR_LSVCR_LEFTSLOPEC1_SHIFT)
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LSVCR_LEFTSLOPEC1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LSVCR_LEFTSLOPEC1_SHIFT))

#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC0_MASK 0xff
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC0_SHIFT 0
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC0_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LSVCR_LEFTSLOPEC0_MASK) >> PRNUDSNU_CORR_LSVCR_LEFTSLOPEC0_SHIFT)
#define  PRNUDSNU_CORR_LSVCR_LEFTSLOPEC0_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LSVCR_LEFTSLOPEC0_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LSVCR_LEFTSLOPEC0_SHIFT))

//====================================================================
//Register: Left Max Pixel Configuration Register - Color0/Even (LMPCR0)
//====================================================================

#define  PRNUDSNU_CORR_LMPCR0_RESERVED1_MASK 0xffff0000
#define  PRNUDSNU_CORR_LMPCR0_RESERVED1_SHIFT 16
#define  PRNUDSNU_CORR_LMPCR0_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LMPCR0_RESERVED1_MASK) >> PRNUDSNU_CORR_LMPCR0_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_LMPCR0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LMPCR0_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LMPCR0_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_LMPCR0_LEFTCORR_MASK 0xffff
#define  PRNUDSNU_CORR_LMPCR0_LEFTCORR_SHIFT 0
#define  PRNUDSNU_CORR_LMPCR0_LEFTCORR_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LMPCR0_LEFTCORR_MASK) >> PRNUDSNU_CORR_LMPCR0_LEFTCORR_SHIFT)
#define  PRNUDSNU_CORR_LMPCR0_LEFTCORR_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LMPCR0_LEFTCORR_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LMPCR0_LEFTCORR_SHIFT))

//====================================================================
//Register: Left Max Pixel Configuration Register - Color1/Odd (LMPCR1)
//====================================================================

#define  PRNUDSNU_CORR_LMPCR1_RESERVED1_MASK 0xffff0000
#define  PRNUDSNU_CORR_LMPCR1_RESERVED1_SHIFT 16
#define  PRNUDSNU_CORR_LMPCR1_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LMPCR1_RESERVED1_MASK) >> PRNUDSNU_CORR_LMPCR1_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_LMPCR1_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LMPCR1_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LMPCR1_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_LMPCR1_LEFTCORR_MASK 0xffff
#define  PRNUDSNU_CORR_LMPCR1_LEFTCORR_SHIFT 0
#define  PRNUDSNU_CORR_LMPCR1_LEFTCORR_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LMPCR1_LEFTCORR_MASK) >> PRNUDSNU_CORR_LMPCR1_LEFTCORR_SHIFT)
#define  PRNUDSNU_CORR_LMPCR1_LEFTCORR_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LMPCR1_LEFTCORR_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LMPCR1_LEFTCORR_SHIFT))

//====================================================================
//Register: Left Max Pixel Configuration Register - Color2 (LMPCR2)
//====================================================================

#define  PRNUDSNU_CORR_LMPCR2_RESERVED1_MASK 0xffff0000
#define  PRNUDSNU_CORR_LMPCR2_RESERVED1_SHIFT 16
#define  PRNUDSNU_CORR_LMPCR2_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LMPCR2_RESERVED1_MASK) >> PRNUDSNU_CORR_LMPCR2_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_LMPCR2_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LMPCR2_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LMPCR2_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_LMPCR2_LEFTCORR_MASK 0xffff
#define  PRNUDSNU_CORR_LMPCR2_LEFTCORR_SHIFT 0
#define  PRNUDSNU_CORR_LMPCR2_LEFTCORR_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_LMPCR2_LEFTCORR_MASK) >> PRNUDSNU_CORR_LMPCR2_LEFTCORR_SHIFT)
#define  PRNUDSNU_CORR_LMPCR2_LEFTCORR_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_LMPCR2_LEFTCORR_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_LMPCR2_LEFTCORR_SHIFT))

//====================================================================
//Register: Right Slope Value Configuration Register (RSVCR)
/** \brief The right slope value is varies from 0 to 2^8/2^14 or 0 to 1/64 or 0 to 0.015625.*/
//====================================================================

#define  PRNUDSNU_CORR_RSVCR_RESERVED1_MASK 0xff000000
#define  PRNUDSNU_CORR_RSVCR_RESERVED1_SHIFT 24
#define  PRNUDSNU_CORR_RSVCR_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSVCR_RESERVED1_MASK) >> PRNUDSNU_CORR_RSVCR_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_RSVCR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSVCR_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSVCR_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC2_MASK 0xff0000
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC2_SHIFT 16
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC2_MASK) >> PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC2_SHIFT)
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC2_SHIFT))

#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC1_MASK 0xff00
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC1_SHIFT 8
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC1_MASK) >> PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC1_SHIFT)
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC1_SHIFT))

#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC0_MASK 0xff
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC0_SHIFT 0
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC0_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC0_MASK) >> PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC0_SHIFT)
#define  PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC0_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC0_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSVCR_RIGHTSLOPEC0_SHIFT))

//====================================================================
//Register: Right Start pixel Configuration Register - Color0/even (RSPCR0)
//====================================================================

#define  PRNUDSNU_CORR_RSPCR0_RESERVED1_MASK 0xffff0000
#define  PRNUDSNU_CORR_RSPCR0_RESERVED1_SHIFT 16
#define  PRNUDSNU_CORR_RSPCR0_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSPCR0_RESERVED1_MASK) >> PRNUDSNU_CORR_RSPCR0_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_RSPCR0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSPCR0_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSPCR0_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_RSPCR0_RIGHTSTART_MASK 0xffff
#define  PRNUDSNU_CORR_RSPCR0_RIGHTSTART_SHIFT 0
#define  PRNUDSNU_CORR_RSPCR0_RIGHTSTART_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSPCR0_RIGHTSTART_MASK) >> PRNUDSNU_CORR_RSPCR0_RIGHTSTART_SHIFT)
#define  PRNUDSNU_CORR_RSPCR0_RIGHTSTART_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSPCR0_RIGHTSTART_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSPCR0_RIGHTSTART_SHIFT))

//====================================================================
//Register: Right Start pixel Configuration Register - Color1/odd (RSPCR1)
//====================================================================

#define  PRNUDSNU_CORR_RSPCR1_RESERVED1_MASK 0xffff0000
#define  PRNUDSNU_CORR_RSPCR1_RESERVED1_SHIFT 16
#define  PRNUDSNU_CORR_RSPCR1_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSPCR1_RESERVED1_MASK) >> PRNUDSNU_CORR_RSPCR1_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_RSPCR1_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSPCR1_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSPCR1_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_RSPCR1_RIGHTSTART_MASK 0xffff
#define  PRNUDSNU_CORR_RSPCR1_RIGHTSTART_SHIFT 0
#define  PRNUDSNU_CORR_RSPCR1_RIGHTSTART_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSPCR1_RIGHTSTART_MASK) >> PRNUDSNU_CORR_RSPCR1_RIGHTSTART_SHIFT)
#define  PRNUDSNU_CORR_RSPCR1_RIGHTSTART_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSPCR1_RIGHTSTART_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSPCR1_RIGHTSTART_SHIFT))

//====================================================================
//Register: Right Start pixel Configuration Register - Color2 (RSPCR2)
//====================================================================

#define  PRNUDSNU_CORR_RSPCR2_RESERVED1_MASK 0xffff0000
#define  PRNUDSNU_CORR_RSPCR2_RESERVED1_SHIFT 16
#define  PRNUDSNU_CORR_RSPCR2_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSPCR2_RESERVED1_MASK) >> PRNUDSNU_CORR_RSPCR2_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_RSPCR2_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSPCR2_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSPCR2_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_RSPCR2_RIGHTSTART_MASK 0xffff
#define  PRNUDSNU_CORR_RSPCR2_RIGHTSTART_SHIFT 0
#define  PRNUDSNU_CORR_RSPCR2_RIGHTSTART_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_RSPCR2_RIGHTSTART_MASK) >> PRNUDSNU_CORR_RSPCR2_RIGHTSTART_SHIFT)
#define  PRNUDSNU_CORR_RSPCR2_RIGHTSTART_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_RSPCR2_RIGHTSTART_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_RSPCR2_RIGHTSTART_SHIFT))

//====================================================================
//Register: PRNU/DSNU Configuration Register1 (PDCR1)
//====================================================================

#define  PRNUDSNU_CORR_PDCR1_RESERVED1_MASK 0xfc000000
#define  PRNUDSNU_CORR_PDCR1_RESERVED1_SHIFT 26
#define  PRNUDSNU_CORR_PDCR1_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR1_RESERVED1_MASK) >> PRNUDSNU_CORR_PDCR1_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_PDCR1_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR1_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR1_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_PDCR1_CORRBITS_MASK 0x3800000
#define  PRNUDSNU_CORR_PDCR1_CORRBITS_SHIFT 23
#define  PRNUDSNU_CORR_PDCR1_CORRBITS_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR1_CORRBITS_MASK) >> PRNUDSNU_CORR_PDCR1_CORRBITS_SHIFT)
#define  PRNUDSNU_CORR_PDCR1_CORRBITS_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR1_CORRBITS_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR1_CORRBITS_SHIFT))

#define  PRNUDSNU_CORR_PDCR1_RESERVED2_MASK 0x780000
#define  PRNUDSNU_CORR_PDCR1_RESERVED2_SHIFT 19
#define  PRNUDSNU_CORR_PDCR1_RESERVED2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR1_RESERVED2_MASK) >> PRNUDSNU_CORR_PDCR1_RESERVED2_SHIFT)
#define  PRNUDSNU_CORR_PDCR1_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR1_RESERVED2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR1_RESERVED2_SHIFT))

#define  PRNUDSNU_CORR_PDCR1_ALLOCC2_MASK 0x70000
#define  PRNUDSNU_CORR_PDCR1_ALLOCC2_SHIFT 16
#define  PRNUDSNU_CORR_PDCR1_ALLOCC2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR1_ALLOCC2_MASK) >> PRNUDSNU_CORR_PDCR1_ALLOCC2_SHIFT)
#define  PRNUDSNU_CORR_PDCR1_ALLOCC2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR1_ALLOCC2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR1_ALLOCC2_SHIFT))

#define  PRNUDSNU_CORR_PDCR1_RESERVED3_MASK 0xf800
#define  PRNUDSNU_CORR_PDCR1_RESERVED3_SHIFT 11
#define  PRNUDSNU_CORR_PDCR1_RESERVED3_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR1_RESERVED3_MASK) >> PRNUDSNU_CORR_PDCR1_RESERVED3_SHIFT)
#define  PRNUDSNU_CORR_PDCR1_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR1_RESERVED3_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR1_RESERVED3_SHIFT))

#define  PRNUDSNU_CORR_PDCR1_ALLOCC1_MASK 0x700
#define  PRNUDSNU_CORR_PDCR1_ALLOCC1_SHIFT 8
#define  PRNUDSNU_CORR_PDCR1_ALLOCC1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR1_ALLOCC1_MASK) >> PRNUDSNU_CORR_PDCR1_ALLOCC1_SHIFT)
#define  PRNUDSNU_CORR_PDCR1_ALLOCC1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR1_ALLOCC1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR1_ALLOCC1_SHIFT))

#define  PRNUDSNU_CORR_PDCR1_RESERVED4_MASK 0xf8
#define  PRNUDSNU_CORR_PDCR1_RESERVED4_SHIFT 3
#define  PRNUDSNU_CORR_PDCR1_RESERVED4_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR1_RESERVED4_MASK) >> PRNUDSNU_CORR_PDCR1_RESERVED4_SHIFT)
#define  PRNUDSNU_CORR_PDCR1_RESERVED4_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR1_RESERVED4_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR1_RESERVED4_SHIFT))

#define  PRNUDSNU_CORR_PDCR1_ALLOCC0_MASK 0x7
#define  PRNUDSNU_CORR_PDCR1_ALLOCC0_SHIFT 0
#define  PRNUDSNU_CORR_PDCR1_ALLOCC0_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR1_ALLOCC0_MASK) >> PRNUDSNU_CORR_PDCR1_ALLOCC0_SHIFT)
#define  PRNUDSNU_CORR_PDCR1_ALLOCC0_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR1_ALLOCC0_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR1_ALLOCC0_SHIFT))

//====================================================================
//Register: PRNU/DSNU Configuration Register2 (PDCR2)
//====================================================================

#define  PRNUDSNU_CORR_PDCR2_RESERVED1_MASK 0xfffe0000
#define  PRNUDSNU_CORR_PDCR2_RESERVED1_SHIFT 17
#define  PRNUDSNU_CORR_PDCR2_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_RESERVED1_MASK) >> PRNUDSNU_CORR_PDCR2_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_COLORCOUNT_MASK 0x10000
#define  PRNUDSNU_CORR_PDCR2_COLORCOUNT_SHIFT 16
#define  PRNUDSNU_CORR_PDCR2_COLORCOUNT_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_COLORCOUNT_MASK) >> PRNUDSNU_CORR_PDCR2_COLORCOUNT_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_COLORCOUNT_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_COLORCOUNT_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_COLORCOUNT_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_RESERVED2_MASK 0x8000
#define  PRNUDSNU_CORR_PDCR2_RESERVED2_SHIFT 15
#define  PRNUDSNU_CORR_PDCR2_RESERVED2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_RESERVED2_MASK) >> PRNUDSNU_CORR_PDCR2_RESERVED2_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_RESERVED2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_RESERVED2_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_COEFFWIDTH_MASK 0x7000
#define  PRNUDSNU_CORR_PDCR2_COEFFWIDTH_SHIFT 12
#define  PRNUDSNU_CORR_PDCR2_COEFFWIDTH_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_COEFFWIDTH_MASK) >> PRNUDSNU_CORR_PDCR2_COEFFWIDTH_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_COEFFWIDTH_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_COEFFWIDTH_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_COEFFWIDTH_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_RESERVED3_MASK 0xc00
#define  PRNUDSNU_CORR_PDCR2_RESERVED3_SHIFT 10
#define  PRNUDSNU_CORR_PDCR2_RESERVED3_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_RESERVED3_MASK) >> PRNUDSNU_CORR_PDCR2_RESERVED3_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_RESERVED3_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_RESERVED3_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_IGSTAG_MASK 0x200
#define  PRNUDSNU_CORR_PDCR2_IGSTAG_SHIFT 9
#define  PRNUDSNU_CORR_PDCR2_IGSTAG_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_IGSTAG_MASK) >> PRNUDSNU_CORR_PDCR2_IGSTAG_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_IGSTAG_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_IGSTAG_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_IGSTAG_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_BYPASS_MASK 0x100
#define  PRNUDSNU_CORR_PDCR2_BYPASS_SHIFT 8
#define  PRNUDSNU_CORR_PDCR2_BYPASS_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_BYPASS_MASK) >> PRNUDSNU_CORR_PDCR2_BYPASS_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_BYPASS_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_BYPASS_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_BYPASS_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_RESERVED4_MASK 0xe0
#define  PRNUDSNU_CORR_PDCR2_RESERVED4_SHIFT 5
#define  PRNUDSNU_CORR_PDCR2_RESERVED4_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_RESERVED4_MASK) >> PRNUDSNU_CORR_PDCR2_RESERVED4_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_RESERVED4_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_RESERVED4_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_RESERVED4_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_BYPASSQUAD_MASK 0x10
#define  PRNUDSNU_CORR_PDCR2_BYPASSQUAD_SHIFT 4
#define  PRNUDSNU_CORR_PDCR2_BYPASSQUAD_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_BYPASSQUAD_MASK) >> PRNUDSNU_CORR_PDCR2_BYPASSQUAD_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_BYPASSQUAD_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_BYPASSQUAD_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_BYPASSQUAD_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_BYPASSEXP_MASK 0x8
#define  PRNUDSNU_CORR_PDCR2_BYPASSEXP_SHIFT 3
#define  PRNUDSNU_CORR_PDCR2_BYPASSEXP_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_BYPASSEXP_MASK) >> PRNUDSNU_CORR_PDCR2_BYPASSEXP_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_BYPASSEXP_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_BYPASSEXP_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_BYPASSEXP_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_BYPASSPRNU_MASK 0x4
#define  PRNUDSNU_CORR_PDCR2_BYPASSPRNU_SHIFT 2
#define  PRNUDSNU_CORR_PDCR2_BYPASSPRNU_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_BYPASSPRNU_MASK) >> PRNUDSNU_CORR_PDCR2_BYPASSPRNU_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_BYPASSPRNU_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_BYPASSPRNU_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_BYPASSPRNU_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_BYPASSDSNU_MASK 0x2
#define  PRNUDSNU_CORR_PDCR2_BYPASSDSNU_SHIFT 1
#define  PRNUDSNU_CORR_PDCR2_BYPASSDSNU_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_BYPASSDSNU_MASK) >> PRNUDSNU_CORR_PDCR2_BYPASSDSNU_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_BYPASSDSNU_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_BYPASSDSNU_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_BYPASSDSNU_SHIFT))

#define  PRNUDSNU_CORR_PDCR2_BYPASSBADPIX_MASK 0x1
#define  PRNUDSNU_CORR_PDCR2_BYPASSBADPIX_SHIFT 0
#define  PRNUDSNU_CORR_PDCR2_BYPASSBADPIX_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PDCR2_BYPASSBADPIX_MASK) >> PRNUDSNU_CORR_PDCR2_BYPASSBADPIX_SHIFT)
#define  PRNUDSNU_CORR_PDCR2_BYPASSBADPIX_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PDCR2_BYPASSBADPIX_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PDCR2_BYPASSBADPIX_SHIFT))

//====================================================================
//Register: Percentage of Nominal Configuration Register (PONCR)
//====================================================================

#define  PRNUDSNU_CORR_PONCR_RESERVED1_MASK 0xffff0000
#define  PRNUDSNU_CORR_PONCR_RESERVED1_SHIFT 16
#define  PRNUDSNU_CORR_PONCR_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PONCR_RESERVED1_MASK) >> PRNUDSNU_CORR_PONCR_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_PONCR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PONCR_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PONCR_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_PONCR_PONN_MASK 0xe000
#define  PRNUDSNU_CORR_PONCR_PONN_SHIFT 13
#define  PRNUDSNU_CORR_PONCR_PONN_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PONCR_PONN_MASK) >> PRNUDSNU_CORR_PONCR_PONN_SHIFT)
#define  PRNUDSNU_CORR_PONCR_PONN_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PONCR_PONN_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PONCR_PONN_SHIFT))

#define  PRNUDSNU_CORR_PONCR_PONNORM_MASK 0x1fff
#define  PRNUDSNU_CORR_PONCR_PONNORM_SHIFT 0
#define  PRNUDSNU_CORR_PONCR_PONNORM_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PONCR_PONNORM_MASK) >> PRNUDSNU_CORR_PONCR_PONNORM_SHIFT)
#define  PRNUDSNU_CORR_PONCR_PONNORM_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PONCR_PONNORM_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PONCR_PONNORM_SHIFT))

//====================================================================
//Register: Quadratic Configuration (QUAD)
/** \brief This register is used to configure the quadratic correction operation.
</BR>
</BR>
The quadratic correction is performed on the linearly corrected (prnu/dsnu) pixel x:
</BR>
F(x) = (Q*x + (1-Q)) * x
</BR>
Where the quadratic term Q is given by:
</BR>
Q = (SF1 * Q' * L) >> 8
</BR>
L is the quadratic limiting factor given by:
</BR>
L = Min(256, (x>>4) * SF2 >> 7)
</BR>
and Q' is the shifted quadratic coefficient
</BR>
Q' = quad << q_shift*/
//====================================================================

#define  PRNUDSNU_CORR_QUAD_RESERVED1_MASK 0xff000000
#define  PRNUDSNU_CORR_QUAD_RESERVED1_SHIFT 24
#define  PRNUDSNU_CORR_QUAD_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_QUAD_RESERVED1_MASK) >> PRNUDSNU_CORR_QUAD_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_QUAD_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_QUAD_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_QUAD_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_QUAD_SF2_MASK 0xff0000
#define  PRNUDSNU_CORR_QUAD_SF2_SHIFT 16
#define  PRNUDSNU_CORR_QUAD_SF2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_QUAD_SF2_MASK) >> PRNUDSNU_CORR_QUAD_SF2_SHIFT)
#define  PRNUDSNU_CORR_QUAD_SF2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_QUAD_SF2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_QUAD_SF2_SHIFT))

#define  PRNUDSNU_CORR_QUAD_SF1_MASK 0xff00
#define  PRNUDSNU_CORR_QUAD_SF1_SHIFT 8
#define  PRNUDSNU_CORR_QUAD_SF1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_QUAD_SF1_MASK) >> PRNUDSNU_CORR_QUAD_SF1_SHIFT)
#define  PRNUDSNU_CORR_QUAD_SF1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_QUAD_SF1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_QUAD_SF1_SHIFT))

#define  PRNUDSNU_CORR_QUAD_RESERVED2_MASK 0xf8
#define  PRNUDSNU_CORR_QUAD_RESERVED2_SHIFT 3
#define  PRNUDSNU_CORR_QUAD_RESERVED2_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_QUAD_RESERVED2_MASK) >> PRNUDSNU_CORR_QUAD_RESERVED2_SHIFT)
#define  PRNUDSNU_CORR_QUAD_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_QUAD_RESERVED2_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_QUAD_RESERVED2_SHIFT))

#define  PRNUDSNU_CORR_QUAD_Q_SHIFT_MASK 0x7
#define  PRNUDSNU_CORR_QUAD_Q_SHIFT_SHIFT 0
#define  PRNUDSNU_CORR_QUAD_Q_SHIFT_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_QUAD_Q_SHIFT_MASK) >> PRNUDSNU_CORR_QUAD_Q_SHIFT_SHIFT)
#define  PRNUDSNU_CORR_QUAD_Q_SHIFT_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_QUAD_Q_SHIFT_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_QUAD_Q_SHIFT_SHIFT))

//====================================================================
//Register: DSNU Offset Register (DOFF)
//====================================================================

#define  PRNUDSNU_CORR_DOFF_RESERVED1_MASK 0xffffc000
#define  PRNUDSNU_CORR_DOFF_RESERVED1_SHIFT 14
#define  PRNUDSNU_CORR_DOFF_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_DOFF_RESERVED1_MASK) >> PRNUDSNU_CORR_DOFF_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_DOFF_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_DOFF_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_DOFF_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_DOFF_OFFSET_MASK 0x3fff
#define  PRNUDSNU_CORR_DOFF_OFFSET_SHIFT 0
#define  PRNUDSNU_CORR_DOFF_OFFSET_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_DOFF_OFFSET_MASK) >> PRNUDSNU_CORR_DOFF_OFFSET_SHIFT)
#define  PRNUDSNU_CORR_DOFF_OFFSET_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_DOFF_OFFSET_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_DOFF_OFFSET_SHIFT))

//====================================================================
//Register: DSNU Mult/Scale Register (DMULT)
//====================================================================

#define  PRNUDSNU_CORR_DMULT_RESERVED1_MASK 0xfff00000
#define  PRNUDSNU_CORR_DMULT_RESERVED1_SHIFT 20
#define  PRNUDSNU_CORR_DMULT_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_DMULT_RESERVED1_MASK) >> PRNUDSNU_CORR_DMULT_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_DMULT_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_DMULT_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_DMULT_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_DMULT_SCALE_MASK 0xf0000
#define  PRNUDSNU_CORR_DMULT_SCALE_SHIFT 16
#define  PRNUDSNU_CORR_DMULT_SCALE_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_DMULT_SCALE_MASK) >> PRNUDSNU_CORR_DMULT_SCALE_SHIFT)
#define  PRNUDSNU_CORR_DMULT_SCALE_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_DMULT_SCALE_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_DMULT_SCALE_SHIFT))

#define  PRNUDSNU_CORR_DMULT_MULT_MASK 0xffff
#define  PRNUDSNU_CORR_DMULT_MULT_SHIFT 0
#define  PRNUDSNU_CORR_DMULT_MULT_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_DMULT_MULT_MASK) >> PRNUDSNU_CORR_DMULT_MULT_SHIFT)
#define  PRNUDSNU_CORR_DMULT_MULT_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_DMULT_MULT_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_DMULT_MULT_SHIFT))

//====================================================================
//Register: PSNU Offset Register (POFF)
//====================================================================

#define  PRNUDSNU_CORR_POFF_RESERVED1_MASK 0xffff0000
#define  PRNUDSNU_CORR_POFF_RESERVED1_SHIFT 16
#define  PRNUDSNU_CORR_POFF_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_POFF_RESERVED1_MASK) >> PRNUDSNU_CORR_POFF_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_POFF_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_POFF_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_POFF_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_POFF_OFFSET_MASK 0xffff
#define  PRNUDSNU_CORR_POFF_OFFSET_SHIFT 0
#define  PRNUDSNU_CORR_POFF_OFFSET_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_POFF_OFFSET_MASK) >> PRNUDSNU_CORR_POFF_OFFSET_SHIFT)
#define  PRNUDSNU_CORR_POFF_OFFSET_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_POFF_OFFSET_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_POFF_OFFSET_SHIFT))

//====================================================================
//Register: PRNU Mult/Scale Register (PMULT)
//====================================================================

#define  PRNUDSNU_CORR_PMULT_RESERVED1_MASK 0xfff00000
#define  PRNUDSNU_CORR_PMULT_RESERVED1_SHIFT 20
#define  PRNUDSNU_CORR_PMULT_RESERVED1_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PMULT_RESERVED1_MASK) >> PRNUDSNU_CORR_PMULT_RESERVED1_SHIFT)
#define  PRNUDSNU_CORR_PMULT_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PMULT_RESERVED1_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PMULT_RESERVED1_SHIFT))

#define  PRNUDSNU_CORR_PMULT_SCALE_MASK 0xf0000
#define  PRNUDSNU_CORR_PMULT_SCALE_SHIFT 16
#define  PRNUDSNU_CORR_PMULT_SCALE_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PMULT_SCALE_MASK) >> PRNUDSNU_CORR_PMULT_SCALE_SHIFT)
#define  PRNUDSNU_CORR_PMULT_SCALE_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PMULT_SCALE_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PMULT_SCALE_SHIFT))

#define  PRNUDSNU_CORR_PMULT_MULT_MASK 0xffff
#define  PRNUDSNU_CORR_PMULT_MULT_SHIFT 0
#define  PRNUDSNU_CORR_PMULT_MULT_MASK_SHIFT(reg) (((reg) & PRNUDSNU_CORR_PMULT_MULT_MASK) >> PRNUDSNU_CORR_PMULT_MULT_SHIFT)
#define  PRNUDSNU_CORR_PMULT_MULT_REPLACE_VAL(reg,val) (((reg) & ~PRNUDSNU_CORR_PMULT_MULT_MASK) | (((uint32_t)val) << PRNUDSNU_CORR_PMULT_MULT_SHIFT))

#endif // PRNUDSNU_CORR
