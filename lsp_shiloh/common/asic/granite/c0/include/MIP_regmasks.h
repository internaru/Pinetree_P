 /*
 **************************************************************************************
 *
 * Copyright (c) 2010 Marvell International, Ltd.
 *
 **************************************************************************************
 *
 * Marvell Commercial License Option
 *
 * If you received this File from Marvell as part of a proprietary software release,
 * the File is considered Marvell Proprietary and Confidential Information, and is
 * licensed to you under the terms of the applicable Commercial License.
 *
 **************************************************************************************
 *
 * Marvell GPL License Option
 *
 * If you received this File from Marvell as part of a Linux distribution, this File
 * is licensed to you in accordance with the terms and conditions of the General Public
 * License Version 2, June 1991 (the "GPL License").  You can redistribute it and/or
 * modify it under the terms of the GPL License; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GPL License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this
 * program.  If not, see http://www.gnu.org/licenses/.
 *
 **************************************************************************************
 *
 * \file MIP_regmasks.h
 * Generated using RegBuild 1.6.1
 *
 *************************************************************************
 */

#ifndef _MIP_REGSET_REGMASKS_H_
#define _MIP_REGSET_REGMASKS_H_

#include <stdint.h>

//====================================================================
//
//Register File: Mono Image Processing (MIP) (MIP_RegSet)
/** \brief Top-level register file for MIP Block*/
//
//====================================================================

//====================================================================
//Register: MIP Configuration Register (MCR)
/** \brief This register configures the MIP block for a specific operation.*/
//====================================================================

#define  MIP_REGSET_MCR_TONERRESOLUTION_MASK 0xc0000000
#define  MIP_REGSET_MCR_TONERRESOLUTION_SHIFT 30
#define  MIP_REGSET_MCR_TONERRESOLUTION_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_TONERRESOLUTION_MASK) >> MIP_REGSET_MCR_TONERRESOLUTION_SHIFT)
#define  MIP_REGSET_MCR_TONERRESOLUTION_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_TONERRESOLUTION_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_TONERRESOLUTION_SHIFT))

#define  MIP_REGSET_MCR_ADDCOLRIGHT_MASK 0x38000000
#define  MIP_REGSET_MCR_ADDCOLRIGHT_SHIFT 27
#define  MIP_REGSET_MCR_ADDCOLRIGHT_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_ADDCOLRIGHT_MASK) >> MIP_REGSET_MCR_ADDCOLRIGHT_SHIFT)
#define  MIP_REGSET_MCR_ADDCOLRIGHT_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_ADDCOLRIGHT_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_ADDCOLRIGHT_SHIFT))

#define  MIP_REGSET_MCR_ADDCOLLEFT_MASK 0x6000000
#define  MIP_REGSET_MCR_ADDCOLLEFT_SHIFT 25
#define  MIP_REGSET_MCR_ADDCOLLEFT_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_ADDCOLLEFT_MASK) >> MIP_REGSET_MCR_ADDCOLLEFT_SHIFT)
#define  MIP_REGSET_MCR_ADDCOLLEFT_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_ADDCOLLEFT_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_ADDCOLLEFT_SHIFT))

#define  MIP_REGSET_MCR_ADDOUTLINESBOTTOM_MASK 0x1c00000
#define  MIP_REGSET_MCR_ADDOUTLINESBOTTOM_SHIFT 22
#define  MIP_REGSET_MCR_ADDOUTLINESBOTTOM_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_ADDOUTLINESBOTTOM_MASK) >> MIP_REGSET_MCR_ADDOUTLINESBOTTOM_SHIFT)
#define  MIP_REGSET_MCR_ADDOUTLINESBOTTOM_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_ADDOUTLINESBOTTOM_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_ADDOUTLINESBOTTOM_SHIFT))

#define  MIP_REGSET_MCR_ADDOUTLINESTOP_MASK 0x300000
#define  MIP_REGSET_MCR_ADDOUTLINESTOP_SHIFT 20
#define  MIP_REGSET_MCR_ADDOUTLINESTOP_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_ADDOUTLINESTOP_MASK) >> MIP_REGSET_MCR_ADDOUTLINESTOP_SHIFT)
#define  MIP_REGSET_MCR_ADDOUTLINESTOP_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_ADDOUTLINESTOP_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_ADDOUTLINESTOP_SHIFT))

#define  MIP_REGSET_MCR_TONERMODE_MASK 0xc0000
#define  MIP_REGSET_MCR_TONERMODE_SHIFT 18
#define  MIP_REGSET_MCR_TONERMODE_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_TONERMODE_MASK) >> MIP_REGSET_MCR_TONERMODE_SHIFT)
#define  MIP_REGSET_MCR_TONERMODE_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_TONERMODE_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_TONERMODE_SHIFT))

#define  MIP_REGSET_MCR_BUFFERLIMIT_MASK 0x38000
#define  MIP_REGSET_MCR_BUFFERLIMIT_SHIFT 15
#define  MIP_REGSET_MCR_BUFFERLIMIT_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_BUFFERLIMIT_MASK) >> MIP_REGSET_MCR_BUFFERLIMIT_SHIFT)
#define  MIP_REGSET_MCR_BUFFERLIMIT_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_BUFFERLIMIT_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_BUFFERLIMIT_SHIFT))

#define  MIP_REGSET_MCR_MODE_MASK 0x7000
#define  MIP_REGSET_MCR_MODE_SHIFT 12
#define  MIP_REGSET_MCR_MODE_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_MODE_MASK) >> MIP_REGSET_MCR_MODE_SHIFT)
#define  MIP_REGSET_MCR_MODE_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_MODE_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_MODE_SHIFT))

#define  MIP_REGSET_MCR_WINDOWSIZE_MASK 0xc00
#define  MIP_REGSET_MCR_WINDOWSIZE_SHIFT 10
#define  MIP_REGSET_MCR_WINDOWSIZE_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_WINDOWSIZE_MASK) >> MIP_REGSET_MCR_WINDOWSIZE_SHIFT)
#define  MIP_REGSET_MCR_WINDOWSIZE_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_WINDOWSIZE_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_WINDOWSIZE_SHIFT))

#define  MIP_REGSET_MCR_OUTDEPTH_MASK 0x300
#define  MIP_REGSET_MCR_OUTDEPTH_SHIFT 8
#define  MIP_REGSET_MCR_OUTDEPTH_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_OUTDEPTH_MASK) >> MIP_REGSET_MCR_OUTDEPTH_SHIFT)
#define  MIP_REGSET_MCR_OUTDEPTH_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_OUTDEPTH_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_OUTDEPTH_SHIFT))

#define  MIP_REGSET_MCR_INWIDTH_MASK 0xc0
#define  MIP_REGSET_MCR_INWIDTH_SHIFT 6
#define  MIP_REGSET_MCR_INWIDTH_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_INWIDTH_MASK) >> MIP_REGSET_MCR_INWIDTH_SHIFT)
#define  MIP_REGSET_MCR_INWIDTH_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_INWIDTH_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_INWIDTH_SHIFT))

#define  MIP_REGSET_MCR_INDEPTH_MASK 0x30
#define  MIP_REGSET_MCR_INDEPTH_SHIFT 4
#define  MIP_REGSET_MCR_INDEPTH_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_INDEPTH_MASK) >> MIP_REGSET_MCR_INDEPTH_SHIFT)
#define  MIP_REGSET_MCR_INDEPTH_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_INDEPTH_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_INDEPTH_SHIFT))

#define  MIP_REGSET_MCR_RESERVED1_MASK 0xc
#define  MIP_REGSET_MCR_RESERVED1_SHIFT 2
#define  MIP_REGSET_MCR_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_RESERVED1_MASK) >> MIP_REGSET_MCR_RESERVED1_SHIFT)
#define  MIP_REGSET_MCR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_RESERVED1_SHIFT))

#define  MIP_REGSET_MCR_CPUACCESS_MASK 0x2
#define  MIP_REGSET_MCR_CPUACCESS_SHIFT 1
#define  MIP_REGSET_MCR_CPUACCESS_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_CPUACCESS_MASK) >> MIP_REGSET_MCR_CPUACCESS_SHIFT)
#define  MIP_REGSET_MCR_CPUACCESS_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_CPUACCESS_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_CPUACCESS_SHIFT))

#define  MIP_REGSET_MCR_BYPASS_MASK 0x1
#define  MIP_REGSET_MCR_BYPASS_SHIFT 0
#define  MIP_REGSET_MCR_BYPASS_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MCR_BYPASS_MASK) >> MIP_REGSET_MCR_BYPASS_SHIFT)
#define  MIP_REGSET_MCR_BYPASS_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MCR_BYPASS_MASK) | (((uint32_t)val) << MIP_REGSET_MCR_BYPASS_SHIFT))

//====================================================================
//Register: MIP Horizontal Move Register (MHMR)
/** \brief This register configures the horizontal movement pattern of the window.*/
//====================================================================

#define  MIP_REGSET_MHMR_RESERVED1_MASK 0xfff80000
#define  MIP_REGSET_MHMR_RESERVED1_SHIFT 19
#define  MIP_REGSET_MHMR_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_RESERVED1_MASK) >> MIP_REGSET_MHMR_RESERVED1_SHIFT)
#define  MIP_REGSET_MHMR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_RESERVED1_SHIFT))

#define  MIP_REGSET_MHMR_HMOVELAST_MASK 0x70000
#define  MIP_REGSET_MHMR_HMOVELAST_SHIFT 16
#define  MIP_REGSET_MHMR_HMOVELAST_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVELAST_MASK) >> MIP_REGSET_MHMR_HMOVELAST_SHIFT)
#define  MIP_REGSET_MHMR_HMOVELAST_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVELAST_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVELAST_SHIFT))

#define  MIP_REGSET_MHMR_HMOVE7_MASK 0xc000
#define  MIP_REGSET_MHMR_HMOVE7_SHIFT 14
#define  MIP_REGSET_MHMR_HMOVE7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVE7_MASK) >> MIP_REGSET_MHMR_HMOVE7_SHIFT)
#define  MIP_REGSET_MHMR_HMOVE7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVE7_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVE7_SHIFT))

#define  MIP_REGSET_MHMR_HMOVE6_MASK 0x3000
#define  MIP_REGSET_MHMR_HMOVE6_SHIFT 12
#define  MIP_REGSET_MHMR_HMOVE6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVE6_MASK) >> MIP_REGSET_MHMR_HMOVE6_SHIFT)
#define  MIP_REGSET_MHMR_HMOVE6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVE6_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVE6_SHIFT))

#define  MIP_REGSET_MHMR_HMOVE5_MASK 0xc00
#define  MIP_REGSET_MHMR_HMOVE5_SHIFT 10
#define  MIP_REGSET_MHMR_HMOVE5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVE5_MASK) >> MIP_REGSET_MHMR_HMOVE5_SHIFT)
#define  MIP_REGSET_MHMR_HMOVE5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVE5_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVE5_SHIFT))

#define  MIP_REGSET_MHMR_HMOVE4_MASK 0x300
#define  MIP_REGSET_MHMR_HMOVE4_SHIFT 8
#define  MIP_REGSET_MHMR_HMOVE4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVE4_MASK) >> MIP_REGSET_MHMR_HMOVE4_SHIFT)
#define  MIP_REGSET_MHMR_HMOVE4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVE4_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVE4_SHIFT))

#define  MIP_REGSET_MHMR_HMOVE3_MASK 0xc0
#define  MIP_REGSET_MHMR_HMOVE3_SHIFT 6
#define  MIP_REGSET_MHMR_HMOVE3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVE3_MASK) >> MIP_REGSET_MHMR_HMOVE3_SHIFT)
#define  MIP_REGSET_MHMR_HMOVE3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVE3_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVE3_SHIFT))

#define  MIP_REGSET_MHMR_HMOVE2_MASK 0x30
#define  MIP_REGSET_MHMR_HMOVE2_SHIFT 4
#define  MIP_REGSET_MHMR_HMOVE2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVE2_MASK) >> MIP_REGSET_MHMR_HMOVE2_SHIFT)
#define  MIP_REGSET_MHMR_HMOVE2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVE2_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVE2_SHIFT))

#define  MIP_REGSET_MHMR_HMOVE1_MASK 0xc
#define  MIP_REGSET_MHMR_HMOVE1_SHIFT 2
#define  MIP_REGSET_MHMR_HMOVE1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVE1_MASK) >> MIP_REGSET_MHMR_HMOVE1_SHIFT)
#define  MIP_REGSET_MHMR_HMOVE1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVE1_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVE1_SHIFT))

#define  MIP_REGSET_MHMR_HMOVE0_MASK 0x3
#define  MIP_REGSET_MHMR_HMOVE0_SHIFT 0
#define  MIP_REGSET_MHMR_HMOVE0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHMR_HMOVE0_MASK) >> MIP_REGSET_MHMR_HMOVE0_SHIFT)
#define  MIP_REGSET_MHMR_HMOVE0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHMR_HMOVE0_MASK) | (((uint32_t)val) << MIP_REGSET_MHMR_HMOVE0_SHIFT))

//====================================================================
//Register: MIP Vertical Move Register (MVMR)
/** \brief This register configures the vertical movement pattern of the window.*/
//====================================================================

#define  MIP_REGSET_MVMR_RESERVED1_MASK 0xfff80000
#define  MIP_REGSET_MVMR_RESERVED1_SHIFT 19
#define  MIP_REGSET_MVMR_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_RESERVED1_MASK) >> MIP_REGSET_MVMR_RESERVED1_SHIFT)
#define  MIP_REGSET_MVMR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_RESERVED1_SHIFT))

#define  MIP_REGSET_MVMR_VMOVELAST_MASK 0x70000
#define  MIP_REGSET_MVMR_VMOVELAST_SHIFT 16
#define  MIP_REGSET_MVMR_VMOVELAST_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVELAST_MASK) >> MIP_REGSET_MVMR_VMOVELAST_SHIFT)
#define  MIP_REGSET_MVMR_VMOVELAST_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVELAST_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVELAST_SHIFT))

#define  MIP_REGSET_MVMR_VMOVE7_MASK 0xc000
#define  MIP_REGSET_MVMR_VMOVE7_SHIFT 14
#define  MIP_REGSET_MVMR_VMOVE7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVE7_MASK) >> MIP_REGSET_MVMR_VMOVE7_SHIFT)
#define  MIP_REGSET_MVMR_VMOVE7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVE7_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVE7_SHIFT))

#define  MIP_REGSET_MVMR_VMOVE6_MASK 0x3000
#define  MIP_REGSET_MVMR_VMOVE6_SHIFT 12
#define  MIP_REGSET_MVMR_VMOVE6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVE6_MASK) >> MIP_REGSET_MVMR_VMOVE6_SHIFT)
#define  MIP_REGSET_MVMR_VMOVE6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVE6_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVE6_SHIFT))

#define  MIP_REGSET_MVMR_VMOVE5_MASK 0xc00
#define  MIP_REGSET_MVMR_VMOVE5_SHIFT 10
#define  MIP_REGSET_MVMR_VMOVE5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVE5_MASK) >> MIP_REGSET_MVMR_VMOVE5_SHIFT)
#define  MIP_REGSET_MVMR_VMOVE5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVE5_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVE5_SHIFT))

#define  MIP_REGSET_MVMR_VMOVE4_MASK 0x300
#define  MIP_REGSET_MVMR_VMOVE4_SHIFT 8
#define  MIP_REGSET_MVMR_VMOVE4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVE4_MASK) >> MIP_REGSET_MVMR_VMOVE4_SHIFT)
#define  MIP_REGSET_MVMR_VMOVE4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVE4_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVE4_SHIFT))

#define  MIP_REGSET_MVMR_VMOVE3_MASK 0xc0
#define  MIP_REGSET_MVMR_VMOVE3_SHIFT 6
#define  MIP_REGSET_MVMR_VMOVE3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVE3_MASK) >> MIP_REGSET_MVMR_VMOVE3_SHIFT)
#define  MIP_REGSET_MVMR_VMOVE3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVE3_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVE3_SHIFT))

#define  MIP_REGSET_MVMR_VMOVE2_MASK 0x30
#define  MIP_REGSET_MVMR_VMOVE2_SHIFT 4
#define  MIP_REGSET_MVMR_VMOVE2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVE2_MASK) >> MIP_REGSET_MVMR_VMOVE2_SHIFT)
#define  MIP_REGSET_MVMR_VMOVE2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVE2_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVE2_SHIFT))

#define  MIP_REGSET_MVMR_VMOVE1_MASK 0xc
#define  MIP_REGSET_MVMR_VMOVE1_SHIFT 2
#define  MIP_REGSET_MVMR_VMOVE1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVE1_MASK) >> MIP_REGSET_MVMR_VMOVE1_SHIFT)
#define  MIP_REGSET_MVMR_VMOVE1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVE1_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVE1_SHIFT))

#define  MIP_REGSET_MVMR_VMOVE0_MASK 0x3
#define  MIP_REGSET_MVMR_VMOVE0_SHIFT 0
#define  MIP_REGSET_MVMR_VMOVE0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVMR_VMOVE0_MASK) >> MIP_REGSET_MVMR_VMOVE0_SHIFT)
#define  MIP_REGSET_MVMR_VMOVE0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVMR_VMOVE0_MASK) | (((uint32_t)val) << MIP_REGSET_MVMR_VMOVE0_SHIFT))

//====================================================================
//Register: MIP Horizontal Count Register (MHCR)
/** \brief This register configures the horizontal galvo counter values.*/
//====================================================================

#define  MIP_REGSET_MHCR_HCOUNTSTEP_MASK 0xffff0000
#define  MIP_REGSET_MHCR_HCOUNTSTEP_SHIFT 16
#define  MIP_REGSET_MHCR_HCOUNTSTEP_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHCR_HCOUNTSTEP_MASK) >> MIP_REGSET_MHCR_HCOUNTSTEP_SHIFT)
#define  MIP_REGSET_MHCR_HCOUNTSTEP_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHCR_HCOUNTSTEP_MASK) | (((uint32_t)val) << MIP_REGSET_MHCR_HCOUNTSTEP_SHIFT))

#define  MIP_REGSET_MHCR_HCOUNTOFFSET_MASK 0xffff
#define  MIP_REGSET_MHCR_HCOUNTOFFSET_SHIFT 0
#define  MIP_REGSET_MHCR_HCOUNTOFFSET_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MHCR_HCOUNTOFFSET_MASK) >> MIP_REGSET_MHCR_HCOUNTOFFSET_SHIFT)
#define  MIP_REGSET_MHCR_HCOUNTOFFSET_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MHCR_HCOUNTOFFSET_MASK) | (((uint32_t)val) << MIP_REGSET_MHCR_HCOUNTOFFSET_SHIFT))

//====================================================================
//Register: MIP Vertical Count Register (MVCR)
/** \brief This register configures the vertical galvo counter values.*/
//====================================================================

#define  MIP_REGSET_MVCR_RESERVED1_MASK 0xfc000000
#define  MIP_REGSET_MVCR_RESERVED1_SHIFT 26
#define  MIP_REGSET_MVCR_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVCR_RESERVED1_MASK) >> MIP_REGSET_MVCR_RESERVED1_SHIFT)
#define  MIP_REGSET_MVCR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVCR_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MVCR_RESERVED1_SHIFT))

#define  MIP_REGSET_MVCR_VCOUNTSTEP_MASK 0x3ff0000
#define  MIP_REGSET_MVCR_VCOUNTSTEP_SHIFT 16
#define  MIP_REGSET_MVCR_VCOUNTSTEP_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVCR_VCOUNTSTEP_MASK) >> MIP_REGSET_MVCR_VCOUNTSTEP_SHIFT)
#define  MIP_REGSET_MVCR_VCOUNTSTEP_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVCR_VCOUNTSTEP_MASK) | (((uint32_t)val) << MIP_REGSET_MVCR_VCOUNTSTEP_SHIFT))

#define  MIP_REGSET_MVCR_RESERVED2_MASK 0xfc00
#define  MIP_REGSET_MVCR_RESERVED2_SHIFT 10
#define  MIP_REGSET_MVCR_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVCR_RESERVED2_MASK) >> MIP_REGSET_MVCR_RESERVED2_SHIFT)
#define  MIP_REGSET_MVCR_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVCR_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MVCR_RESERVED2_SHIFT))

#define  MIP_REGSET_MVCR_VCOUNTOFFSET_MASK 0x3ff
#define  MIP_REGSET_MVCR_VCOUNTOFFSET_SHIFT 0
#define  MIP_REGSET_MVCR_VCOUNTOFFSET_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MVCR_VCOUNTOFFSET_MASK) >> MIP_REGSET_MVCR_VCOUNTOFFSET_SHIFT)
#define  MIP_REGSET_MVCR_VCOUNTOFFSET_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MVCR_VCOUNTOFFSET_MASK) | (((uint32_t)val) << MIP_REGSET_MVCR_VCOUNTOFFSET_SHIFT))

//====================================================================
//Register: MIP Window Stability Register (MWSR)
/** \brief This register configures the stability criteria for a window.*/
//====================================================================

#define  MIP_REGSET_MWSR_VSTABLECOLS_MASK 0xff000000
#define  MIP_REGSET_MWSR_VSTABLECOLS_SHIFT 24
#define  MIP_REGSET_MWSR_VSTABLECOLS_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_VSTABLECOLS_MASK) >> MIP_REGSET_MWSR_VSTABLECOLS_SHIFT)
#define  MIP_REGSET_MWSR_VSTABLECOLS_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_VSTABLECOLS_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_VSTABLECOLS_SHIFT))

#define  MIP_REGSET_MWSR_RESERVED1_MASK 0xc00000
#define  MIP_REGSET_MWSR_RESERVED1_SHIFT 22
#define  MIP_REGSET_MWSR_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_RESERVED1_MASK) >> MIP_REGSET_MWSR_RESERVED1_SHIFT)
#define  MIP_REGSET_MWSR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_RESERVED1_SHIFT))

#define  MIP_REGSET_MWSR_VSTABLEDEPTH_MASK 0x300000
#define  MIP_REGSET_MWSR_VSTABLEDEPTH_SHIFT 20
#define  MIP_REGSET_MWSR_VSTABLEDEPTH_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_VSTABLEDEPTH_MASK) >> MIP_REGSET_MWSR_VSTABLEDEPTH_SHIFT)
#define  MIP_REGSET_MWSR_VSTABLEDEPTH_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_VSTABLEDEPTH_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_VSTABLEDEPTH_SHIFT))

#define  MIP_REGSET_MWSR_RESERVED2_MASK 0x80000
#define  MIP_REGSET_MWSR_RESERVED2_SHIFT 19
#define  MIP_REGSET_MWSR_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_RESERVED2_MASK) >> MIP_REGSET_MWSR_RESERVED2_SHIFT)
#define  MIP_REGSET_MWSR_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_RESERVED2_SHIFT))

#define  MIP_REGSET_MWSR_VSTABLESIZE_MASK 0x70000
#define  MIP_REGSET_MWSR_VSTABLESIZE_SHIFT 16
#define  MIP_REGSET_MWSR_VSTABLESIZE_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_VSTABLESIZE_MASK) >> MIP_REGSET_MWSR_VSTABLESIZE_SHIFT)
#define  MIP_REGSET_MWSR_VSTABLESIZE_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_VSTABLESIZE_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_VSTABLESIZE_SHIFT))

#define  MIP_REGSET_MWSR_HSTABLEROWS_MASK 0xff00
#define  MIP_REGSET_MWSR_HSTABLEROWS_SHIFT 8
#define  MIP_REGSET_MWSR_HSTABLEROWS_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_HSTABLEROWS_MASK) >> MIP_REGSET_MWSR_HSTABLEROWS_SHIFT)
#define  MIP_REGSET_MWSR_HSTABLEROWS_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_HSTABLEROWS_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_HSTABLEROWS_SHIFT))

#define  MIP_REGSET_MWSR_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MWSR_RESERVED3_SHIFT 6
#define  MIP_REGSET_MWSR_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_RESERVED3_MASK) >> MIP_REGSET_MWSR_RESERVED3_SHIFT)
#define  MIP_REGSET_MWSR_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_RESERVED3_SHIFT))

#define  MIP_REGSET_MWSR_HSTABLEDEPTH_MASK 0x30
#define  MIP_REGSET_MWSR_HSTABLEDEPTH_SHIFT 4
#define  MIP_REGSET_MWSR_HSTABLEDEPTH_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_HSTABLEDEPTH_MASK) >> MIP_REGSET_MWSR_HSTABLEDEPTH_SHIFT)
#define  MIP_REGSET_MWSR_HSTABLEDEPTH_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_HSTABLEDEPTH_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_HSTABLEDEPTH_SHIFT))

#define  MIP_REGSET_MWSR_RESERVED4_MASK 0x8
#define  MIP_REGSET_MWSR_RESERVED4_SHIFT 3
#define  MIP_REGSET_MWSR_RESERVED4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_RESERVED4_MASK) >> MIP_REGSET_MWSR_RESERVED4_SHIFT)
#define  MIP_REGSET_MWSR_RESERVED4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_RESERVED4_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_RESERVED4_SHIFT))

#define  MIP_REGSET_MWSR_HSTABLESIZE_MASK 0x7
#define  MIP_REGSET_MWSR_HSTABLESIZE_SHIFT 0
#define  MIP_REGSET_MWSR_HSTABLESIZE_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MWSR_HSTABLESIZE_MASK) >> MIP_REGSET_MWSR_HSTABLESIZE_SHIFT)
#define  MIP_REGSET_MWSR_HSTABLESIZE_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MWSR_HSTABLESIZE_MASK) | (((uint32_t)val) << MIP_REGSET_MWSR_HSTABLESIZE_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 1 of 19) (MMR0)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 1 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR0_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR0_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR0_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR0_RESERVED1_MASK) >> MIP_REGSET_MMR0_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR0_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR0_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR0_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR0_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR0_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR0_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR0_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR0_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR0_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR0_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR0_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR0_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR0_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR0_RESERVED2_MASK) >> MIP_REGSET_MMR0_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR0_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR0_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR0_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR0_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR0_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR0_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR0_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR0_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR0_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR0_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR0_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR0_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR0_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR0_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR0_RESERVED3_MASK) >> MIP_REGSET_MMR0_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR0_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR0_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR0_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR0_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR0_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR0_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR0_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR0_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR0_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR0_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR0_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 2 of 19) (MMR1)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 2 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR1_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR1_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR1_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR1_RESERVED1_MASK) >> MIP_REGSET_MMR1_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR1_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR1_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR1_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR1_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR1_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR1_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR1_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR1_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR1_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR1_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR1_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR1_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR1_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR1_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR1_RESERVED2_MASK) >> MIP_REGSET_MMR1_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR1_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR1_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR1_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR1_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR1_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR1_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR1_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR1_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR1_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR1_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR1_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR1_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR1_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR1_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR1_RESERVED3_MASK) >> MIP_REGSET_MMR1_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR1_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR1_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR1_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR1_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR1_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR1_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR1_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR1_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR1_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR1_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR1_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 3 of 19) (MMR2)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 3 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR2_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR2_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR2_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR2_RESERVED1_MASK) >> MIP_REGSET_MMR2_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR2_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR2_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR2_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR2_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR2_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR2_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR2_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR2_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR2_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR2_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR2_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR2_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR2_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR2_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR2_RESERVED2_MASK) >> MIP_REGSET_MMR2_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR2_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR2_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR2_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR2_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR2_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR2_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR2_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR2_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR2_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR2_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR2_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR2_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR2_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR2_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR2_RESERVED3_MASK) >> MIP_REGSET_MMR2_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR2_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR2_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR2_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR2_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR2_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR2_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR2_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR2_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR2_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR2_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR2_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 4 of 19) (MMR3)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 4 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR3_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR3_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR3_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR3_RESERVED1_MASK) >> MIP_REGSET_MMR3_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR3_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR3_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR3_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR3_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR3_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR3_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR3_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR3_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR3_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR3_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR3_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR3_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR3_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR3_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR3_RESERVED2_MASK) >> MIP_REGSET_MMR3_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR3_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR3_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR3_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR3_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR3_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR3_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR3_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR3_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR3_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR3_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR3_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR3_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR3_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR3_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR3_RESERVED3_MASK) >> MIP_REGSET_MMR3_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR3_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR3_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR3_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR3_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR3_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR3_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR3_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR3_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR3_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR3_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR3_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 5 of 19) (MMR4)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 5 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR4_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR4_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR4_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR4_RESERVED1_MASK) >> MIP_REGSET_MMR4_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR4_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR4_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR4_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR4_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR4_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR4_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR4_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR4_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR4_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR4_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR4_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR4_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR4_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR4_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR4_RESERVED2_MASK) >> MIP_REGSET_MMR4_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR4_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR4_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR4_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR4_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR4_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR4_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR4_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR4_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR4_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR4_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR4_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR4_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR4_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR4_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR4_RESERVED3_MASK) >> MIP_REGSET_MMR4_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR4_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR4_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR4_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR4_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR4_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR4_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR4_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR4_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR4_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR4_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR4_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 6 of 19) (MMR5)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 6 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR5_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR5_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR5_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR5_RESERVED1_MASK) >> MIP_REGSET_MMR5_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR5_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR5_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR5_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR5_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR5_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR5_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR5_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR5_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR5_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR5_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR5_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR5_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR5_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR5_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR5_RESERVED2_MASK) >> MIP_REGSET_MMR5_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR5_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR5_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR5_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR5_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR5_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR5_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR5_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR5_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR5_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR5_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR5_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR5_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR5_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR5_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR5_RESERVED3_MASK) >> MIP_REGSET_MMR5_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR5_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR5_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR5_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR5_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR5_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR5_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR5_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR5_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR5_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR5_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR5_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 7 of 19) (MMR6)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 7 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR6_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR6_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR6_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR6_RESERVED1_MASK) >> MIP_REGSET_MMR6_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR6_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR6_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR6_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR6_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR6_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR6_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR6_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR6_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR6_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR6_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR6_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR6_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR6_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR6_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR6_RESERVED2_MASK) >> MIP_REGSET_MMR6_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR6_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR6_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR6_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR6_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR6_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR6_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR6_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR6_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR6_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR6_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR6_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR6_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR6_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR6_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR6_RESERVED3_MASK) >> MIP_REGSET_MMR6_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR6_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR6_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR6_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR6_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR6_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR6_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR6_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR6_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR6_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR6_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR6_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 8 of 19) (MMR7)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 8 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR7_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR7_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR7_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR7_RESERVED1_MASK) >> MIP_REGSET_MMR7_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR7_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR7_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR7_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR7_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR7_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR7_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR7_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR7_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR7_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR7_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR7_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR7_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR7_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR7_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR7_RESERVED2_MASK) >> MIP_REGSET_MMR7_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR7_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR7_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR7_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR7_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR7_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR7_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR7_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR7_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR7_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR7_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR7_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR7_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR7_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR7_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR7_RESERVED3_MASK) >> MIP_REGSET_MMR7_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR7_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR7_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR7_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR7_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR7_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR7_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR7_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR7_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR7_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR7_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR7_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 9 of 19) (MMR8)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 9 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR8_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR8_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR8_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR8_RESERVED1_MASK) >> MIP_REGSET_MMR8_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR8_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR8_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR8_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR8_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR8_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR8_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR8_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR8_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR8_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR8_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR8_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR8_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR8_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR8_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR8_RESERVED2_MASK) >> MIP_REGSET_MMR8_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR8_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR8_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR8_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR8_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR8_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR8_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR8_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR8_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR8_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR8_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR8_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR8_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR8_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR8_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR8_RESERVED3_MASK) >> MIP_REGSET_MMR8_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR8_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR8_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR8_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR8_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR8_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR8_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR8_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR8_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR8_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR8_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR8_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 10 of 19) (MMR9)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 10 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR9_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR9_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR9_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR9_RESERVED1_MASK) >> MIP_REGSET_MMR9_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR9_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR9_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR9_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR9_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR9_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR9_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR9_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR9_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR9_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR9_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR9_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR9_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR9_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR9_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR9_RESERVED2_MASK) >> MIP_REGSET_MMR9_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR9_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR9_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR9_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR9_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR9_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR9_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR9_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR9_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR9_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR9_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR9_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR9_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR9_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR9_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR9_RESERVED3_MASK) >> MIP_REGSET_MMR9_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR9_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR9_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR9_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR9_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR9_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR9_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR9_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR9_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR9_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR9_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR9_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 11 of 19) (MMR10)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 11 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR10_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR10_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR10_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR10_RESERVED1_MASK) >> MIP_REGSET_MMR10_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR10_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR10_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR10_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR10_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR10_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR10_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR10_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR10_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR10_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR10_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR10_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR10_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR10_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR10_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR10_RESERVED2_MASK) >> MIP_REGSET_MMR10_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR10_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR10_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR10_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR10_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR10_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR10_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR10_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR10_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR10_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR10_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR10_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR10_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR10_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR10_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR10_RESERVED3_MASK) >> MIP_REGSET_MMR10_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR10_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR10_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR10_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR10_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR10_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR10_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR10_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR10_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR10_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR10_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR10_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 12 of 19) (MMR11)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 12 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR11_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR11_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR11_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR11_RESERVED1_MASK) >> MIP_REGSET_MMR11_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR11_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR11_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR11_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR11_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR11_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR11_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR11_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR11_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR11_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR11_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR11_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR11_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR11_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR11_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR11_RESERVED2_MASK) >> MIP_REGSET_MMR11_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR11_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR11_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR11_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR11_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR11_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR11_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR11_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR11_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR11_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR11_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR11_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR11_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR11_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR11_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR11_RESERVED3_MASK) >> MIP_REGSET_MMR11_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR11_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR11_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR11_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR11_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR11_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR11_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR11_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR11_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR11_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR11_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR11_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 13 of 19) (MMR12)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 13 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR12_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR12_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR12_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR12_RESERVED1_MASK) >> MIP_REGSET_MMR12_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR12_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR12_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR12_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR12_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR12_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR12_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR12_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR12_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR12_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR12_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR12_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR12_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR12_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR12_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR12_RESERVED2_MASK) >> MIP_REGSET_MMR12_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR12_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR12_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR12_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR12_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR12_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR12_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR12_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR12_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR12_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR12_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR12_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR12_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR12_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR12_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR12_RESERVED3_MASK) >> MIP_REGSET_MMR12_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR12_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR12_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR12_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR12_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR12_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR12_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR12_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR12_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR12_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR12_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR12_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 14 of 19) (MMR13)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 14 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR13_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR13_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR13_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR13_RESERVED1_MASK) >> MIP_REGSET_MMR13_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR13_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR13_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR13_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR13_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR13_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR13_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR13_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR13_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR13_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR13_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR13_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR13_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR13_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR13_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR13_RESERVED2_MASK) >> MIP_REGSET_MMR13_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR13_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR13_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR13_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR13_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR13_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR13_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR13_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR13_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR13_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR13_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR13_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR13_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR13_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR13_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR13_RESERVED3_MASK) >> MIP_REGSET_MMR13_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR13_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR13_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR13_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR13_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR13_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR13_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR13_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR13_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR13_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR13_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR13_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 15 of 19) (MMR14)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 15 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR14_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR14_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR14_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR14_RESERVED1_MASK) >> MIP_REGSET_MMR14_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR14_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR14_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR14_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR14_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR14_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR14_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR14_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR14_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR14_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR14_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR14_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR14_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR14_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR14_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR14_RESERVED2_MASK) >> MIP_REGSET_MMR14_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR14_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR14_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR14_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR14_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR14_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR14_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR14_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR14_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR14_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR14_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR14_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR14_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR14_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR14_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR14_RESERVED3_MASK) >> MIP_REGSET_MMR14_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR14_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR14_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR14_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR14_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR14_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR14_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR14_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR14_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR14_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR14_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR14_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 16 of 19) (MMR15)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 16 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR15_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR15_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR15_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR15_RESERVED1_MASK) >> MIP_REGSET_MMR15_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR15_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR15_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR15_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR15_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR15_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR15_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR15_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR15_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR15_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR15_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR15_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR15_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR15_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR15_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR15_RESERVED2_MASK) >> MIP_REGSET_MMR15_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR15_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR15_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR15_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR15_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR15_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR15_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR15_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR15_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR15_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR15_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR15_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR15_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR15_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR15_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR15_RESERVED3_MASK) >> MIP_REGSET_MMR15_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR15_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR15_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR15_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR15_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR15_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR15_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR15_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR15_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR15_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR15_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR15_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 17 of 19) (MMR16)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 17 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR16_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR16_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR16_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR16_RESERVED1_MASK) >> MIP_REGSET_MMR16_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR16_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR16_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR16_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR16_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR16_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR16_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR16_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR16_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR16_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR16_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR16_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR16_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR16_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR16_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR16_RESERVED2_MASK) >> MIP_REGSET_MMR16_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR16_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR16_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR16_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR16_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR16_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR16_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR16_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR16_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR16_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR16_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR16_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR16_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR16_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR16_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR16_RESERVED3_MASK) >> MIP_REGSET_MMR16_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR16_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR16_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR16_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR16_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR16_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR16_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR16_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR16_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR16_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR16_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR16_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 18 of 19) (MMR17)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 18 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR17_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR17_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR17_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR17_RESERVED1_MASK) >> MIP_REGSET_MMR17_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR17_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR17_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR17_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR17_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR17_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR17_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR17_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR17_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR17_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR17_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR17_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR17_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR17_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR17_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR17_RESERVED2_MASK) >> MIP_REGSET_MMR17_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR17_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR17_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR17_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR17_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR17_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR17_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR17_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR17_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR17_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR17_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR17_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR17_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR17_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR17_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR17_RESERVED3_MASK) >> MIP_REGSET_MMR17_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR17_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR17_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR17_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR17_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR17_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR17_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR17_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR17_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR17_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR17_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR17_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Mux Register (Instance 19 of 19) (MMR18)
/** \brief This register configures multiplexers that generate the LUT address bits. (Instance 19 of 19)*/
//====================================================================

#define  MIP_REGSET_MMR18_RESERVED1_MASK 0xffc00000
#define  MIP_REGSET_MMR18_RESERVED1_SHIFT 22
#define  MIP_REGSET_MMR18_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR18_RESERVED1_MASK) >> MIP_REGSET_MMR18_RESERVED1_SHIFT)
#define  MIP_REGSET_MMR18_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR18_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MMR18_RESERVED1_SHIFT))

#define  MIP_REGSET_MMR18_ADDRVSTABLEMUX_MASK 0x3f0000
#define  MIP_REGSET_MMR18_ADDRVSTABLEMUX_SHIFT 16
#define  MIP_REGSET_MMR18_ADDRVSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR18_ADDRVSTABLEMUX_MASK) >> MIP_REGSET_MMR18_ADDRVSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR18_ADDRVSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR18_ADDRVSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR18_ADDRVSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR18_RESERVED2_MASK 0xc000
#define  MIP_REGSET_MMR18_RESERVED2_SHIFT 14
#define  MIP_REGSET_MMR18_RESERVED2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR18_RESERVED2_MASK) >> MIP_REGSET_MMR18_RESERVED2_SHIFT)
#define  MIP_REGSET_MMR18_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR18_RESERVED2_MASK) | (((uint32_t)val) << MIP_REGSET_MMR18_RESERVED2_SHIFT))

#define  MIP_REGSET_MMR18_ADDRHSTABLEMUX_MASK 0x3f00
#define  MIP_REGSET_MMR18_ADDRHSTABLEMUX_SHIFT 8
#define  MIP_REGSET_MMR18_ADDRHSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR18_ADDRHSTABLEMUX_MASK) >> MIP_REGSET_MMR18_ADDRHSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR18_ADDRHSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR18_ADDRHSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR18_ADDRHSTABLEMUX_SHIFT))

#define  MIP_REGSET_MMR18_RESERVED3_MASK 0xc0
#define  MIP_REGSET_MMR18_RESERVED3_SHIFT 6
#define  MIP_REGSET_MMR18_RESERVED3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR18_RESERVED3_MASK) >> MIP_REGSET_MMR18_RESERVED3_SHIFT)
#define  MIP_REGSET_MMR18_RESERVED3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR18_RESERVED3_MASK) | (((uint32_t)val) << MIP_REGSET_MMR18_RESERVED3_SHIFT))

#define  MIP_REGSET_MMR18_ADDRUNSTABLEMUX_MASK 0x3f
#define  MIP_REGSET_MMR18_ADDRUNSTABLEMUX_SHIFT 0
#define  MIP_REGSET_MMR18_ADDRUNSTABLEMUX_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MMR18_ADDRUNSTABLEMUX_MASK) >> MIP_REGSET_MMR18_ADDRUNSTABLEMUX_SHIFT)
#define  MIP_REGSET_MMR18_ADDRUNSTABLEMUX_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MMR18_ADDRUNSTABLEMUX_MASK) | (((uint32_t)val) << MIP_REGSET_MMR18_ADDRUNSTABLEMUX_SHIFT))

//====================================================================
//Register: MIP Toner Estimation Register (MTER)
/** \brief This register holds the value of the estimated toner usage.*/
//====================================================================

#define  MIP_REGSET_MTER_TONERESTIMATE_MASK 0xffffffff
#define  MIP_REGSET_MTER_TONERESTIMATE_SHIFT 0
#define  MIP_REGSET_MTER_TONERESTIMATE_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTER_TONERESTIMATE_MASK) >> MIP_REGSET_MTER_TONERESTIMATE_SHIFT)
#define  MIP_REGSET_MTER_TONERESTIMATE_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTER_TONERESTIMATE_MASK) | (((uint32_t)val) << MIP_REGSET_MTER_TONERESTIMATE_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 1 of 32) (MTLR0)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 1 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR0_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR0_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR0_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR0_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR0_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR0_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR0_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR0_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR0_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR0_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR0_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR0_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR0_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR0_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR0_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR0_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR0_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR0_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR0_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR0_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR0_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR0_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR0_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR0_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR0_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR0_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR0_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR0_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR0_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR0_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR0_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR0_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR0_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR0_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR0_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR0_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR0_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR0_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR0_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR0_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR0_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR0_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR0_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR0_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR0_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR0_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR0_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR0_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR0_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR0_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR0_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR0_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR0_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR0_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR0_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR0_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR0_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR0_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR0_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR0_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR0_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR0_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR0_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR0_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 2 of 32) (MTLR1)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 2 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR1_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR1_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR1_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR1_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR1_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR1_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR1_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR1_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR1_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR1_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR1_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR1_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR1_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR1_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR1_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR1_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR1_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR1_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR1_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR1_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR1_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR1_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR1_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR1_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR1_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR1_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR1_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR1_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR1_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR1_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR1_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR1_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR1_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR1_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR1_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR1_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR1_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR1_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR1_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR1_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR1_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR1_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR1_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR1_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR1_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR1_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR1_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR1_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR1_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR1_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR1_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR1_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR1_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR1_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR1_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR1_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR1_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR1_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR1_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR1_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR1_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR1_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR1_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR1_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 3 of 32) (MTLR2)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 3 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR2_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR2_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR2_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR2_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR2_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR2_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR2_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR2_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR2_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR2_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR2_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR2_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR2_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR2_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR2_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR2_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR2_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR2_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR2_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR2_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR2_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR2_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR2_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR2_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR2_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR2_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR2_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR2_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR2_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR2_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR2_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR2_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR2_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR2_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR2_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR2_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR2_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR2_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR2_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR2_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR2_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR2_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR2_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR2_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR2_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR2_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR2_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR2_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR2_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR2_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR2_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR2_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR2_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR2_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR2_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR2_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR2_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR2_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR2_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR2_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR2_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR2_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR2_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR2_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 4 of 32) (MTLR3)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 4 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR3_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR3_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR3_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR3_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR3_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR3_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR3_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR3_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR3_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR3_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR3_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR3_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR3_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR3_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR3_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR3_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR3_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR3_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR3_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR3_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR3_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR3_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR3_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR3_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR3_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR3_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR3_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR3_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR3_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR3_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR3_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR3_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR3_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR3_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR3_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR3_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR3_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR3_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR3_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR3_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR3_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR3_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR3_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR3_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR3_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR3_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR3_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR3_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR3_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR3_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR3_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR3_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR3_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR3_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR3_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR3_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR3_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR3_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR3_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR3_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR3_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR3_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR3_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR3_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 5 of 32) (MTLR4)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 5 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR4_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR4_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR4_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR4_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR4_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR4_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR4_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR4_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR4_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR4_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR4_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR4_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR4_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR4_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR4_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR4_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR4_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR4_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR4_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR4_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR4_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR4_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR4_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR4_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR4_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR4_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR4_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR4_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR4_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR4_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR4_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR4_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR4_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR4_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR4_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR4_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR4_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR4_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR4_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR4_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR4_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR4_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR4_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR4_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR4_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR4_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR4_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR4_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR4_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR4_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR4_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR4_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR4_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR4_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR4_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR4_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR4_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR4_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR4_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR4_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR4_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR4_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR4_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR4_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 6 of 32) (MTLR5)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 6 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR5_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR5_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR5_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR5_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR5_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR5_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR5_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR5_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR5_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR5_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR5_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR5_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR5_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR5_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR5_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR5_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR5_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR5_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR5_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR5_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR5_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR5_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR5_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR5_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR5_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR5_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR5_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR5_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR5_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR5_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR5_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR5_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR5_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR5_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR5_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR5_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR5_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR5_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR5_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR5_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR5_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR5_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR5_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR5_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR5_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR5_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR5_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR5_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR5_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR5_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR5_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR5_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR5_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR5_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR5_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR5_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR5_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR5_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR5_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR5_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR5_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR5_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR5_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR5_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 7 of 32) (MTLR6)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 7 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR6_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR6_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR6_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR6_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR6_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR6_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR6_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR6_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR6_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR6_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR6_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR6_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR6_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR6_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR6_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR6_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR6_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR6_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR6_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR6_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR6_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR6_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR6_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR6_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR6_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR6_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR6_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR6_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR6_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR6_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR6_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR6_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR6_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR6_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR6_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR6_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR6_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR6_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR6_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR6_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR6_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR6_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR6_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR6_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR6_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR6_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR6_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR6_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR6_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR6_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR6_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR6_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR6_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR6_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR6_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR6_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR6_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR6_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR6_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR6_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR6_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR6_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR6_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR6_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 8 of 32) (MTLR7)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 8 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR7_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR7_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR7_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR7_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR7_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR7_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR7_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR7_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR7_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR7_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR7_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR7_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR7_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR7_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR7_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR7_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR7_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR7_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR7_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR7_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR7_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR7_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR7_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR7_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR7_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR7_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR7_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR7_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR7_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR7_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR7_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR7_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR7_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR7_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR7_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR7_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR7_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR7_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR7_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR7_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR7_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR7_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR7_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR7_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR7_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR7_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR7_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR7_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR7_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR7_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR7_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR7_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR7_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR7_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR7_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR7_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR7_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR7_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR7_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR7_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR7_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR7_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR7_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR7_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 9 of 32) (MTLR8)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 9 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR8_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR8_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR8_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR8_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR8_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR8_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR8_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR8_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR8_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR8_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR8_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR8_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR8_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR8_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR8_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR8_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR8_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR8_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR8_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR8_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR8_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR8_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR8_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR8_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR8_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR8_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR8_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR8_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR8_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR8_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR8_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR8_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR8_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR8_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR8_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR8_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR8_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR8_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR8_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR8_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR8_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR8_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR8_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR8_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR8_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR8_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR8_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR8_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR8_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR8_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR8_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR8_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR8_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR8_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR8_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR8_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR8_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR8_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR8_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR8_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR8_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR8_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR8_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR8_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 10 of 32) (MTLR9)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 10 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR9_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR9_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR9_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR9_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR9_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR9_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR9_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR9_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR9_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR9_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR9_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR9_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR9_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR9_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR9_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR9_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR9_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR9_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR9_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR9_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR9_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR9_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR9_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR9_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR9_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR9_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR9_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR9_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR9_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR9_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR9_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR9_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR9_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR9_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR9_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR9_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR9_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR9_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR9_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR9_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR9_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR9_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR9_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR9_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR9_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR9_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR9_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR9_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR9_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR9_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR9_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR9_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR9_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR9_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR9_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR9_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR9_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR9_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR9_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR9_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR9_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR9_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR9_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR9_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 11 of 32) (MTLR10)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 11 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR10_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR10_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR10_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR10_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR10_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR10_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR10_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR10_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR10_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR10_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR10_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR10_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR10_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR10_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR10_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR10_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR10_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR10_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR10_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR10_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR10_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR10_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR10_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR10_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR10_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR10_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR10_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR10_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR10_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR10_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR10_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR10_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR10_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR10_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR10_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR10_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR10_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR10_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR10_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR10_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR10_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR10_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR10_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR10_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR10_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR10_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR10_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR10_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR10_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR10_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR10_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR10_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR10_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR10_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR10_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR10_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR10_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR10_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR10_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR10_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR10_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR10_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR10_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR10_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 12 of 32) (MTLR11)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 12 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR11_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR11_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR11_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR11_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR11_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR11_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR11_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR11_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR11_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR11_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR11_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR11_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR11_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR11_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR11_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR11_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR11_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR11_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR11_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR11_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR11_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR11_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR11_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR11_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR11_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR11_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR11_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR11_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR11_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR11_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR11_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR11_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR11_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR11_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR11_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR11_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR11_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR11_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR11_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR11_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR11_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR11_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR11_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR11_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR11_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR11_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR11_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR11_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR11_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR11_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR11_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR11_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR11_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR11_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR11_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR11_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR11_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR11_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR11_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR11_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR11_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR11_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR11_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR11_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 13 of 32) (MTLR12)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 13 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR12_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR12_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR12_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR12_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR12_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR12_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR12_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR12_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR12_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR12_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR12_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR12_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR12_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR12_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR12_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR12_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR12_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR12_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR12_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR12_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR12_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR12_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR12_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR12_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR12_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR12_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR12_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR12_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR12_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR12_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR12_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR12_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR12_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR12_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR12_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR12_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR12_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR12_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR12_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR12_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR12_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR12_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR12_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR12_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR12_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR12_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR12_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR12_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR12_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR12_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR12_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR12_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR12_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR12_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR12_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR12_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR12_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR12_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR12_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR12_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR12_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR12_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR12_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR12_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 14 of 32) (MTLR13)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 14 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR13_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR13_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR13_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR13_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR13_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR13_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR13_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR13_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR13_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR13_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR13_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR13_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR13_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR13_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR13_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR13_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR13_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR13_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR13_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR13_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR13_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR13_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR13_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR13_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR13_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR13_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR13_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR13_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR13_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR13_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR13_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR13_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR13_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR13_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR13_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR13_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR13_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR13_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR13_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR13_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR13_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR13_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR13_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR13_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR13_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR13_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR13_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR13_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR13_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR13_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR13_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR13_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR13_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR13_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR13_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR13_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR13_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR13_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR13_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR13_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR13_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR13_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR13_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR13_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 15 of 32) (MTLR14)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 15 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR14_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR14_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR14_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR14_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR14_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR14_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR14_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR14_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR14_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR14_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR14_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR14_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR14_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR14_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR14_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR14_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR14_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR14_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR14_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR14_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR14_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR14_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR14_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR14_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR14_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR14_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR14_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR14_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR14_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR14_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR14_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR14_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR14_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR14_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR14_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR14_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR14_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR14_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR14_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR14_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR14_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR14_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR14_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR14_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR14_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR14_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR14_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR14_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR14_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR14_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR14_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR14_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR14_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR14_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR14_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR14_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR14_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR14_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR14_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR14_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR14_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR14_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR14_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR14_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 16 of 32) (MTLR15)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 16 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR15_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR15_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR15_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR15_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR15_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR15_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR15_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR15_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR15_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR15_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR15_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR15_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR15_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR15_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR15_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR15_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR15_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR15_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR15_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR15_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR15_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR15_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR15_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR15_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR15_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR15_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR15_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR15_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR15_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR15_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR15_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR15_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR15_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR15_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR15_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR15_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR15_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR15_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR15_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR15_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR15_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR15_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR15_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR15_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR15_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR15_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR15_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR15_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR15_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR15_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR15_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR15_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR15_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR15_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR15_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR15_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR15_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR15_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR15_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR15_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR15_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR15_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR15_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR15_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 17 of 32) (MTLR16)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 17 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR16_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR16_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR16_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR16_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR16_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR16_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR16_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR16_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR16_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR16_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR16_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR16_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR16_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR16_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR16_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR16_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR16_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR16_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR16_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR16_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR16_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR16_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR16_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR16_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR16_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR16_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR16_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR16_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR16_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR16_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR16_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR16_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR16_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR16_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR16_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR16_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR16_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR16_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR16_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR16_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR16_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR16_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR16_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR16_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR16_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR16_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR16_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR16_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR16_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR16_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR16_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR16_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR16_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR16_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR16_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR16_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR16_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR16_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR16_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR16_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR16_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR16_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR16_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR16_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 18 of 32) (MTLR17)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 18 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR17_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR17_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR17_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR17_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR17_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR17_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR17_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR17_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR17_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR17_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR17_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR17_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR17_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR17_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR17_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR17_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR17_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR17_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR17_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR17_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR17_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR17_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR17_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR17_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR17_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR17_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR17_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR17_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR17_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR17_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR17_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR17_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR17_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR17_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR17_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR17_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR17_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR17_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR17_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR17_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR17_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR17_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR17_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR17_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR17_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR17_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR17_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR17_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR17_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR17_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR17_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR17_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR17_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR17_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR17_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR17_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR17_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR17_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR17_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR17_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR17_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR17_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR17_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR17_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 19 of 32) (MTLR18)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 19 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR18_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR18_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR18_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR18_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR18_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR18_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR18_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR18_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR18_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR18_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR18_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR18_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR18_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR18_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR18_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR18_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR18_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR18_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR18_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR18_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR18_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR18_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR18_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR18_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR18_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR18_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR18_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR18_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR18_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR18_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR18_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR18_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR18_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR18_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR18_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR18_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR18_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR18_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR18_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR18_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR18_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR18_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR18_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR18_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR18_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR18_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR18_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR18_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR18_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR18_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR18_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR18_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR18_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR18_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR18_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR18_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR18_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR18_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR18_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR18_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR18_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR18_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR18_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR18_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 20 of 32) (MTLR19)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 20 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR19_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR19_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR19_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR19_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR19_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR19_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR19_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR19_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR19_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR19_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR19_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR19_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR19_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR19_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR19_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR19_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR19_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR19_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR19_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR19_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR19_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR19_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR19_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR19_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR19_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR19_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR19_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR19_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR19_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR19_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR19_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR19_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR19_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR19_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR19_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR19_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR19_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR19_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR19_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR19_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR19_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR19_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR19_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR19_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR19_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR19_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR19_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR19_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR19_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR19_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR19_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR19_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR19_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR19_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR19_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR19_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR19_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR19_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR19_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR19_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR19_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR19_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR19_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR19_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 21 of 32) (MTLR20)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 21 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR20_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR20_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR20_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR20_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR20_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR20_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR20_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR20_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR20_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR20_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR20_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR20_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR20_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR20_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR20_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR20_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR20_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR20_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR20_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR20_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR20_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR20_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR20_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR20_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR20_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR20_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR20_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR20_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR20_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR20_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR20_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR20_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR20_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR20_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR20_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR20_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR20_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR20_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR20_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR20_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR20_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR20_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR20_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR20_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR20_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR20_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR20_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR20_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR20_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR20_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR20_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR20_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR20_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR20_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR20_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR20_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR20_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR20_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR20_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR20_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR20_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR20_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR20_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR20_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 22 of 32) (MTLR21)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 22 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR21_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR21_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR21_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR21_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR21_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR21_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR21_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR21_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR21_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR21_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR21_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR21_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR21_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR21_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR21_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR21_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR21_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR21_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR21_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR21_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR21_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR21_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR21_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR21_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR21_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR21_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR21_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR21_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR21_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR21_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR21_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR21_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR21_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR21_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR21_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR21_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR21_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR21_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR21_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR21_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR21_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR21_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR21_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR21_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR21_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR21_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR21_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR21_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR21_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR21_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR21_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR21_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR21_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR21_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR21_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR21_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR21_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR21_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR21_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR21_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR21_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR21_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR21_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR21_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 23 of 32) (MTLR22)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 23 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR22_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR22_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR22_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR22_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR22_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR22_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR22_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR22_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR22_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR22_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR22_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR22_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR22_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR22_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR22_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR22_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR22_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR22_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR22_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR22_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR22_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR22_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR22_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR22_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR22_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR22_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR22_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR22_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR22_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR22_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR22_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR22_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR22_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR22_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR22_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR22_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR22_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR22_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR22_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR22_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR22_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR22_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR22_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR22_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR22_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR22_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR22_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR22_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR22_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR22_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR22_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR22_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR22_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR22_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR22_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR22_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR22_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR22_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR22_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR22_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR22_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR22_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR22_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR22_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 24 of 32) (MTLR23)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 24 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR23_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR23_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR23_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR23_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR23_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR23_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR23_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR23_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR23_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR23_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR23_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR23_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR23_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR23_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR23_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR23_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR23_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR23_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR23_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR23_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR23_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR23_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR23_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR23_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR23_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR23_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR23_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR23_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR23_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR23_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR23_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR23_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR23_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR23_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR23_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR23_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR23_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR23_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR23_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR23_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR23_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR23_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR23_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR23_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR23_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR23_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR23_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR23_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR23_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR23_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR23_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR23_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR23_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR23_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR23_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR23_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR23_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR23_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR23_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR23_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR23_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR23_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR23_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR23_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 25 of 32) (MTLR24)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 25 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR24_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR24_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR24_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR24_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR24_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR24_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR24_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR24_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR24_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR24_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR24_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR24_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR24_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR24_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR24_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR24_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR24_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR24_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR24_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR24_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR24_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR24_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR24_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR24_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR24_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR24_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR24_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR24_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR24_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR24_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR24_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR24_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR24_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR24_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR24_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR24_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR24_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR24_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR24_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR24_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR24_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR24_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR24_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR24_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR24_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR24_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR24_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR24_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR24_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR24_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR24_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR24_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR24_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR24_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR24_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR24_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR24_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR24_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR24_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR24_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR24_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR24_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR24_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR24_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 26 of 32) (MTLR25)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 26 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR25_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR25_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR25_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR25_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR25_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR25_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR25_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR25_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR25_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR25_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR25_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR25_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR25_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR25_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR25_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR25_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR25_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR25_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR25_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR25_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR25_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR25_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR25_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR25_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR25_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR25_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR25_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR25_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR25_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR25_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR25_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR25_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR25_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR25_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR25_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR25_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR25_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR25_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR25_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR25_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR25_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR25_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR25_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR25_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR25_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR25_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR25_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR25_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR25_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR25_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR25_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR25_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR25_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR25_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR25_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR25_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR25_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR25_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR25_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR25_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR25_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR25_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR25_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR25_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 27 of 32) (MTLR26)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 27 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR26_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR26_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR26_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR26_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR26_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR26_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR26_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR26_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR26_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR26_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR26_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR26_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR26_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR26_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR26_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR26_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR26_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR26_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR26_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR26_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR26_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR26_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR26_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR26_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR26_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR26_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR26_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR26_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR26_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR26_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR26_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR26_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR26_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR26_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR26_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR26_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR26_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR26_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR26_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR26_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR26_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR26_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR26_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR26_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR26_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR26_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR26_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR26_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR26_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR26_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR26_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR26_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR26_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR26_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR26_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR26_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR26_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR26_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR26_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR26_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR26_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR26_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR26_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR26_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 28 of 32) (MTLR27)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 28 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR27_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR27_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR27_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR27_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR27_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR27_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR27_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR27_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR27_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR27_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR27_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR27_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR27_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR27_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR27_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR27_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR27_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR27_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR27_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR27_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR27_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR27_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR27_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR27_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR27_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR27_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR27_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR27_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR27_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR27_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR27_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR27_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR27_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR27_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR27_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR27_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR27_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR27_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR27_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR27_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR27_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR27_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR27_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR27_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR27_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR27_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR27_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR27_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR27_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR27_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR27_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR27_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR27_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR27_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR27_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR27_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR27_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR27_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR27_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR27_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR27_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR27_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR27_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR27_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 29 of 32) (MTLR28)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 29 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR28_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR28_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR28_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR28_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR28_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR28_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR28_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR28_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR28_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR28_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR28_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR28_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR28_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR28_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR28_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR28_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR28_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR28_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR28_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR28_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR28_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR28_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR28_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR28_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR28_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR28_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR28_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR28_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR28_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR28_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR28_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR28_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR28_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR28_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR28_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR28_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR28_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR28_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR28_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR28_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR28_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR28_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR28_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR28_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR28_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR28_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR28_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR28_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR28_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR28_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR28_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR28_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR28_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR28_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR28_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR28_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR28_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR28_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR28_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR28_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR28_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR28_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR28_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR28_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 30 of 32) (MTLR29)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 30 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR29_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR29_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR29_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR29_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR29_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR29_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR29_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR29_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR29_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR29_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR29_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR29_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR29_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR29_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR29_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR29_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR29_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR29_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR29_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR29_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR29_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR29_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR29_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR29_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR29_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR29_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR29_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR29_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR29_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR29_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR29_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR29_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR29_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR29_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR29_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR29_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR29_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR29_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR29_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR29_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR29_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR29_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR29_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR29_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR29_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR29_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR29_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR29_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR29_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR29_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR29_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR29_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR29_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR29_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR29_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR29_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR29_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR29_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR29_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR29_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR29_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR29_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR29_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR29_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 31 of 32) (MTLR30)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 31 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR30_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR30_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR30_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR30_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR30_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR30_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR30_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR30_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR30_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR30_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR30_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR30_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR30_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR30_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR30_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR30_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR30_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR30_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR30_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR30_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR30_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR30_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR30_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR30_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR30_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR30_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR30_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR30_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR30_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR30_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR30_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR30_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR30_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR30_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR30_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR30_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR30_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR30_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR30_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR30_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR30_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR30_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR30_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR30_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR30_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR30_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR30_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR30_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR30_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR30_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR30_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR30_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR30_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR30_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR30_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR30_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR30_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR30_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR30_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR30_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR30_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR30_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR30_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR30_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP Toner LUT Register (Instance 32 of 32) (MTLR31)
/** \brief This register configures the 256x4 LUT used for toner estimation. (Instance 32 of 32)*/
//====================================================================

#define  MIP_REGSET_MTLR31_TONERLUTENTRY7_MASK 0xf0000000
#define  MIP_REGSET_MTLR31_TONERLUTENTRY7_SHIFT 28
#define  MIP_REGSET_MTLR31_TONERLUTENTRY7_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR31_TONERLUTENTRY7_MASK) >> MIP_REGSET_MTLR31_TONERLUTENTRY7_SHIFT)
#define  MIP_REGSET_MTLR31_TONERLUTENTRY7_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR31_TONERLUTENTRY7_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR31_TONERLUTENTRY7_SHIFT))

#define  MIP_REGSET_MTLR31_TONERLUTENTRY6_MASK 0xf000000
#define  MIP_REGSET_MTLR31_TONERLUTENTRY6_SHIFT 24
#define  MIP_REGSET_MTLR31_TONERLUTENTRY6_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR31_TONERLUTENTRY6_MASK) >> MIP_REGSET_MTLR31_TONERLUTENTRY6_SHIFT)
#define  MIP_REGSET_MTLR31_TONERLUTENTRY6_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR31_TONERLUTENTRY6_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR31_TONERLUTENTRY6_SHIFT))

#define  MIP_REGSET_MTLR31_TONERLUTENTRY5_MASK 0xf00000
#define  MIP_REGSET_MTLR31_TONERLUTENTRY5_SHIFT 20
#define  MIP_REGSET_MTLR31_TONERLUTENTRY5_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR31_TONERLUTENTRY5_MASK) >> MIP_REGSET_MTLR31_TONERLUTENTRY5_SHIFT)
#define  MIP_REGSET_MTLR31_TONERLUTENTRY5_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR31_TONERLUTENTRY5_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR31_TONERLUTENTRY5_SHIFT))

#define  MIP_REGSET_MTLR31_TONERLUTENTRY4_MASK 0xf0000
#define  MIP_REGSET_MTLR31_TONERLUTENTRY4_SHIFT 16
#define  MIP_REGSET_MTLR31_TONERLUTENTRY4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR31_TONERLUTENTRY4_MASK) >> MIP_REGSET_MTLR31_TONERLUTENTRY4_SHIFT)
#define  MIP_REGSET_MTLR31_TONERLUTENTRY4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR31_TONERLUTENTRY4_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR31_TONERLUTENTRY4_SHIFT))

#define  MIP_REGSET_MTLR31_TONERLUTENTRY3_MASK 0xf000
#define  MIP_REGSET_MTLR31_TONERLUTENTRY3_SHIFT 12
#define  MIP_REGSET_MTLR31_TONERLUTENTRY3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR31_TONERLUTENTRY3_MASK) >> MIP_REGSET_MTLR31_TONERLUTENTRY3_SHIFT)
#define  MIP_REGSET_MTLR31_TONERLUTENTRY3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR31_TONERLUTENTRY3_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR31_TONERLUTENTRY3_SHIFT))

#define  MIP_REGSET_MTLR31_TONERLUTENTRY2_MASK 0xf00
#define  MIP_REGSET_MTLR31_TONERLUTENTRY2_SHIFT 8
#define  MIP_REGSET_MTLR31_TONERLUTENTRY2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR31_TONERLUTENTRY2_MASK) >> MIP_REGSET_MTLR31_TONERLUTENTRY2_SHIFT)
#define  MIP_REGSET_MTLR31_TONERLUTENTRY2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR31_TONERLUTENTRY2_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR31_TONERLUTENTRY2_SHIFT))

#define  MIP_REGSET_MTLR31_TONERLUTENTRY1_MASK 0xf0
#define  MIP_REGSET_MTLR31_TONERLUTENTRY1_SHIFT 4
#define  MIP_REGSET_MTLR31_TONERLUTENTRY1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR31_TONERLUTENTRY1_MASK) >> MIP_REGSET_MTLR31_TONERLUTENTRY1_SHIFT)
#define  MIP_REGSET_MTLR31_TONERLUTENTRY1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR31_TONERLUTENTRY1_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR31_TONERLUTENTRY1_SHIFT))

#define  MIP_REGSET_MTLR31_TONERLUTENTRY0_MASK 0xf
#define  MIP_REGSET_MTLR31_TONERLUTENTRY0_SHIFT 0
#define  MIP_REGSET_MTLR31_TONERLUTENTRY0_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MTLR31_TONERLUTENTRY0_MASK) >> MIP_REGSET_MTLR31_TONERLUTENTRY0_SHIFT)
#define  MIP_REGSET_MTLR31_TONERLUTENTRY0_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MTLR31_TONERLUTENTRY0_MASK) | (((uint32_t)val) << MIP_REGSET_MTLR31_TONERLUTENTRY0_SHIFT))

//====================================================================
//Register: MIP LineBuffer0 Address Register (LB0AR)
/** \brief MIP Window Manager Buffer Address and Mode register.*/
//====================================================================

#define  MIP_REGSET_LB0AR_MODE_MASK 0x80000000
#define  MIP_REGSET_LB0AR_MODE_SHIFT 31
#define  MIP_REGSET_LB0AR_MODE_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0AR_MODE_MASK) >> MIP_REGSET_LB0AR_MODE_SHIFT)
#define  MIP_REGSET_LB0AR_MODE_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0AR_MODE_MASK) | (((uint32_t)val) << MIP_REGSET_LB0AR_MODE_SHIFT))

#define  MIP_REGSET_LB0AR_RESERVED1_MASK 0x7fffc000
#define  MIP_REGSET_LB0AR_RESERVED1_SHIFT 14
#define  MIP_REGSET_LB0AR_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0AR_RESERVED1_MASK) >> MIP_REGSET_LB0AR_RESERVED1_SHIFT)
#define  MIP_REGSET_LB0AR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0AR_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_LB0AR_RESERVED1_SHIFT))

#define  MIP_REGSET_LB0AR_ADDRESS_MASK 0x3fff
#define  MIP_REGSET_LB0AR_ADDRESS_SHIFT 0
#define  MIP_REGSET_LB0AR_ADDRESS_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0AR_ADDRESS_MASK) >> MIP_REGSET_LB0AR_ADDRESS_SHIFT)
#define  MIP_REGSET_LB0AR_ADDRESS_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0AR_ADDRESS_MASK) | (((uint32_t)val) << MIP_REGSET_LB0AR_ADDRESS_SHIFT))

//====================================================================
//Register: MIP LineBuffer0 Data Write Register 0 (LB0DWR0)
/** \brief This register maps to the bits 31:0 of the MIP line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_LB0DWR0_DATA_MASK 0xffffffff
#define  MIP_REGSET_LB0DWR0_DATA_SHIFT 0
#define  MIP_REGSET_LB0DWR0_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0DWR0_DATA_MASK) >> MIP_REGSET_LB0DWR0_DATA_SHIFT)
#define  MIP_REGSET_LB0DWR0_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0DWR0_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_LB0DWR0_DATA_SHIFT))

//====================================================================
//Register: MIP LineBuffer0 Data Write Register 1 (LB0DWR1)
/** \brief This register maps to the bits 63:32 of the MIP line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_LB0DWR1_DATA_MASK 0xffffffff
#define  MIP_REGSET_LB0DWR1_DATA_SHIFT 0
#define  MIP_REGSET_LB0DWR1_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0DWR1_DATA_MASK) >> MIP_REGSET_LB0DWR1_DATA_SHIFT)
#define  MIP_REGSET_LB0DWR1_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0DWR1_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_LB0DWR1_DATA_SHIFT))

//====================================================================
//Register: MIP LineBuffer0 Data Write Register 2 (LB0DWR2)
/** \brief This register maps to the bits 83:64 of the MIP line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_LB0DWR2_RESERVED1_MASK 0xfff00000
#define  MIP_REGSET_LB0DWR2_RESERVED1_SHIFT 20
#define  MIP_REGSET_LB0DWR2_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0DWR2_RESERVED1_MASK) >> MIP_REGSET_LB0DWR2_RESERVED1_SHIFT)
#define  MIP_REGSET_LB0DWR2_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0DWR2_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_LB0DWR2_RESERVED1_SHIFT))

#define  MIP_REGSET_LB0DWR2_DATA_MASK 0xfffff
#define  MIP_REGSET_LB0DWR2_DATA_SHIFT 0
#define  MIP_REGSET_LB0DWR2_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0DWR2_DATA_MASK) >> MIP_REGSET_LB0DWR2_DATA_SHIFT)
#define  MIP_REGSET_LB0DWR2_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0DWR2_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_LB0DWR2_DATA_SHIFT))

//====================================================================
//Register: MIP LineBuffer0 Data Read Register 0 (LB0DRR0)
/** \brief This register maps to the 31:0 bits of the MIP line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_LB0DRR0_DATA_MASK 0xffffffff
#define  MIP_REGSET_LB0DRR0_DATA_SHIFT 0
#define  MIP_REGSET_LB0DRR0_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0DRR0_DATA_MASK) >> MIP_REGSET_LB0DRR0_DATA_SHIFT)
#define  MIP_REGSET_LB0DRR0_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0DRR0_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_LB0DRR0_DATA_SHIFT))

//====================================================================
//Register: MIP LineBuffer0 Data Read Register 1 (LB0DRR1)
/** \brief This register maps to the 63:32 bits of the MIP line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_LB0DRR1_DATA_MASK 0xffffffff
#define  MIP_REGSET_LB0DRR1_DATA_SHIFT 0
#define  MIP_REGSET_LB0DRR1_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0DRR1_DATA_MASK) >> MIP_REGSET_LB0DRR1_DATA_SHIFT)
#define  MIP_REGSET_LB0DRR1_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0DRR1_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_LB0DRR1_DATA_SHIFT))

//====================================================================
//Register: MIP LineBuffer0 Data Read Register 2 (LB0DRR2)
/** \brief This register maps to the 83:64 bits of the MIP line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_LB0DRR2_RESERVED1_MASK 0xfff00000
#define  MIP_REGSET_LB0DRR2_RESERVED1_SHIFT 20
#define  MIP_REGSET_LB0DRR2_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0DRR2_RESERVED1_MASK) >> MIP_REGSET_LB0DRR2_RESERVED1_SHIFT)
#define  MIP_REGSET_LB0DRR2_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0DRR2_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_LB0DRR2_RESERVED1_SHIFT))

#define  MIP_REGSET_LB0DRR2_DATA_MASK 0xfffff
#define  MIP_REGSET_LB0DRR2_DATA_SHIFT 0
#define  MIP_REGSET_LB0DRR2_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_LB0DRR2_DATA_MASK) >> MIP_REGSET_LB0DRR2_DATA_SHIFT)
#define  MIP_REGSET_LB0DRR2_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_LB0DRR2_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_LB0DRR2_DATA_SHIFT))

//====================================================================
//Register: TIE LUT Address Register (TIEAR)
/** \brief TIE LUT Buffer Address and Mode register.*/
//====================================================================

#define  MIP_REGSET_TIEAR_MODE_MASK 0x80000000
#define  MIP_REGSET_TIEAR_MODE_SHIFT 31
#define  MIP_REGSET_TIEAR_MODE_MASK_SHIFT(reg) (((reg) & MIP_REGSET_TIEAR_MODE_MASK) >> MIP_REGSET_TIEAR_MODE_SHIFT)
#define  MIP_REGSET_TIEAR_MODE_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_TIEAR_MODE_MASK) | (((uint32_t)val) << MIP_REGSET_TIEAR_MODE_SHIFT))

#define  MIP_REGSET_TIEAR_RESERVED1_MASK 0x7fffe000
#define  MIP_REGSET_TIEAR_RESERVED1_SHIFT 13
#define  MIP_REGSET_TIEAR_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_TIEAR_RESERVED1_MASK) >> MIP_REGSET_TIEAR_RESERVED1_SHIFT)
#define  MIP_REGSET_TIEAR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_TIEAR_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_TIEAR_RESERVED1_SHIFT))

#define  MIP_REGSET_TIEAR_ADDRESS_MASK 0x1fff
#define  MIP_REGSET_TIEAR_ADDRESS_SHIFT 0
#define  MIP_REGSET_TIEAR_ADDRESS_MASK_SHIFT(reg) (((reg) & MIP_REGSET_TIEAR_ADDRESS_MASK) >> MIP_REGSET_TIEAR_ADDRESS_SHIFT)
#define  MIP_REGSET_TIEAR_ADDRESS_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_TIEAR_ADDRESS_MASK) | (((uint32_t)val) << MIP_REGSET_TIEAR_ADDRESS_SHIFT))

//====================================================================
//Register: MIP TIE Data Write Register 0 (TIEWR0)
/** \brief This register maps to the bits 31:0 of the MIP TIE line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_TIEWR0_DATA_MASK 0xffffffff
#define  MIP_REGSET_TIEWR0_DATA_SHIFT 0
#define  MIP_REGSET_TIEWR0_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_TIEWR0_DATA_MASK) >> MIP_REGSET_TIEWR0_DATA_SHIFT)
#define  MIP_REGSET_TIEWR0_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_TIEWR0_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_TIEWR0_DATA_SHIFT))

//====================================================================
//Register: MIP TIE Data Write Register 1 (TIEWR1)
/** \brief This register maps to the bits 63:32 of the MIP TIE line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_TIEWR1_DATA_MASK 0xffffffff
#define  MIP_REGSET_TIEWR1_DATA_SHIFT 0
#define  MIP_REGSET_TIEWR1_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_TIEWR1_DATA_MASK) >> MIP_REGSET_TIEWR1_DATA_SHIFT)
#define  MIP_REGSET_TIEWR1_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_TIEWR1_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_TIEWR1_DATA_SHIFT))

//====================================================================
//Register: MIP TIE Data Read Register 0 (TIEDRR0)
/** \brief This register maps to the 31:0 bits of the MIP TIE line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_TIEDRR0_DATA_MASK 0xffffffff
#define  MIP_REGSET_TIEDRR0_DATA_SHIFT 0
#define  MIP_REGSET_TIEDRR0_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_TIEDRR0_DATA_MASK) >> MIP_REGSET_TIEDRR0_DATA_SHIFT)
#define  MIP_REGSET_TIEDRR0_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_TIEDRR0_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_TIEDRR0_DATA_SHIFT))

//====================================================================
//Register: MIP TIE Data Read Register 1 (TIEDRR1)
/** \brief This register maps to the 63:32 bits of the MIP TIE line buffer SRAM.*/
//====================================================================

#define  MIP_REGSET_TIEDRR1_DATA_MASK 0xffffffff
#define  MIP_REGSET_TIEDRR1_DATA_SHIFT 0
#define  MIP_REGSET_TIEDRR1_DATA_MASK_SHIFT(reg) (((reg) & MIP_REGSET_TIEDRR1_DATA_MASK) >> MIP_REGSET_TIEDRR1_DATA_SHIFT)
#define  MIP_REGSET_TIEDRR1_DATA_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_TIEDRR1_DATA_MASK) | (((uint32_t)val) << MIP_REGSET_TIEDRR1_DATA_SHIFT))

//====================================================================
//Register: MIP Galvo Setup Register (MGSR)
/** \brief This register configures the Galvo Couters for Initial Conditions .*/
//====================================================================

#define  MIP_REGSET_MGSR_RESERVED1_MASK 0xfffffff0
#define  MIP_REGSET_MGSR_RESERVED1_SHIFT 4
#define  MIP_REGSET_MGSR_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MGSR_RESERVED1_MASK) >> MIP_REGSET_MGSR_RESERVED1_SHIFT)
#define  MIP_REGSET_MGSR_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MGSR_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_MGSR_RESERVED1_SHIFT))

#define  MIP_REGSET_MGSR_HGALVOSTART_MASK 0xf
#define  MIP_REGSET_MGSR_HGALVOSTART_SHIFT 0
#define  MIP_REGSET_MGSR_HGALVOSTART_MASK_SHIFT(reg) (((reg) & MIP_REGSET_MGSR_HGALVOSTART_MASK) >> MIP_REGSET_MGSR_HGALVOSTART_SHIFT)
#define  MIP_REGSET_MGSR_HGALVOSTART_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_MGSR_HGALVOSTART_MASK) | (((uint32_t)val) << MIP_REGSET_MGSR_HGALVOSTART_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register0 (SR0)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR0_RESERVED1_MASK 0xc0000000
#define  MIP_REGSET_SR0_RESERVED1_SHIFT 30
#define  MIP_REGSET_SR0_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR0_RESERVED1_MASK) >> MIP_REGSET_SR0_RESERVED1_SHIFT)
#define  MIP_REGSET_SR0_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR0_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR0_RESERVED1_SHIFT))

#define  MIP_REGSET_SR0_F3_MASK 0x3ff00000
#define  MIP_REGSET_SR0_F3_SHIFT 20
#define  MIP_REGSET_SR0_F3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR0_F3_MASK) >> MIP_REGSET_SR0_F3_SHIFT)
#define  MIP_REGSET_SR0_F3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR0_F3_MASK) | (((uint32_t)val) << MIP_REGSET_SR0_F3_SHIFT))

#define  MIP_REGSET_SR0_F2_MASK 0xffc00
#define  MIP_REGSET_SR0_F2_SHIFT 10
#define  MIP_REGSET_SR0_F2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR0_F2_MASK) >> MIP_REGSET_SR0_F2_SHIFT)
#define  MIP_REGSET_SR0_F2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR0_F2_MASK) | (((uint32_t)val) << MIP_REGSET_SR0_F2_SHIFT))

#define  MIP_REGSET_SR0_F1_MASK 0x3ff
#define  MIP_REGSET_SR0_F1_SHIFT 0
#define  MIP_REGSET_SR0_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR0_F1_MASK) >> MIP_REGSET_SR0_F1_SHIFT)
#define  MIP_REGSET_SR0_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR0_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR0_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register1 (SR1)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR1_F1_MASK 0xffffffff
#define  MIP_REGSET_SR1_F1_SHIFT 0
#define  MIP_REGSET_SR1_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR1_F1_MASK) >> MIP_REGSET_SR1_F1_SHIFT)
#define  MIP_REGSET_SR1_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR1_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR1_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register2 (SR2)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR2_F1_MASK 0xffffffff
#define  MIP_REGSET_SR2_F1_SHIFT 0
#define  MIP_REGSET_SR2_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR2_F1_MASK) >> MIP_REGSET_SR2_F1_SHIFT)
#define  MIP_REGSET_SR2_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR2_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR2_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register3 (SR3)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR3_F1_MASK 0xffffffff
#define  MIP_REGSET_SR3_F1_SHIFT 0
#define  MIP_REGSET_SR3_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR3_F1_MASK) >> MIP_REGSET_SR3_F1_SHIFT)
#define  MIP_REGSET_SR3_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR3_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR3_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register4 (SR4)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR4_RESERVED1_MASK 0xfffe0000
#define  MIP_REGSET_SR4_RESERVED1_SHIFT 17
#define  MIP_REGSET_SR4_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR4_RESERVED1_MASK) >> MIP_REGSET_SR4_RESERVED1_SHIFT)
#define  MIP_REGSET_SR4_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR4_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR4_RESERVED1_SHIFT))

#define  MIP_REGSET_SR4_F4_MASK 0x1ff80
#define  MIP_REGSET_SR4_F4_SHIFT 7
#define  MIP_REGSET_SR4_F4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR4_F4_MASK) >> MIP_REGSET_SR4_F4_SHIFT)
#define  MIP_REGSET_SR4_F4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR4_F4_MASK) | (((uint32_t)val) << MIP_REGSET_SR4_F4_SHIFT))

#define  MIP_REGSET_SR4_F3_MASK 0x70
#define  MIP_REGSET_SR4_F3_SHIFT 4
#define  MIP_REGSET_SR4_F3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR4_F3_MASK) >> MIP_REGSET_SR4_F3_SHIFT)
#define  MIP_REGSET_SR4_F3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR4_F3_MASK) | (((uint32_t)val) << MIP_REGSET_SR4_F3_SHIFT))

#define  MIP_REGSET_SR4_F2_MASK 0xe
#define  MIP_REGSET_SR4_F2_SHIFT 1
#define  MIP_REGSET_SR4_F2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR4_F2_MASK) >> MIP_REGSET_SR4_F2_SHIFT)
#define  MIP_REGSET_SR4_F2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR4_F2_MASK) | (((uint32_t)val) << MIP_REGSET_SR4_F2_SHIFT))

#define  MIP_REGSET_SR4_F1_MASK 0x1
#define  MIP_REGSET_SR4_F1_SHIFT 0
#define  MIP_REGSET_SR4_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR4_F1_MASK) >> MIP_REGSET_SR4_F1_SHIFT)
#define  MIP_REGSET_SR4_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR4_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR4_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register5 (SR5)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR5_RESERVED1_MASK 0xc0000000
#define  MIP_REGSET_SR5_RESERVED1_SHIFT 30
#define  MIP_REGSET_SR5_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR5_RESERVED1_MASK) >> MIP_REGSET_SR5_RESERVED1_SHIFT)
#define  MIP_REGSET_SR5_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR5_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR5_RESERVED1_SHIFT))

#define  MIP_REGSET_SR5_F1_MASK 0x3fffffff
#define  MIP_REGSET_SR5_F1_SHIFT 0
#define  MIP_REGSET_SR5_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR5_F1_MASK) >> MIP_REGSET_SR5_F1_SHIFT)
#define  MIP_REGSET_SR5_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR5_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR5_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register6 (SR6)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR6_RESERVED1_MASK 0xfffffff0
#define  MIP_REGSET_SR6_RESERVED1_SHIFT 4
#define  MIP_REGSET_SR6_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR6_RESERVED1_MASK) >> MIP_REGSET_SR6_RESERVED1_SHIFT)
#define  MIP_REGSET_SR6_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR6_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR6_RESERVED1_SHIFT))

#define  MIP_REGSET_SR6_F1_MASK 0xf
#define  MIP_REGSET_SR6_F1_SHIFT 0
#define  MIP_REGSET_SR6_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR6_F1_MASK) >> MIP_REGSET_SR6_F1_SHIFT)
#define  MIP_REGSET_SR6_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR6_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR6_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register7 (SR7)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR7_RESERVED1_MASK 0xfffffff0
#define  MIP_REGSET_SR7_RESERVED1_SHIFT 4
#define  MIP_REGSET_SR7_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR7_RESERVED1_MASK) >> MIP_REGSET_SR7_RESERVED1_SHIFT)
#define  MIP_REGSET_SR7_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR7_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR7_RESERVED1_SHIFT))

#define  MIP_REGSET_SR7_F1_MASK 0xf
#define  MIP_REGSET_SR7_F1_SHIFT 0
#define  MIP_REGSET_SR7_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR7_F1_MASK) >> MIP_REGSET_SR7_F1_SHIFT)
#define  MIP_REGSET_SR7_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR7_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR7_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register8 (SR8)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR8_RESERVED1_MASK 0xffff0000
#define  MIP_REGSET_SR8_RESERVED1_SHIFT 16
#define  MIP_REGSET_SR8_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR8_RESERVED1_MASK) >> MIP_REGSET_SR8_RESERVED1_SHIFT)
#define  MIP_REGSET_SR8_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR8_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR8_RESERVED1_SHIFT))

#define  MIP_REGSET_SR8_F1_MASK 0xffff
#define  MIP_REGSET_SR8_F1_SHIFT 0
#define  MIP_REGSET_SR8_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR8_F1_MASK) >> MIP_REGSET_SR8_F1_SHIFT)
#define  MIP_REGSET_SR8_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR8_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR8_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register9 (SR9)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR9_RESERVED1_MASK 0xffff0000
#define  MIP_REGSET_SR9_RESERVED1_SHIFT 16
#define  MIP_REGSET_SR9_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR9_RESERVED1_MASK) >> MIP_REGSET_SR9_RESERVED1_SHIFT)
#define  MIP_REGSET_SR9_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR9_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR9_RESERVED1_SHIFT))

#define  MIP_REGSET_SR9_F1_MASK 0xffff
#define  MIP_REGSET_SR9_F1_SHIFT 0
#define  MIP_REGSET_SR9_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR9_F1_MASK) >> MIP_REGSET_SR9_F1_SHIFT)
#define  MIP_REGSET_SR9_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR9_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR9_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register10 (SR10)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR10_RESERVED1_MASK 0xfffffff0
#define  MIP_REGSET_SR10_RESERVED1_SHIFT 4
#define  MIP_REGSET_SR10_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR10_RESERVED1_MASK) >> MIP_REGSET_SR10_RESERVED1_SHIFT)
#define  MIP_REGSET_SR10_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR10_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR10_RESERVED1_SHIFT))

#define  MIP_REGSET_SR10_F1_MASK 0xf
#define  MIP_REGSET_SR10_F1_SHIFT 0
#define  MIP_REGSET_SR10_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR10_F1_MASK) >> MIP_REGSET_SR10_F1_SHIFT)
#define  MIP_REGSET_SR10_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR10_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR10_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register11 (SR11)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR11_RESERVED1_MASK 0xfffffc00
#define  MIP_REGSET_SR11_RESERVED1_SHIFT 10
#define  MIP_REGSET_SR11_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR11_RESERVED1_MASK) >> MIP_REGSET_SR11_RESERVED1_SHIFT)
#define  MIP_REGSET_SR11_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR11_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR11_RESERVED1_SHIFT))

#define  MIP_REGSET_SR11_F1_MASK 0x3ff
#define  MIP_REGSET_SR11_F1_SHIFT 0
#define  MIP_REGSET_SR11_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR11_F1_MASK) >> MIP_REGSET_SR11_F1_SHIFT)
#define  MIP_REGSET_SR11_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR11_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR11_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register12 (SR12)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR12_RESERVED1_MASK 0xfffffc00
#define  MIP_REGSET_SR12_RESERVED1_SHIFT 10
#define  MIP_REGSET_SR12_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR12_RESERVED1_MASK) >> MIP_REGSET_SR12_RESERVED1_SHIFT)
#define  MIP_REGSET_SR12_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR12_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR12_RESERVED1_SHIFT))

#define  MIP_REGSET_SR12_F1_MASK 0x3ff
#define  MIP_REGSET_SR12_F1_SHIFT 0
#define  MIP_REGSET_SR12_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR12_F1_MASK) >> MIP_REGSET_SR12_F1_SHIFT)
#define  MIP_REGSET_SR12_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR12_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR12_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register13 (SR13)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR13_RESERVED1_MASK 0xfffffff0
#define  MIP_REGSET_SR13_RESERVED1_SHIFT 4
#define  MIP_REGSET_SR13_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR13_RESERVED1_MASK) >> MIP_REGSET_SR13_RESERVED1_SHIFT)
#define  MIP_REGSET_SR13_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR13_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR13_RESERVED1_SHIFT))

#define  MIP_REGSET_SR13_F1_MASK 0xf
#define  MIP_REGSET_SR13_F1_SHIFT 0
#define  MIP_REGSET_SR13_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR13_F1_MASK) >> MIP_REGSET_SR13_F1_SHIFT)
#define  MIP_REGSET_SR13_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR13_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR13_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register14 (SR14)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR14_RESERVED1_MASK 0xfffffff8
#define  MIP_REGSET_SR14_RESERVED1_SHIFT 3
#define  MIP_REGSET_SR14_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR14_RESERVED1_MASK) >> MIP_REGSET_SR14_RESERVED1_SHIFT)
#define  MIP_REGSET_SR14_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR14_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR14_RESERVED1_SHIFT))

#define  MIP_REGSET_SR14_F1_MASK 0x7
#define  MIP_REGSET_SR14_F1_SHIFT 0
#define  MIP_REGSET_SR14_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR14_F1_MASK) >> MIP_REGSET_SR14_F1_SHIFT)
#define  MIP_REGSET_SR14_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR14_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR14_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register15 (SR15)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR15_F1_MASK 0xffffffff
#define  MIP_REGSET_SR15_F1_SHIFT 0
#define  MIP_REGSET_SR15_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR15_F1_MASK) >> MIP_REGSET_SR15_F1_SHIFT)
#define  MIP_REGSET_SR15_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR15_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR15_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register16 (SR16)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR16_RESERVED1_MASK 0xfffffff0
#define  MIP_REGSET_SR16_RESERVED1_SHIFT 4
#define  MIP_REGSET_SR16_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR16_RESERVED1_MASK) >> MIP_REGSET_SR16_RESERVED1_SHIFT)
#define  MIP_REGSET_SR16_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR16_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR16_RESERVED1_SHIFT))

#define  MIP_REGSET_SR16_F2_MASK 0xe
#define  MIP_REGSET_SR16_F2_SHIFT 1
#define  MIP_REGSET_SR16_F2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR16_F2_MASK) >> MIP_REGSET_SR16_F2_SHIFT)
#define  MIP_REGSET_SR16_F2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR16_F2_MASK) | (((uint32_t)val) << MIP_REGSET_SR16_F2_SHIFT))

#define  MIP_REGSET_SR16_F1_MASK 0x1
#define  MIP_REGSET_SR16_F1_SHIFT 0
#define  MIP_REGSET_SR16_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR16_F1_MASK) >> MIP_REGSET_SR16_F1_SHIFT)
#define  MIP_REGSET_SR16_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR16_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR16_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register17 (SR17)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR17_RESERVED1_MASK 0xfffffff8
#define  MIP_REGSET_SR17_RESERVED1_SHIFT 3
#define  MIP_REGSET_SR17_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR17_RESERVED1_MASK) >> MIP_REGSET_SR17_RESERVED1_SHIFT)
#define  MIP_REGSET_SR17_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR17_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR17_RESERVED1_SHIFT))

#define  MIP_REGSET_SR17_F1_MASK 0x7
#define  MIP_REGSET_SR17_F1_SHIFT 0
#define  MIP_REGSET_SR17_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR17_F1_MASK) >> MIP_REGSET_SR17_F1_SHIFT)
#define  MIP_REGSET_SR17_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR17_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR17_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register18 (SR18)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR18_F1_MASK 0xffffffff
#define  MIP_REGSET_SR18_F1_SHIFT 0
#define  MIP_REGSET_SR18_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR18_F1_MASK) >> MIP_REGSET_SR18_F1_SHIFT)
#define  MIP_REGSET_SR18_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR18_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR18_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register19 (SR19)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR19_F1_MASK 0xffffffff
#define  MIP_REGSET_SR19_F1_SHIFT 0
#define  MIP_REGSET_SR19_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR19_F1_MASK) >> MIP_REGSET_SR19_F1_SHIFT)
#define  MIP_REGSET_SR19_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR19_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR19_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register20 (SR20)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR20_F1_MASK 0xffffffff
#define  MIP_REGSET_SR20_F1_SHIFT 0
#define  MIP_REGSET_SR20_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR20_F1_MASK) >> MIP_REGSET_SR20_F1_SHIFT)
#define  MIP_REGSET_SR20_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR20_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR20_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register21 (SR21)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR21_F1_MASK 0xffffffff
#define  MIP_REGSET_SR21_F1_SHIFT 0
#define  MIP_REGSET_SR21_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR21_F1_MASK) >> MIP_REGSET_SR21_F1_SHIFT)
#define  MIP_REGSET_SR21_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR21_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR21_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register22 (SR22)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR22_RESERVED1_MASK 0xfffffe00
#define  MIP_REGSET_SR22_RESERVED1_SHIFT 9
#define  MIP_REGSET_SR22_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR22_RESERVED1_MASK) >> MIP_REGSET_SR22_RESERVED1_SHIFT)
#define  MIP_REGSET_SR22_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR22_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR22_RESERVED1_SHIFT))

#define  MIP_REGSET_SR22_F4_MASK 0x1f0
#define  MIP_REGSET_SR22_F4_SHIFT 4
#define  MIP_REGSET_SR22_F4_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR22_F4_MASK) >> MIP_REGSET_SR22_F4_SHIFT)
#define  MIP_REGSET_SR22_F4_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR22_F4_MASK) | (((uint32_t)val) << MIP_REGSET_SR22_F4_SHIFT))

#define  MIP_REGSET_SR22_F3_MASK 0xc
#define  MIP_REGSET_SR22_F3_SHIFT 2
#define  MIP_REGSET_SR22_F3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR22_F3_MASK) >> MIP_REGSET_SR22_F3_SHIFT)
#define  MIP_REGSET_SR22_F3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR22_F3_MASK) | (((uint32_t)val) << MIP_REGSET_SR22_F3_SHIFT))

#define  MIP_REGSET_SR22_F2_MASK 0x2
#define  MIP_REGSET_SR22_F2_SHIFT 1
#define  MIP_REGSET_SR22_F2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR22_F2_MASK) >> MIP_REGSET_SR22_F2_SHIFT)
#define  MIP_REGSET_SR22_F2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR22_F2_MASK) | (((uint32_t)val) << MIP_REGSET_SR22_F2_SHIFT))

#define  MIP_REGSET_SR22_F1_MASK 0x1
#define  MIP_REGSET_SR22_F1_SHIFT 0
#define  MIP_REGSET_SR22_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR22_F1_MASK) >> MIP_REGSET_SR22_F1_SHIFT)
#define  MIP_REGSET_SR22_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR22_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR22_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register23 (SR23)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR23_RESERVED1_MASK 0xffffff00
#define  MIP_REGSET_SR23_RESERVED1_SHIFT 8
#define  MIP_REGSET_SR23_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR23_RESERVED1_MASK) >> MIP_REGSET_SR23_RESERVED1_SHIFT)
#define  MIP_REGSET_SR23_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR23_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR23_RESERVED1_SHIFT))

#define  MIP_REGSET_SR23_F3_MASK 0xf8
#define  MIP_REGSET_SR23_F3_SHIFT 3
#define  MIP_REGSET_SR23_F3_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR23_F3_MASK) >> MIP_REGSET_SR23_F3_SHIFT)
#define  MIP_REGSET_SR23_F3_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR23_F3_MASK) | (((uint32_t)val) << MIP_REGSET_SR23_F3_SHIFT))

#define  MIP_REGSET_SR23_F2_MASK 0x6
#define  MIP_REGSET_SR23_F2_SHIFT 1
#define  MIP_REGSET_SR23_F2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR23_F2_MASK) >> MIP_REGSET_SR23_F2_SHIFT)
#define  MIP_REGSET_SR23_F2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR23_F2_MASK) | (((uint32_t)val) << MIP_REGSET_SR23_F2_SHIFT))

#define  MIP_REGSET_SR23_F1_MASK 0x1
#define  MIP_REGSET_SR23_F1_SHIFT 0
#define  MIP_REGSET_SR23_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR23_F1_MASK) >> MIP_REGSET_SR23_F1_SHIFT)
#define  MIP_REGSET_SR23_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR23_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR23_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register24 (SR24)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR24_RESERVED1_MASK 0xffffff80
#define  MIP_REGSET_SR24_RESERVED1_SHIFT 7
#define  MIP_REGSET_SR24_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR24_RESERVED1_MASK) >> MIP_REGSET_SR24_RESERVED1_SHIFT)
#define  MIP_REGSET_SR24_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR24_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR24_RESERVED1_SHIFT))

#define  MIP_REGSET_SR24_F2_MASK 0x78
#define  MIP_REGSET_SR24_F2_SHIFT 3
#define  MIP_REGSET_SR24_F2_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR24_F2_MASK) >> MIP_REGSET_SR24_F2_SHIFT)
#define  MIP_REGSET_SR24_F2_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR24_F2_MASK) | (((uint32_t)val) << MIP_REGSET_SR24_F2_SHIFT))

#define  MIP_REGSET_SR24_F1_MASK 0x7
#define  MIP_REGSET_SR24_F1_SHIFT 0
#define  MIP_REGSET_SR24_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR24_F1_MASK) >> MIP_REGSET_SR24_F1_SHIFT)
#define  MIP_REGSET_SR24_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR24_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR24_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register25 (SR25)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR25_F1_MASK 0xffffffff
#define  MIP_REGSET_SR25_F1_SHIFT 0
#define  MIP_REGSET_SR25_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR25_F1_MASK) >> MIP_REGSET_SR25_F1_SHIFT)
#define  MIP_REGSET_SR25_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR25_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR25_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register26 (SR26)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR26_F1_MASK 0xffffffff
#define  MIP_REGSET_SR26_F1_SHIFT 0
#define  MIP_REGSET_SR26_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR26_F1_MASK) >> MIP_REGSET_SR26_F1_SHIFT)
#define  MIP_REGSET_SR26_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR26_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR26_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register27 (SR27)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR27_F1_MASK 0xffffffff
#define  MIP_REGSET_SR27_F1_SHIFT 0
#define  MIP_REGSET_SR27_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR27_F1_MASK) >> MIP_REGSET_SR27_F1_SHIFT)
#define  MIP_REGSET_SR27_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR27_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR27_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register28 (SR28)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR28_F1_MASK 0xffffffff
#define  MIP_REGSET_SR28_F1_SHIFT 0
#define  MIP_REGSET_SR28_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR28_F1_MASK) >> MIP_REGSET_SR28_F1_SHIFT)
#define  MIP_REGSET_SR28_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR28_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR28_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register29 (SR29)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR29_F1_MASK 0xffffffff
#define  MIP_REGSET_SR29_F1_SHIFT 0
#define  MIP_REGSET_SR29_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR29_F1_MASK) >> MIP_REGSET_SR29_F1_SHIFT)
#define  MIP_REGSET_SR29_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR29_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR29_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register30 (SR30)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR30_F1_MASK 0xffffffff
#define  MIP_REGSET_SR30_F1_SHIFT 0
#define  MIP_REGSET_SR30_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR30_F1_MASK) >> MIP_REGSET_SR30_F1_SHIFT)
#define  MIP_REGSET_SR30_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR30_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR30_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register31 (SR31)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR31_F1_MASK 0xffffffff
#define  MIP_REGSET_SR31_F1_SHIFT 0
#define  MIP_REGSET_SR31_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR31_F1_MASK) >> MIP_REGSET_SR31_F1_SHIFT)
#define  MIP_REGSET_SR31_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR31_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR31_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register32 (SR32)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR32_F1_MASK 0xffffffff
#define  MIP_REGSET_SR32_F1_SHIFT 0
#define  MIP_REGSET_SR32_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR32_F1_MASK) >> MIP_REGSET_SR32_F1_SHIFT)
#define  MIP_REGSET_SR32_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR32_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR32_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register33 (SR33)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR33_F1_MASK 0xffffffff
#define  MIP_REGSET_SR33_F1_SHIFT 0
#define  MIP_REGSET_SR33_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR33_F1_MASK) >> MIP_REGSET_SR33_F1_SHIFT)
#define  MIP_REGSET_SR33_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR33_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR33_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register34 (SR34)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR34_RESERVED1_MASK 0xfffffff8
#define  MIP_REGSET_SR34_RESERVED1_SHIFT 3
#define  MIP_REGSET_SR34_RESERVED1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR34_RESERVED1_MASK) >> MIP_REGSET_SR34_RESERVED1_SHIFT)
#define  MIP_REGSET_SR34_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR34_RESERVED1_MASK) | (((uint32_t)val) << MIP_REGSET_SR34_RESERVED1_SHIFT))

#define  MIP_REGSET_SR34_F1_MASK 0x7
#define  MIP_REGSET_SR34_F1_SHIFT 0
#define  MIP_REGSET_SR34_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR34_F1_MASK) >> MIP_REGSET_SR34_F1_SHIFT)
#define  MIP_REGSET_SR34_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR34_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR34_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register35 (SR35)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR35_F1_MASK 0xffffffff
#define  MIP_REGSET_SR35_F1_SHIFT 0
#define  MIP_REGSET_SR35_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR35_F1_MASK) >> MIP_REGSET_SR35_F1_SHIFT)
#define  MIP_REGSET_SR35_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR35_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR35_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register36 (SR36)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR36_F1_MASK 0xffffffff
#define  MIP_REGSET_SR36_F1_SHIFT 0
#define  MIP_REGSET_SR36_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR36_F1_MASK) >> MIP_REGSET_SR36_F1_SHIFT)
#define  MIP_REGSET_SR36_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR36_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR36_F1_SHIFT))

//====================================================================
//Register: MIP Save-Restore Register37 (SR37)
/** \brief This register is used for MIP Save-restore Operation.*/
//====================================================================

#define  MIP_REGSET_SR37_F1_MASK 0xffffffff
#define  MIP_REGSET_SR37_F1_SHIFT 0
#define  MIP_REGSET_SR37_F1_MASK_SHIFT(reg) (((reg) & MIP_REGSET_SR37_F1_MASK) >> MIP_REGSET_SR37_F1_SHIFT)
#define  MIP_REGSET_SR37_F1_REPLACE_VAL(reg,val) (((reg) & ~MIP_REGSET_SR37_F1_MASK) | (((uint32_t)val) << MIP_REGSET_SR37_F1_SHIFT))

#endif // MIP_REGSET
