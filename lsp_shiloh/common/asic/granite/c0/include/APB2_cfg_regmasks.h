 /*
 **************************************************************************************
 *
 * Copyright (c) 2010 Marvell International, Ltd.
 *
 **************************************************************************************
 *
 * Marvell Commercial License Option
 *
 * If you received this File from Marvell as part of a proprietary software release,
 * the File is considered Marvell Proprietary and Confidential Information, and is
 * licensed to you under the terms of the applicable Commercial License.
 *
 **************************************************************************************
 *
 * Marvell GPL License Option
 *
 * If you received this File from Marvell as part of a Linux distribution, this File
 * is licensed to you in accordance with the terms and conditions of the General Public
 * License Version 2, June 1991 (the "GPL License").  You can redistribute it and/or
 * modify it under the terms of the GPL License; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GPL License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this
 * program.  If not, see http://www.gnu.org/licenses/.
 *
 **************************************************************************************
 *
 * \file APB2_cfg_regmasks.h
 * Generated using RegBuild 1.6.1
 *
 *************************************************************************
 */

#ifndef _APB2_TOP_REGMASKS_H_
#define _APB2_TOP_REGMASKS_H_

#include <stdint.h>

//====================================================================
//
//Register File: APB2 Top Control/Interrupt Registers (APB2_TOP)
/** \brief Register Descriptions for the APB2 Control and Interrupt block*/
//
//====================================================================

//====================================================================
//Register: APB2 Miscellaneous Control Register (rb4APB2MiscCtrl)
/** \brief Miscellaneous Control Register - Provides access to control bits for the various functions in the APB2 superblock*/
//====================================================================

#define  APB2_TOP_RB4APB2MISCCTRL_RESERVED1_MASK 0xffffffe0
#define  APB2_TOP_RB4APB2MISCCTRL_RESERVED1_SHIFT 5
#define  APB2_TOP_RB4APB2MISCCTRL_RESERVED1_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2MISCCTRL_RESERVED1_MASK) >> APB2_TOP_RB4APB2MISCCTRL_RESERVED1_SHIFT)
#define  APB2_TOP_RB4APB2MISCCTRL_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2MISCCTRL_RESERVED1_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2MISCCTRL_RESERVED1_SHIFT))

#define  APB2_TOP_RB4APB2MISCCTRL_ALTTESTOUT_CTRL_MASK 0x10
#define  APB2_TOP_RB4APB2MISCCTRL_ALTTESTOUT_CTRL_SHIFT 4
#define  APB2_TOP_RB4APB2MISCCTRL_ALTTESTOUT_CTRL_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2MISCCTRL_ALTTESTOUT_CTRL_MASK) >> APB2_TOP_RB4APB2MISCCTRL_ALTTESTOUT_CTRL_SHIFT)
#define  APB2_TOP_RB4APB2MISCCTRL_ALTTESTOUT_CTRL_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2MISCCTRL_ALTTESTOUT_CTRL_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2MISCCTRL_ALTTESTOUT_CTRL_SHIFT))

#define  APB2_TOP_RB4APB2MISCCTRL_RESERVED2_MASK 0xc
#define  APB2_TOP_RB4APB2MISCCTRL_RESERVED2_SHIFT 2
#define  APB2_TOP_RB4APB2MISCCTRL_RESERVED2_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2MISCCTRL_RESERVED2_MASK) >> APB2_TOP_RB4APB2MISCCTRL_RESERVED2_SHIFT)
#define  APB2_TOP_RB4APB2MISCCTRL_RESERVED2_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2MISCCTRL_RESERVED2_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2MISCCTRL_RESERVED2_SHIFT))

#define  APB2_TOP_RB4APB2MISCCTRL_URPP_UCLK_CTRL_MASK 0x3
#define  APB2_TOP_RB4APB2MISCCTRL_URPP_UCLK_CTRL_SHIFT 0
#define  APB2_TOP_RB4APB2MISCCTRL_URPP_UCLK_CTRL_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2MISCCTRL_URPP_UCLK_CTRL_MASK) >> APB2_TOP_RB4APB2MISCCTRL_URPP_UCLK_CTRL_SHIFT)
#define  APB2_TOP_RB4APB2MISCCTRL_URPP_UCLK_CTRL_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2MISCCTRL_URPP_UCLK_CTRL_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2MISCCTRL_URPP_UCLK_CTRL_SHIFT))

//====================================================================
//Register: APB2 Top Interrupt Enable Register (rb4APB2IrqEnb)
/** \brief Interrupt Enable Register - Provides an interrupt enable bit for each of the interrupt sources within the APB2 superblock*/
//====================================================================

#define  APB2_TOP_RB4APB2IRQENB_RESERVED1_MASK 0xffffffc0
#define  APB2_TOP_RB4APB2IRQENB_RESERVED1_SHIFT 6
#define  APB2_TOP_RB4APB2IRQENB_RESERVED1_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQENB_RESERVED1_MASK) >> APB2_TOP_RB4APB2IRQENB_RESERVED1_SHIFT)
#define  APB2_TOP_RB4APB2IRQENB_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQENB_RESERVED1_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQENB_RESERVED1_SHIFT))

#define  APB2_TOP_RB4APB2IRQENB_PPORT_MASK 0x20
#define  APB2_TOP_RB4APB2IRQENB_PPORT_SHIFT 5
#define  APB2_TOP_RB4APB2IRQENB_PPORT_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQENB_PPORT_MASK) >> APB2_TOP_RB4APB2IRQENB_PPORT_SHIFT)
#define  APB2_TOP_RB4APB2IRQENB_PPORT_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQENB_PPORT_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQENB_PPORT_SHIFT))

#define  APB2_TOP_RB4APB2IRQENB_SPU_MASK 0x10
#define  APB2_TOP_RB4APB2IRQENB_SPU_SHIFT 4
#define  APB2_TOP_RB4APB2IRQENB_SPU_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQENB_SPU_MASK) >> APB2_TOP_RB4APB2IRQENB_SPU_SHIFT)
#define  APB2_TOP_RB4APB2IRQENB_SPU_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQENB_SPU_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQENB_SPU_SHIFT))

#define  APB2_TOP_RB4APB2IRQENB_PEN_MASK 0x8
#define  APB2_TOP_RB4APB2IRQENB_PEN_SHIFT 3
#define  APB2_TOP_RB4APB2IRQENB_PEN_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQENB_PEN_MASK) >> APB2_TOP_RB4APB2IRQENB_PEN_SHIFT)
#define  APB2_TOP_RB4APB2IRQENB_PEN_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQENB_PEN_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQENB_PEN_SHIFT))

#define  APB2_TOP_RB4APB2IRQENB_URPP_MASK 0x4
#define  APB2_TOP_RB4APB2IRQENB_URPP_SHIFT 2
#define  APB2_TOP_RB4APB2IRQENB_URPP_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQENB_URPP_MASK) >> APB2_TOP_RB4APB2IRQENB_URPP_SHIFT)
#define  APB2_TOP_RB4APB2IRQENB_URPP_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQENB_URPP_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQENB_URPP_SHIFT))

#define  APB2_TOP_RB4APB2IRQENB_EI_MASK 0x2
#define  APB2_TOP_RB4APB2IRQENB_EI_SHIFT 1
#define  APB2_TOP_RB4APB2IRQENB_EI_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQENB_EI_MASK) >> APB2_TOP_RB4APB2IRQENB_EI_SHIFT)
#define  APB2_TOP_RB4APB2IRQENB_EI_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQENB_EI_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQENB_EI_SHIFT))

#define  APB2_TOP_RB4APB2IRQENB_SAP_MASK 0x1
#define  APB2_TOP_RB4APB2IRQENB_SAP_SHIFT 0
#define  APB2_TOP_RB4APB2IRQENB_SAP_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQENB_SAP_MASK) >> APB2_TOP_RB4APB2IRQENB_SAP_SHIFT)
#define  APB2_TOP_RB4APB2IRQENB_SAP_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQENB_SAP_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQENB_SAP_SHIFT))

//====================================================================
//Register: APB2 Top Interrupt Pending Register (rb4APB2IrqPnd)
/** \brief Interrupt Pending Register - Provides state of the pending bit for each of the interrupt sources in the APB2 superblock*/
//====================================================================

#define  APB2_TOP_RB4APB2IRQPND_RESERVED1_MASK 0xffffffc0
#define  APB2_TOP_RB4APB2IRQPND_RESERVED1_SHIFT 6
#define  APB2_TOP_RB4APB2IRQPND_RESERVED1_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQPND_RESERVED1_MASK) >> APB2_TOP_RB4APB2IRQPND_RESERVED1_SHIFT)
#define  APB2_TOP_RB4APB2IRQPND_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQPND_RESERVED1_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQPND_RESERVED1_SHIFT))

#define  APB2_TOP_RB4APB2IRQPND_PPORT_MASK 0x20
#define  APB2_TOP_RB4APB2IRQPND_PPORT_SHIFT 5
#define  APB2_TOP_RB4APB2IRQPND_PPORT_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQPND_PPORT_MASK) >> APB2_TOP_RB4APB2IRQPND_PPORT_SHIFT)
#define  APB2_TOP_RB4APB2IRQPND_PPORT_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQPND_PPORT_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQPND_PPORT_SHIFT))

#define  APB2_TOP_RB4APB2IRQPND_SPU_MASK 0x10
#define  APB2_TOP_RB4APB2IRQPND_SPU_SHIFT 4
#define  APB2_TOP_RB4APB2IRQPND_SPU_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQPND_SPU_MASK) >> APB2_TOP_RB4APB2IRQPND_SPU_SHIFT)
#define  APB2_TOP_RB4APB2IRQPND_SPU_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQPND_SPU_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQPND_SPU_SHIFT))

#define  APB2_TOP_RB4APB2IRQPND_PEN_MASK 0x8
#define  APB2_TOP_RB4APB2IRQPND_PEN_SHIFT 3
#define  APB2_TOP_RB4APB2IRQPND_PEN_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQPND_PEN_MASK) >> APB2_TOP_RB4APB2IRQPND_PEN_SHIFT)
#define  APB2_TOP_RB4APB2IRQPND_PEN_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQPND_PEN_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQPND_PEN_SHIFT))

#define  APB2_TOP_RB4APB2IRQPND_URPP_MASK 0x4
#define  APB2_TOP_RB4APB2IRQPND_URPP_SHIFT 2
#define  APB2_TOP_RB4APB2IRQPND_URPP_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQPND_URPP_MASK) >> APB2_TOP_RB4APB2IRQPND_URPP_SHIFT)
#define  APB2_TOP_RB4APB2IRQPND_URPP_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQPND_URPP_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQPND_URPP_SHIFT))

#define  APB2_TOP_RB4APB2IRQPND_EI_MASK 0x2
#define  APB2_TOP_RB4APB2IRQPND_EI_SHIFT 1
#define  APB2_TOP_RB4APB2IRQPND_EI_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQPND_EI_MASK) >> APB2_TOP_RB4APB2IRQPND_EI_SHIFT)
#define  APB2_TOP_RB4APB2IRQPND_EI_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQPND_EI_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQPND_EI_SHIFT))

#define  APB2_TOP_RB4APB2IRQPND_SAP_MASK 0x1
#define  APB2_TOP_RB4APB2IRQPND_SAP_SHIFT 0
#define  APB2_TOP_RB4APB2IRQPND_SAP_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQPND_SAP_MASK) >> APB2_TOP_RB4APB2IRQPND_SAP_SHIFT)
#define  APB2_TOP_RB4APB2IRQPND_SAP_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQPND_SAP_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQPND_SAP_SHIFT))

//====================================================================
//Register: APB2 Top Interrupt Acknowledge Register (rb4APB2IrqAck)
/** \brief Interrupt Acknowledge Register - Assert acknowledge bit to each of the interrupt sources in the APB2 superblock*/
//====================================================================

#define  APB2_TOP_RB4APB2IRQACK_RESERVED1_MASK 0xffffffc0
#define  APB2_TOP_RB4APB2IRQACK_RESERVED1_SHIFT 6
#define  APB2_TOP_RB4APB2IRQACK_RESERVED1_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQACK_RESERVED1_MASK) >> APB2_TOP_RB4APB2IRQACK_RESERVED1_SHIFT)
#define  APB2_TOP_RB4APB2IRQACK_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQACK_RESERVED1_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQACK_RESERVED1_SHIFT))

#define  APB2_TOP_RB4APB2IRQACK_PPORT_MASK 0x20
#define  APB2_TOP_RB4APB2IRQACK_PPORT_SHIFT 5
#define  APB2_TOP_RB4APB2IRQACK_PPORT_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQACK_PPORT_MASK) >> APB2_TOP_RB4APB2IRQACK_PPORT_SHIFT)
#define  APB2_TOP_RB4APB2IRQACK_PPORT_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQACK_PPORT_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQACK_PPORT_SHIFT))

#define  APB2_TOP_RB4APB2IRQACK_SPU_MASK 0x10
#define  APB2_TOP_RB4APB2IRQACK_SPU_SHIFT 4
#define  APB2_TOP_RB4APB2IRQACK_SPU_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQACK_SPU_MASK) >> APB2_TOP_RB4APB2IRQACK_SPU_SHIFT)
#define  APB2_TOP_RB4APB2IRQACK_SPU_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQACK_SPU_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQACK_SPU_SHIFT))

#define  APB2_TOP_RB4APB2IRQACK_PEN_MASK 0x8
#define  APB2_TOP_RB4APB2IRQACK_PEN_SHIFT 3
#define  APB2_TOP_RB4APB2IRQACK_PEN_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQACK_PEN_MASK) >> APB2_TOP_RB4APB2IRQACK_PEN_SHIFT)
#define  APB2_TOP_RB4APB2IRQACK_PEN_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQACK_PEN_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQACK_PEN_SHIFT))

#define  APB2_TOP_RB4APB2IRQACK_URPP_MASK 0x4
#define  APB2_TOP_RB4APB2IRQACK_URPP_SHIFT 2
#define  APB2_TOP_RB4APB2IRQACK_URPP_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQACK_URPP_MASK) >> APB2_TOP_RB4APB2IRQACK_URPP_SHIFT)
#define  APB2_TOP_RB4APB2IRQACK_URPP_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQACK_URPP_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQACK_URPP_SHIFT))

#define  APB2_TOP_RB4APB2IRQACK_EI_MASK 0x2
#define  APB2_TOP_RB4APB2IRQACK_EI_SHIFT 1
#define  APB2_TOP_RB4APB2IRQACK_EI_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQACK_EI_MASK) >> APB2_TOP_RB4APB2IRQACK_EI_SHIFT)
#define  APB2_TOP_RB4APB2IRQACK_EI_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQACK_EI_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQACK_EI_SHIFT))

#define  APB2_TOP_RB4APB2IRQACK_SAP_MASK 0x1
#define  APB2_TOP_RB4APB2IRQACK_SAP_SHIFT 0
#define  APB2_TOP_RB4APB2IRQACK_SAP_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQACK_SAP_MASK) >> APB2_TOP_RB4APB2IRQACK_SAP_SHIFT)
#define  APB2_TOP_RB4APB2IRQACK_SAP_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQACK_SAP_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQACK_SAP_SHIFT))

//====================================================================
//Register: APB2 Top Interrupt Acknowledge Register (rb4APB2IrqForce)
/** \brief Interrupt Force Register - Force an interrupt for each of the sources in the APB2 superblock*/
//====================================================================

#define  APB2_TOP_RB4APB2IRQFORCE_RESERVED1_MASK 0xffffffc0
#define  APB2_TOP_RB4APB2IRQFORCE_RESERVED1_SHIFT 6
#define  APB2_TOP_RB4APB2IRQFORCE_RESERVED1_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQFORCE_RESERVED1_MASK) >> APB2_TOP_RB4APB2IRQFORCE_RESERVED1_SHIFT)
#define  APB2_TOP_RB4APB2IRQFORCE_RESERVED1_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQFORCE_RESERVED1_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQFORCE_RESERVED1_SHIFT))

#define  APB2_TOP_RB4APB2IRQFORCE_PPORT_MASK 0x20
#define  APB2_TOP_RB4APB2IRQFORCE_PPORT_SHIFT 5
#define  APB2_TOP_RB4APB2IRQFORCE_PPORT_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQFORCE_PPORT_MASK) >> APB2_TOP_RB4APB2IRQFORCE_PPORT_SHIFT)
#define  APB2_TOP_RB4APB2IRQFORCE_PPORT_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQFORCE_PPORT_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQFORCE_PPORT_SHIFT))

#define  APB2_TOP_RB4APB2IRQFORCE_SPU_MASK 0x10
#define  APB2_TOP_RB4APB2IRQFORCE_SPU_SHIFT 4
#define  APB2_TOP_RB4APB2IRQFORCE_SPU_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQFORCE_SPU_MASK) >> APB2_TOP_RB4APB2IRQFORCE_SPU_SHIFT)
#define  APB2_TOP_RB4APB2IRQFORCE_SPU_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQFORCE_SPU_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQFORCE_SPU_SHIFT))

#define  APB2_TOP_RB4APB2IRQFORCE_PEN_MASK 0x8
#define  APB2_TOP_RB4APB2IRQFORCE_PEN_SHIFT 3
#define  APB2_TOP_RB4APB2IRQFORCE_PEN_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQFORCE_PEN_MASK) >> APB2_TOP_RB4APB2IRQFORCE_PEN_SHIFT)
#define  APB2_TOP_RB4APB2IRQFORCE_PEN_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQFORCE_PEN_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQFORCE_PEN_SHIFT))

#define  APB2_TOP_RB4APB2IRQFORCE_URPP_MASK 0x4
#define  APB2_TOP_RB4APB2IRQFORCE_URPP_SHIFT 2
#define  APB2_TOP_RB4APB2IRQFORCE_URPP_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQFORCE_URPP_MASK) >> APB2_TOP_RB4APB2IRQFORCE_URPP_SHIFT)
#define  APB2_TOP_RB4APB2IRQFORCE_URPP_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQFORCE_URPP_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQFORCE_URPP_SHIFT))

#define  APB2_TOP_RB4APB2IRQFORCE_EI_MASK 0x2
#define  APB2_TOP_RB4APB2IRQFORCE_EI_SHIFT 1
#define  APB2_TOP_RB4APB2IRQFORCE_EI_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQFORCE_EI_MASK) >> APB2_TOP_RB4APB2IRQFORCE_EI_SHIFT)
#define  APB2_TOP_RB4APB2IRQFORCE_EI_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQFORCE_EI_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQFORCE_EI_SHIFT))

#define  APB2_TOP_RB4APB2IRQFORCE_SAP_MASK 0x1
#define  APB2_TOP_RB4APB2IRQFORCE_SAP_SHIFT 0
#define  APB2_TOP_RB4APB2IRQFORCE_SAP_MASK_SHIFT(reg) (((reg) & APB2_TOP_RB4APB2IRQFORCE_SAP_MASK) >> APB2_TOP_RB4APB2IRQFORCE_SAP_SHIFT)
#define  APB2_TOP_RB4APB2IRQFORCE_SAP_REPLACE_VAL(reg,val) (((reg) & ~APB2_TOP_RB4APB2IRQFORCE_SAP_MASK) | (((uint32_t)val) << APB2_TOP_RB4APB2IRQFORCE_SAP_SHIFT))

#endif // APB2_TOP
