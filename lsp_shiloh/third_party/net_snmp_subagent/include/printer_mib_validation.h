/*
 * ============================================================================
 * Copyright (c) 2012   Marvell International, Ltd. All Rights Reserved
 *
 *                         Marvell Confidential
 * ============================================================================
 *
 * Net-SNMP Sub-Agent
 * Printer MIB Validation Header
 *
 * based on an auto-generated file from Printer-MIB by mib2c
 * using mib2c.array-user.conf (15997 2007-03-25 22:28:35Z dts12)
 */


#ifndef PRINTER_MIB_VALIDATION_H
#define PRINTER_MIB_VALIDATION_H

#ifdef __cplusplus
extern "C" {
#endif


#define IS_0TO31(x)             (((int) (x)) > -1 && (x) <  32)
#define IS_0TO32(x)             (((int) (x)) > -1 && (x) <  33)
#define IS_0TO63(x)             (((int) (x)) > -1 && (x) <  64)
#define IS_0TO127(x)            (((int) (x)) > -1 && (x) <  128)
#define IS_0TO255(x)            (((int) (x)) > -1 && (x) <  256)
#define IS_NEG1TO7FFFFFFF(x)    (((int) (x)) > -2 && (x) <= 0x7FFFFFFF)
#define IS_NEG2TO7FFFFFFF(x)    (((int) (x)) > -3 && (x) <= 0x7FFFFFFF)
#define IS_NEG3TO7FFFFFFF(x)    (((int) (x)) > -4 && (x) <= 0x7FFFFFFF)
#define IS_1TOFFFF(x)           (       (x)  >  0 && (x) <  0x10000)
#define IS_1TO7FFFFFFF(x)       (       (x)  >  0 && (x) <= 0x7FFFFFFF)
#define IS_1TOFFFFFFFF(x)       (       (x)  >  0 && (x) <= 0xFFFFFFFF)
#define IS_0TOFFFF(x)           (((int) (x)) > -1 && (x) <  0x10000)
#define IS_0TO7FFFFFFF(x)       (((int) (x)) > -1 && (x) <= 0x7FFFFFFF)
#define IS_0TOFFFFFFFF(x)       (       (x)  >= 0 && (x) <= 0xFFFFFFFF)
#define IS_2TO7FFFFFFF(x)       (       (x)  >  1 && (x) <= 0x7FFFFFFF)

int isIntPartOfList(int pValues[], int value);

#define IS_IANACHARSET_VALID(x) isIntPartOfList(IANACharset_values, (x))

typedef enum subUnitStatus_bits {
    /*
     * No bits set means that the sub-unit is available, online, idle,
     * has no alerts, and is at the intended state
     */
    SUBSTAT_UNAVAILABLE_ONREQUEST           =  1    /** 0000 0001 */,
    SUBSTAT_AVAILABLE_STANDBY               =  2    /** 0000 0010 */,
    SUBSTAT_UNAVAILABLE_BROKEN              =  3    /** 0000 0011 */,
    SUBSTAT_AVAILABLE_ACTIVE                =  4    /** 0000 0100 */,
    SUBSTAT_UNKNOWN                         =  5    /** 0000 0101 */,
    SUBSTAT_AVAILABLE_BUSY                  =  6    /** 0000 0110 */,
    SUBSTAT_NON_CRITICAL_ALERTS             =  8    /** 0000 1000 */,
    SUBSTAT_CRITICAL_ALERTS                 = 16    /** 0001 0000 */,
    SUBSTAT_OFF_LINE                        = 32    /** 0010 0000 */,
    SUBSTAT_TRANSITIONING_TO_INTENDED_STATE = 64    /** 0100 0000 */,
} SUBUNITSTATUS_BITS;

#define IS_SUBUNITSTATUS_VALID(x) ((x) >= 0 && (x) < 127)

typedef enum presentOnOff_code {
    PRESENTONOFF__LLIM = 0,
    PRESENTONOFF_OTHER = 1,
    PRESENTONOFF_ON = 3,
    PRESENTONOFF_OFF = 4,
    PRESENTONOFF_NOTPRESENT = 5,
    PRESENTONOFF__ULIM = 6,
} PRESENTONOFF_CODE;

#define IS_PRESENTONOFF_VALID(x) \
    ((x) > PRESENTONOFF__LLIM && (x) < PRESENTONOFF__ULIM)

typedef enum prtMediaUnit_code {
    PRTMEDIAUNIT__LLIM = 2,
    PRTMEDIAUNIT_TENTHOUSANDTHSOFINCHES = 3,
    PRTMEDIAUNIT_MICROMETERS = 4,
    PRTMEDIAUNIT__ULIM = 5,
} PRTMEDIAUNIT_CODE;

#define IS_PRTMEDIAUNIT_VALID(x) \
    ((x) > PRTMEDIAUNIT__LLIM && (x) < PRTMEDIAUNIT__ULIM)

extern int prtCapacityUnit_values[];

#define IS_PRTCAPACITYUNIT_VALID(x) \
    isIntPartOfList(prtCapacityUnit_values, (x))

typedef enum prtGeneralReset_code {
    PRTGENERALRESET_NOTRESETTING = 3,
    PRTGENERALRESET_CYCLERESET,
    PRTGENERALRESET_RESETTONVRAM,
    PRTGENERALRESET_RESETTOFACTORYDEFAULTS,
} PRTGENERALRESET_CODE;

#define IS_PRTGENERALRESET_VALID(x) \
                    ((x) >= PRTGENERALRESET_NOTRESETTING && \
                    (x) <= PRTGENERALRESET_RESETTOFACTORYDEFAULTS)

typedef enum prtConsoleDisable_code {
    PRTCONSOLEDISABLE_ENABLED = 3,
    PRTCONSOLEDISABLE_DISABLED,
} PRTCONSOLEDISABLE_CODE;

#define IS_PRTCONSOLEDISABLE_VALID(x) \
        ((x) >= PRTCONSOLEDISABLE_ENABLED && (x) <= PRTCONSOLEDISABLE_DISABLED)

typedef enum prtInputType_code {
    PRTINPUTTYPE__LLIM = 0,
    PRTINPUTTYPE_OTHER = 1,
    PRTINPUTTYPE_UNKNOWN = 2,
    PRTINPUTTYPE_SHEETFEEDAUTOREMOVABLETRAY = 3,
    PRTINPUTTYPE_SHEETFEEDAUTONONREMOVABLETRAY = 4,
    PRTINPUTTYPE_SHEETFEEDMANUAL = 5,
    PRTINPUTTYPE_CONTINUOUSROLL = 6,
    PRTINPUTTYPE_CONTINUOUSFANFOLD = 7,
    PRTINPUTTYPE__ULIM = 8,
} PRTINPUTTYPE_CODE;

#define IS_PRTINPUTTYPE_VALID(x) \
    ((x) > PRTINPUTTYPE__LLIM && (x) < PRTINPUTTYPE__ULIM)

#define IS_PRTMARKERCOUNTERUNIT_VALID(x) \
        isIntPartOfList(prtMarkerCounterUnit_values, (x))

typedef enum prtMarkerMarkTech_code {
    PRTMARKERMARKTECH__LLIM = 0,
    PRTMARKERMARKTECH_OTHER = 1,
    PRTMARKERMARKTECH_UNKNOWN = 2,
    PRTMARKERMARKTECH_ELECTROPHOTOGRAPHICLED = 3,
    PRTMARKERMARKTECH_ELECTROPHOTOGRAPHICLASER = 4,
    PRTMARKERMARKTECH_ELECTROPHOTOGRAPHICOTHER = 5,
    PRTMARKERMARKTECH_IMPACTMOVINGHEADDOTMATRIX9PIN = 6,
    PRTMARKERMARKTECH_IMPACTMOVINGHEADDOTMATRIX24PIN = 7,
    PRTMARKERMARKTECH_IMPACTMOVINGHEADDOTMATRIXOTHER = 8,
    PRTMARKERMARKTECH_IMPACTMOVINGHEADFULLYFORMED = 9,
    PRTMARKERMARKTECH_IMPACTBAND = 10,
    PRTMARKERMARKTECH_IMPACTOTHER = 11,
    PRTMARKERMARKTECH_INKJETAQUEOUS = 12,
    PRTMARKERMARKTECH_INKJETSOLID = 13,
    PRTMARKERMARKTECH_INKJETOTHER = 14,
    PRTMARKERMARKTECH_PEN = 15,
    PRTMARKERMARKTECH_THERMALTRANSFER = 16,
    PRTMARKERMARKTECH_THERMALSENSITIVE = 17,
    PRTMARKERMARKTECH_THERMALDIFFUSION = 18,
    PRTMARKERMARKTECH_THERMALOTHER = 19,
    PRTMARKERMARKTECH_ELECTROEROSION = 20,
    PRTMARKERMARKTECH_ELECTROSTATIC = 21,
    PRTMARKERMARKTECH_PHOTOGRAPHICMICROFICHE = 22,
    PRTMARKERMARKTECH_PHOTOGRAPHICIMAGESETTER = 23,
    PRTMARKERMARKTECH_PHOTOGRAPHICOTHER = 24,
    PRTMARKERMARKTECH_IONDEPOSITION = 25,
    PRTMARKERMARKTECH_EBEAM = 26,
    PRTMARKERMARKTECH_TYPESETTER = 27,
    PRTMARKERMARKTECH__ULIM = 28,
} PRTMARKERMARKTECH_CODE;

#define IS_PRTMARKERMARKTECH_VALID(x) \
    ((x) > PRTMARKERMARKTECH__LLIM && (x) < PRTMARKERMARKTECH__ULIM)

typedef enum prtMarkerAddressabilityUnit_code {
    PRTMARKERADDRESSABILITYUNIT__LLIM = 2,
    PRTMARKERADDRESSABILITYUNIT_TENTHOUSANDTHSOFINCHES = 3,
    PRTMARKERADDRESSABILITYUNIT_MICROMETERS = 4,
    PRTMARKERADDRESSABILITYUNIT__ULIM = 5,
} PRTMARKERADDRESSABILITYUNIT_CODE;

#define IS_PRTMARKERADDRESSABILITYUNIT_VALID(x) \
    ((x) > PRTMARKERADDRESSABILITYUNIT__LLIM && \
     (x) < PRTMARKERADDRESSABILITYUNIT__ULIM)

#define IS_PRTMARKERSUPPLIESCLASS_VALID(x) \
        isIntPartOfList(prtMarkerSuppliesClass_values, (x))

typedef enum prtMarkerSuppliesType_code {
    PRTMARKERSUPPLIESTYPE__LLIM = 0,
    PRTMARKERSUPPLIESTYPE_OTHER = 1,
    PRTMARKERSUPPLIESTYPE_UNKNOWN = 2,
    PRTMARKERSUPPLIESTYPE_TONER = 3,
    PRTMARKERSUPPLIESTYPE_WASTETONER = 4,
    PRTMARKERSUPPLIESTYPE_INK = 5,
    PRTMARKERSUPPLIESTYPE_INKCARTRIDGE = 6,
    PRTMARKERSUPPLIESTYPE_INKRIBBON = 7,
    PRTMARKERSUPPLIESTYPE_WASTEINK = 8,
    PRTMARKERSUPPLIESTYPE_OPC = 9,
    PRTMARKERSUPPLIESTYPE_DEVELOPER = 10,
    PRTMARKERSUPPLIESTYPE_FUSEROIL = 11,
    PRTMARKERSUPPLIESTYPE_SOLIDWAX = 12,
    PRTMARKERSUPPLIESTYPE_RIBBONWAX = 13,
    PRTMARKERSUPPLIESTYPE_WASTEWAX = 14,
    PRTMARKERSUPPLIESTYPE_FUSER = 15,
    PRTMARKERSUPPLIESTYPE_CORONAWIRE = 16,
    PRTMARKERSUPPLIESTYPE_FUSEROILWICK = 17,
    PRTMARKERSUPPLIESTYPE_CLEANERUNIT = 18,
    PRTMARKERSUPPLIESTYPE_FUSERCLEANINGPAD = 19,
    PRTMARKERSUPPLIESTYPE_TRANSFERUNIT = 20,
    PRTMARKERSUPPLIESTYPE_TONERCARTRIDGE = 21,
    PRTMARKERSUPPLIESTYPE_FUSEROILER = 22,
    PRTMARKERSUPPLIESTYPE_WATER = 23,
    PRTMARKERSUPPLIESTYPE_WASTEWATER = 24,
    PRTMARKERSUPPLIESTYPE_GLUEWATERADDITIVE = 25,
    PRTMARKERSUPPLIESTYPE_WASTEPAPER = 26,
    PRTMARKERSUPPLIESTYPE_BINDINGSUPPLY = 27,
    PRTMARKERSUPPLIESTYPE_BANDINGSUPPLY = 28,
    PRTMARKERSUPPLIESTYPE_STITCHINGWIRE = 29,
    PRTMARKERSUPPLIESTYPE_SHRINKWRAP = 30,
    PRTMARKERSUPPLIESTYPE_PAPERWRAP = 31,
    PRTMARKERSUPPLIESTYPE_STAPLES = 32,
    PRTMARKERSUPPLIESTYPE_INSERTS = 33,
    PRTMARKERSUPPLIESTYPE_COVERS = 34,
    PRTMARKERSUPPLIESTYPE_MATTETONER = 35,
    PRTMARKERSUPPLIESTYPE_MATTEINK = 36,
    PRTMARKERSUPPLIESTYPE__ULIM = 37,
} PRTMARKERSUPPLIESTYPE_CODE;

#define IS_PRTMARKERSUPPLIESTYPE_VALID(x) \
    ((x) > PRTMARKERSUPPLIESTYPE__LLIM && (x) < PRTMARKERSUPPLIESTYPE__ULIM)

#define IS_PRTMARKERSUPPLIESSUPPLYUNIT_VALID(x) \
        isIntPartOfList(prtMarkerSuppliesSupplyUnit_values, (x))

#define IS_PRTMARKERCOLORANTROLE_VALID(x) \
        isIntPartOfList(prtMarkerColorantRole_values, (x))

#define IS_PRTMEDIAPATHMAXSPEEDPRINTUNIT_VALID(x) \
        isIntPartOfList(prtMediaPathMaxSpeedPrintUnit_values, (x))

typedef enum prtMediaPathType_code {
    PRTMEDIAPATHTYPE__LLIM = 0,
    PRTMEDIAPATHTYPE_OTHER = 1,
    PRTMEDIAPATHTYPE_UNKNOWN = 2,
    PRTMEDIAPATHTYPE_LONGEDGEBINDINGDUPLEX = 3,
    PRTMEDIAPATHTYPE_SHORTEDGEBINDINGDUPLEX = 4,
    PRTMEDIAPATHTYPE_SIMPLEX = 5,
    PRTMEDIAPATHTYPE__ULIM = 6,
} PRTMEDIAPATHTYPE_CODE;

#define IS_PRTMEDIAPATHTYPE_VALID(x) \
    ((x) > PRTMEDIAPATHTYPE__LLIM && (x) < PRTMEDIAPATHTYPE__ULIM)

typedef enum prtInterpreterLangFamily_code {
    PRTINTERPRETERLANGFAMILY__LLIM = 0,
    PRTINTERPRETERLANGFAMILY_OTHER = 1,
    PRTINTERPRETERLANGFAMILY_UNKNOWN = 2,
    PRTINTERPRETERLANGFAMILY_LANGPCL = 3,
    PRTINTERPRETERLANGFAMILY_LANGHPGL = 4,
    PRTINTERPRETERLANGFAMILY_LANGPJL = 5,
    PRTINTERPRETERLANGFAMILY_LANGPS = 6,
    PRTINTERPRETERLANGFAMILY_LANGIPDS = 7,
    PRTINTERPRETERLANGFAMILY_LANGPPDS = 8,
    PRTINTERPRETERLANGFAMILY_LANGESCAPEP = 9,
    PRTINTERPRETERLANGFAMILY_LANGEPSON = 10,
    PRTINTERPRETERLANGFAMILY_LANGDDIF = 11,
    PRTINTERPRETERLANGFAMILY_LANGINTERPRESS = 12,
    PRTINTERPRETERLANGFAMILY_LANGISO6429 = 13,
    PRTINTERPRETERLANGFAMILY_LANGLINEDATA = 14,
    PRTINTERPRETERLANGFAMILY_LANGMODCA = 15,
    PRTINTERPRETERLANGFAMILY_LANGREGIS = 16,
    PRTINTERPRETERLANGFAMILY_LANGSCS = 17,
    PRTINTERPRETERLANGFAMILY_LANGSPDL = 18,
    PRTINTERPRETERLANGFAMILY_LANGTEK4014 = 19,
    PRTINTERPRETERLANGFAMILY_LANGPDS = 20,
    PRTINTERPRETERLANGFAMILY_LANGIGP = 21,
    PRTINTERPRETERLANGFAMILY_LANGCODEV = 22,
    PRTINTERPRETERLANGFAMILY_LANGDSCDSE = 23,
    PRTINTERPRETERLANGFAMILY_LANGWPS = 24,
    PRTINTERPRETERLANGFAMILY_LANGLN03 = 25,
    PRTINTERPRETERLANGFAMILY_LANGCCITT = 26,
    PRTINTERPRETERLANGFAMILY_LANGQUIC = 27,
    PRTINTERPRETERLANGFAMILY_LANGCPAP = 28,
    PRTINTERPRETERLANGFAMILY_LANGDECPPL = 29,
    PRTINTERPRETERLANGFAMILY_LANGSIMPLETEXT = 30,
    PRTINTERPRETERLANGFAMILY_LANGNPAP = 31,
    PRTINTERPRETERLANGFAMILY_LANGDOC = 32,
    PRTINTERPRETERLANGFAMILY_LANGIMPRESS = 33,
    PRTINTERPRETERLANGFAMILY_LANGPINWRITER = 34,
    PRTINTERPRETERLANGFAMILY_LANGNPDL = 35,
    PRTINTERPRETERLANGFAMILY_LANGNEC201PL = 36,
    PRTINTERPRETERLANGFAMILY_LANGAUTOMATIC = 37,
    PRTINTERPRETERLANGFAMILY_LANGPAGES = 38,
    PRTINTERPRETERLANGFAMILY_LANGLIPS = 39,
    PRTINTERPRETERLANGFAMILY_LANGTIFF = 40,
    PRTINTERPRETERLANGFAMILY_LANGDIAGNOSTIC = 41,
    PRTINTERPRETERLANGFAMILY_LANGPSPRINTER = 42,
    PRTINTERPRETERLANGFAMILY_LANGCAPSL = 43,
    PRTINTERPRETERLANGFAMILY_LANGEXCL = 44,
    PRTINTERPRETERLANGFAMILY_LANGLCDS = 45,
    PRTINTERPRETERLANGFAMILY_LANGXES = 46,
    PRTINTERPRETERLANGFAMILY_LANGPCLXL = 47,
    PRTINTERPRETERLANGFAMILY_LANGART = 48,
    PRTINTERPRETERLANGFAMILY_LANGTIPSI = 49,
    PRTINTERPRETERLANGFAMILY_LANGPRESCRIBE = 50,
    PRTINTERPRETERLANGFAMILY_LANGLINEPRINTER = 51,
    PRTINTERPRETERLANGFAMILY_LANGIDP = 52,
    PRTINTERPRETERLANGFAMILY_LANGXJCL = 53,
    PRTINTERPRETERLANGFAMILY_LANGPDF = 54,
    PRTINTERPRETERLANGFAMILY_LANGRPDL = 55,
    PRTINTERPRETERLANGFAMILY_LANGINTERMECIPL = 56,
    PRTINTERPRETERLANGFAMILY_LANGUBIFINGERPRINT = 57,
    PRTINTERPRETERLANGFAMILY_LANGUBIDIRECTPROTOCOL = 58,
    PRTINTERPRETERLANGFAMILY_LANGFUJITSU = 59,
    PRTINTERPRETERLANGFAMILY_LANGCGM = 60,
    PRTINTERPRETERLANGFAMILY_LANGJPEG = 61,
    PRTINTERPRETERLANGFAMILY_LANGCALS1 = 62,
    PRTINTERPRETERLANGFAMILY_LANGCALS2 = 63,
    PRTINTERPRETERLANGFAMILY_LANGNIRS = 64,
    PRTINTERPRETERLANGFAMILY_LANGC4 = 65,
    PRTINTERPRETERLANGFAMILY_LANGXPS = 66,
    PRTINTERPRETERLANGFAMILY_LANGOPENXPS = 67,
    PRTINTERPRETERLANGFAMILY_LANGJDF = 68,
    PRTINTERPRETERLANGFAMILY_LANGJMF = 69,
    PRTINTERPRETERLANGFAMILY_LANGPPML = 70,
    PRTINTERPRETERLANGFAMILY_LANGXHTMLPRINT = 71,
    PRTINTERPRETERLANGFAMILY_LANGPDFIS = 72,
    PRTINTERPRETERLANGFAMILY_LANGPDF13 = 73,
    PRTINTERPRETERLANGFAMILY_LANGPDF14 = 74,
    PRTINTERPRETERLANGFAMILY_LANGPDF15 = 75,
    PRTINTERPRETERLANGFAMILY_LANGPDF16 = 76,
    PRTINTERPRETERLANGFAMILY_LANGPDF17 = 77,
    PRTINTERPRETERLANGFAMILY_LANGPS2 = 78,
    PRTINTERPRETERLANGFAMILY_LANGPS3 = 79,
    PRTINTERPRETERLANGFAMILY_LANGPCL3 = 80,
    PRTINTERPRETERLANGFAMILY_LANGPCL3GUI = 81,
    PRTINTERPRETERLANGFAMILY_LANGPCL5E = 82,
    PRTINTERPRETERLANGFAMILY_LANGPCL5C = 83,
    PRTINTERPRETERLANGFAMILY_LANGPWGRASTER = 84,
    PRTINTERPRETERLANGFAMILY_LANGAPPLERASTER = 85,
    PRTINTERPRETERLANGFAMILY__ULIM = 86,
} PRTINTERPRETERLANGFAMILY_CODE;

#define IS_PRTINTERPRETERLANGFAMILY_VALID(x) \
    ((x) > PRTINTERPRETERLANGFAMILY__LLIM && \
     (x) < PRTINTERPRETERLANGFAMILY__ULIM)

extern int IANACharset_values[];

extern int prtPrintOrientation_values[];

#define IS_PRTPRINTORIENTATION_VALID(x) \
        isIntPartOfList(prtPrintOrientation_values, (x))

typedef enum prtInterpreterTwoWay_code {
    PRTINTERPRETERTWOWAY__LLIM = 2,
    PRTINTERPRETERTWOWAY_YES = 3,
    PRTINTERPRETERTWOWAY_NO = 4,
    PRTINTERPRETERTWOWAY__ULIM = 5,
} PRTINTERPRETERTWOWAY_CODE;

#define IS_PRTINTERPRETERTWOWAY_VALID(x) \
    ((x) > PRTINTERPRETERTWOWAY__LLIM && (x) < PRTINTERPRETERTWOWAY__ULIM)



#ifdef __cplusplus
}
#endif

#endif /** PRINTER_MIB_VALIDATION_H */
